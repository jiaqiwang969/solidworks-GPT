"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[80662],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),c=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),p=c(a),h=n,u=p["".concat(i,".").concat(h)]||p[h]||g[h]||o;return a?r.createElement(u,s(s({ref:t},l),{},{components:a})):r.createElement(u,s({ref:t},l))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=h;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d[p]="string"==typeof e?e:n,s[1]=d;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},82808:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const o={title:"SOLIDWORKS Property Manager Page data changed events handling",caption:"Data Change",description:"Overview of events associated with data change of SOLIDWORKS property manager page handled in SwEx.PMPage framework","toc-group-name":"labs-solidworks-swex",order:2},s=void 0,d={unversionedId:"codestack/labs/solidworks/swex/pmpage/events/data-changed/index",id:"codestack/labs/solidworks/swex/pmpage/events/data-changed/index",title:"SOLIDWORKS Property Manager Page data changed events handling",description:"Overview of events associated with data change of SOLIDWORKS property manager page handled in SwEx.PMPage framework",source:"@site/docs/codestack/labs/solidworks/swex/pmpage/events/data-changed/index.md",sourceDirName:"codestack/labs/solidworks/swex/pmpage/events/data-changed",slug:"/codestack/labs/solidworks/swex/pmpage/events/data-changed/",permalink:"/solidworks-GPT/docs/codestack/labs/solidworks/swex/pmpage/events/data-changed/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/labs/solidworks/swex/pmpage/events/data-changed/index.md",tags:[],version:"current",frontMatter:{title:"SOLIDWORKS Property Manager Page data changed events handling",caption:"Data Change",description:"Overview of events associated with data change of SOLIDWORKS property manager page handled in SwEx.PMPage framework","toc-group-name":"labs-solidworks-swex",order:2},sidebar:"tutorialSidebar",previous:{title:"SOLIDWORKS Property Manager Page closing events handling",permalink:"/solidworks-GPT/docs/codestack/labs/solidworks/swex/pmpage/events/closing/"},next:{title:"Examples and source code for SwEx.PMPage framework",permalink:"/solidworks-GPT/docs/codestack/labs/solidworks/swex/pmpage/examples"}},i={},c=[{value:"Post data changed event",id:"post-data-changed-event",level:2}],l={toc:c},p="wrapper";function g(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"SwEx framework provides event handlers for the data changes in the controls. Use this handlers to update preview or any other state which depends on the values in the controls."),(0,n.kt)("h2",{id:"post-data-changed-event"},"Post data changed event"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.codestack.net/swex/pmpage/html/E_CodeStack_SwEx_PMPage_PropertyManagerPageHandlerEx_DataChanged.htm"},"PropertyManagerPageHandlerEx::DataChanged")," event is raised after the user changed the value in the control which has updated the data model. Refer the bound data model for new values."),(0,n.kt)("p",null,"{% code-snippet { file-name: Events.DataChanged.* } %}"))}g.isMDXComponent=!0}}]);