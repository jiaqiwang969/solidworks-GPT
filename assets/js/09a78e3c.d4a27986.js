"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[43160],{3905:(e,n,o)=>{o.d(n,{Zo:()=>u,kt:()=>w});var i=o(67294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,i)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function s(e,n){if(null==e)return{};var o,i,t=function(e,n){if(null==e)return{};var o,i,t={},r=Object.keys(e);for(i=0;i<r.length;i++)o=r[i],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)o=r[i],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var l=i.createContext({}),c=function(e){var n=i.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},u=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var o=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(o),p=t,w=d["".concat(l,".").concat(p)]||d[p]||m[p]||r;return o?i.createElement(w,a(a({ref:n},u),{},{components:o})):i.createElement(w,a({ref:n},u))}));function w(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=o.length,a=new Array(r);a[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:t,a[1]=s;for(var c=2;c<r;c++)a[c]=o[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,o)}p.displayName="MDXCreateElement"},21519:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=o(87462),t=(o(67294),o(3905));const r={layout:"sw-tool",title:"SOLIDWORKS macro to create configuration with average dimension values",caption:"Create Configuration With Average Dimension Values",description:"Macro will create child configuration where all the dimension will be set to average value based on the minimum and maximum values of the tolerance",image:"sw-dimension-tolerance.png",labels:["average","configuration","dimension","solidworks api","tolerance","utility"],group:"Model","redirect-from":["/2018/03/solidworks-api-dimensions-average-dims.html"]},a=void 0,s={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-average-dimension-values-configuration/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-average-dimension-values-configuration/index",title:"SOLIDWORKS macro to create configuration with average dimension values",description:"Macro will create child configuration where all the dimension will be set to average value based on the minimum and maximum values of the tolerance",source:"@site/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-average-dimension-values-configuration/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-average-dimension-values-configuration",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-average-dimension-values-configuration/",permalink:"/solidworks-GPT/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-average-dimension-values-configuration/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-average-dimension-values-configuration/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"SOLIDWORKS macro to create configuration with average dimension values",caption:"Create Configuration With Average Dimension Values",description:"Macro will create child configuration where all the dimension will be set to average value based on the minimum and maximum values of the tolerance",image:"sw-dimension-tolerance.png",labels:["average","configuration","dimension","solidworks api","tolerance","utility"],group:"Model","redirect-from":["/2018/03/solidworks-api-dimensions-average-dims.html"]},sidebar:"tutorialSidebar",previous:{title:"count all selected components using SOLIDWORKS API",permalink:"/solidworks-GPT/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/count-all-selected-components/"},next:{title:"Create temp solid body box using SOLIDWORKS API and IModeler interface",permalink:"/solidworks-GPT/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/create-box-body/"}},l={},c=[],u={toc:c},d="wrapper";function m(e){let{components:n,...r}=e;return(0,t.kt)(d,(0,i.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"This macro will create child configuration where all the dimension will be set to average value based on the minimum and maximum values of the tolerance using SOLIDWORKS API."),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Dimension Tolerance/Precision group in property manager page",src:o(77042).Z,width:"400",height:"223"}),"{ width=400 }"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\nDim swModel As SldWorks.ModelDoc2\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n        \n        Dim swFeat As SldWorks.Feature\n        \n        Dim activeConfName As String\n        activeConfName = swModel.ConfigurationManager.ActiveConfiguration.Name\n        \n        swModel.ConfigurationManager.AddConfiguration "Average", "", "", 0, activeConfName, ""\n        \n        Set swFeat = swModel.FirstFeature\n        \n        While Not swFeat Is Nothing\n        \n            Dim swDispDim As SldWorks.DisplayDimension\n            Dim swDim As SldWorks.Dimension\n            Dim swDimTol As SldWorks.DimensionTolerance\n        \n            Set swDispDim = swFeat.GetFirstDisplayDimension\n            \n            While Not swDispDim Is Nothing\n            \n                Set swDim = swDispDim.GetDimension2(0)\n                Set swDimTol = swDim.Tolerance\n                \n                If swDimTol.Type <> swTolType_e.swTolNONE Then\n                    \n                    Dim averageVal As Double\n                    \n                    averageVal = swDim.GetSystemValue3(swInConfigurationOpts_e.swThisConfiguration, "")(0) + (swDimTol.GetMinValue + swDimTol.GetMaxValue) / 2\n                    \n                    swDimTol.Type = swTolType_e.swTolNONE\n                    \n                    swDim.SetSystemValue3 averageVal, swInConfigurationOpts_e.swThisConfiguration, ""\n                    \n                End If\n                        \n                Set swDispDim = swFeat.GetNextDisplayDimension(swDispDim)\n                \n            Wend\n            \n            Set swFeat = swFeat.GetNextFeature\n            \n        Wend\n        \n        swModel.EditRebuild3\n    \n    Else\n        MsgBox "Please open the model"\n    End If\n    \nEnd Sub\n\n\n')))}m.isMDXComponent=!0},77042:(e,n,o)=>{o.d(n,{Z:()=>i});const i=o.p+"assets/images/sw-dimension-tolerance-19007c76555e1ce774b3f12b2659635d.png"}}]);