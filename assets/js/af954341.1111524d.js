"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[65767],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>h});var o=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var a=o.createContext({}),l=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},g=function(e){var t=l(e.components);return o.createElement(a.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,a=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=s,h=p["".concat(a,".").concat(d)]||p[d]||u[d]||r;return n?o.createElement(h,c(c({ref:t},g),{},{components:n})):o.createElement(h,c({ref:t},g))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,c=new Array(r);c[0]=d;var i={};for(var a in t)hasOwnProperty.call(t,a)&&(i[a]=t[a]);i.originalType=e,i[p]="string"==typeof e?e:s,c[1]=i;for(var l=2;l<r;l++)c[l]=n[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63021:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var o=n(87462),s=(n(67294),n(3905));const r={title:"Get the total length of segments in selected sketch using SOLIDWORKS API",caption:"Get Total Length Of Sketch Segments",description:"C# example to calculate total length of all non construction geometry sketch segments in the selected sketch using SOLIDWORKS API",image:"sketch-total-length.png",labels:["sketch","length"]},c=void 0,i={unversionedId:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-sketch-segments-total-length/index",id:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-sketch-segments-total-length/index",title:"Get the total length of segments in selected sketch using SOLIDWORKS API",description:"C# example to calculate total length of all non construction geometry sketch segments in the selected sketch using SOLIDWORKS API",source:"@site/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-sketch-segments-total-length/index.md",sourceDirName:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-sketch-segments-total-length",slug:"/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-sketch-segments-total-length/",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-sketch-segments-total-length/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-sketch-segments-total-length/index.md",tags:[],version:"current",frontMatter:{title:"Get the total length of segments in selected sketch using SOLIDWORKS API",caption:"Get Total Length Of Sketch Segments",description:"C# example to calculate total length of all non construction geometry sketch segments in the selected sketch using SOLIDWORKS API",image:"sketch-total-length.png",labels:["sketch","length"]},sidebar:"tutorialSidebar",previous:{title:"Get selected sketch segments info using SOLIDWORKS API",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-selected-sketch-segments-info/"},next:{title:"Get bodies and materials from drawing view using SOLIDWORKS API",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-view-bodies/"}},a={},l=[],g={toc:l},p="wrapper";function u(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,o.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Total length of the selected sketch segments",src:n(69005).Z,width:"668",height:"471"}),"{ width=450 }"),(0,s.kt)("p",null,"This C# example of ",(0,s.kt)("a",{parentName:"p",href:"/docs/codestack/solidworks-api/getting-started/stand-alone/"},"stand-alone console application")," to calculate the total length of all segments in the selected sketch using SOLIDWORKS API. Construction geometry sketch segments are excluded from the calculation."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cs"},'using SolidWorks.Interop.sldworks;\nusing SolidWorks.Interop.swconst;\nusing System;\nusing System.Linq;\n\nnamespace CodeStack\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var app = Activator.CreateInstance(Type.GetTypeFromProgID("SldWorks.Application")) as ISldWorks;\n            app.Visible = true;\n\n            if (app.IActiveDoc2 != null)\n            {\n                var feat = app.IActiveDoc2.ISelectionManager.GetSelectedObject6(1, -1) as IFeature;\n\n                var sketch = feat?.GetSpecificFeature2() as ISketch;\n\n                if (sketch != null)\n                {\n                    var segs = (sketch.GetSketchSegments() as object[])?.Cast<ISketchSegment>();\n\n                    if (segs != null)\n                    {\n                        var totalLength = segs.Where(s => !s.ConstructionGeometry).Sum(s => s.GetLength());\n\n                        app.SendMsgToUser2($"Total length of segments: {totalLength} meters", (int)swMessageBoxIcon_e.swMbInformation, (int)swMessageBoxBtn_e.swMbOk);\n                    }\n                    else\n                    {\n                        throw new NullReferenceException("No segments in the sketch");\n                    }\n                }\n                else\n                {\n                    throw new NullReferenceException("Select sketch");\n                }\n            }\n            else\n            {\n                throw new NullReferenceException("Open document");\n            }\n        }\n    }\n}\n\n')))}u.isMDXComponent=!0},69005:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/sketch-total-length-764709b06ebf398c0871e544700bbe7b.png"}}]);