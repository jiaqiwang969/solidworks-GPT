"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[80662],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>h});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function d(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),l=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=l(e.components);return n.createElement(i.Provider,{value:a},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=l(t),u=r,h=p["".concat(i,".").concat(u)]||p[u]||g[u]||o;return t?n.createElement(h,s(s({ref:a},c),{},{components:t})):n.createElement(h,s({ref:a},c))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=u;var d={};for(var i in a)hasOwnProperty.call(a,i)&&(d[i]=a[i]);d.originalType=e,d[p]="string"==typeof e?e:r,s[1]=d;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},82808:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var n=t(87462),r=(t(67294),t(3905));const o={title:"SOLIDWORKS Property Manager Page data changed events handling",caption:"Data Change",description:"Overview of events associated with data change of SOLIDWORKS property manager page handled in SwEx.PMPage framework","toc-group-name":"labs-solidworks-swex",sidebar_position:0},s=void 0,d={unversionedId:"codestack/labs/solidworks/swex/pmpage/events/data-changed/index",id:"codestack/labs/solidworks/swex/pmpage/events/data-changed/index",title:"SOLIDWORKS Property Manager Page data changed events handling",description:"Overview of events associated with data change of SOLIDWORKS property manager page handled in SwEx.PMPage framework",source:"@site/docs/codestack/labs/solidworks/swex/pmpage/events/data-changed/index.md",sourceDirName:"codestack/labs/solidworks/swex/pmpage/events/data-changed",slug:"/codestack/labs/solidworks/swex/pmpage/events/data-changed/",permalink:"/solidworks-GPT/docs/codestack/labs/solidworks/swex/pmpage/events/data-changed/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/labs/solidworks/swex/pmpage/events/data-changed/index.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"SOLIDWORKS Property Manager Page data changed events handling",caption:"Data Change",description:"Overview of events associated with data change of SOLIDWORKS property manager page handled in SwEx.PMPage framework","toc-group-name":"labs-solidworks-swex",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"SOLIDWORKS Property Manager Page closing events handling",permalink:"/solidworks-GPT/docs/codestack/labs/solidworks/swex/pmpage/events/closing/"},next:{title:"Getting Started with SwEx.PMPage Framework for SOLIDWORKS",permalink:"/solidworks-GPT/docs/codestack/labs/solidworks/swex/pmpage/getting-started/"}},i={},l=[{value:"Post data changed event",id:"post-data-changed-event",level:2}],c={toc:l},p="wrapper";function g(e){let{components:a,...t}=e;return(0,r.kt)(p,(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"SwEx framework provides event handlers for the data changes in the controls. Use this handlers to update preview or any other state which depends on the values in the controls."),(0,r.kt)("h2",{id:"post-data-changed-event"},"Post data changed event"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.codestack.net/swex/pmpage/html/E_CodeStack_SwEx_PMPage_PropertyManagerPageHandlerEx_DataChanged.htm"},"PropertyManagerPageHandlerEx::DataChanged")," event is raised after the user changed the value in the control which has updated the data model. Refer the bound data model for new values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},"Public Class DataModel\n    Public Property Text As String\nEnd Class\n\nPrivate m_Data As DataModel\nPrivate m_Page As PropertyManagerPageEx(Of MyPMPageHandler, DataModel)\n\nPublic Overrides Function OnConnect() As Boolean\n    m_Data = New DataModel\n    m_Page = New PropertyManagerPageEx(Of MyPMPageHandler, DataModel)(App)\n\n    AddHandler m_Page.Handler.DataChanged, AddressOf OnDataChanged\n    Return True\nEnd Function\n\nPrivate Sub OnDataChanged()\n    Dim text = m_Data.Text\n    'TODO: handle the data changing, e.g. update preview\nEnd Sub\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class DataModel\n{\n    public string Text { get; set; }\n}\n\nprivate DataModel m_Data;\n\nprivate PropertyManagerPageEx<MyPMPageHandler, DataModel> m_Page;\n\npublic override bool OnConnect()\n{\n    m_Data = new DataModel();\n    m_Page = new PropertyManagerPageEx<MyPMPageHandler, DataModel>(App);\n\n    m_Page.Handler.DataChanged += OnDataChanged;\n\n    return true;\n}\n\nprivate void OnDataChanged()\n{\n    var text = m_Data.Text;\n    //TODO: handle the data changing, e.g. update preview\n}\n")))}g.isMDXComponent=!0}}]);