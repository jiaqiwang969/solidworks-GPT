"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[68081],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=c(n),p=s,m=f["".concat(u,".").concat(p)]||f[p]||d[p]||a;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[f]="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},85415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(87462),s=(n(67294),n(3905));const a={title:"SOLIDWORKS macro to create and suppress features in new configurations",caption:"Suppress Features In New Configurations",description:"Macro create new configurations for all features  selected in the feature tree and suppresses them one by one in the respective configuration using SOLIDWORKS API",image:"sheet-metal-bends-selection.png",labels:["feature","configuration","suppress"]},o=void 0,i={unversionedId:"codestack-clone/solidworks-api/document/features-manager/create-feature-configurations/index",id:"codestack-clone/solidworks-api/document/features-manager/create-feature-configurations/index",title:"SOLIDWORKS macro to create and suppress features in new configurations",description:"Macro create new configurations for all features  selected in the feature tree and suppresses them one by one in the respective configuration using SOLIDWORKS API",source:"@site/docs/codestack-clone/solidworks-api/document/features-manager/create-feature-configurations/index.md",sourceDirName:"codestack-clone/solidworks-api/document/features-manager/create-feature-configurations",slug:"/codestack-clone/solidworks-api/document/features-manager/create-feature-configurations/",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/document/features-manager/create-feature-configurations/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/solidworks-api/document/features-manager/create-feature-configurations/index.md",tags:[],version:"current",frontMatter:{title:"SOLIDWORKS macro to create and suppress features in new configurations",caption:"Suppress Features In New Configurations",description:"Macro create new configurations for all features  selected in the feature tree and suppresses them one by one in the respective configuration using SOLIDWORKS API",image:"sheet-metal-bends-selection.png",labels:["feature","configuration","suppress"]},sidebar:"tutorialSidebar",previous:{title:"SOLIDWORKS API to create surface loft feature via contours",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/document/features-manager/contrours-surface-loft/"},next:{title:"Create loft feature through selected sketches or curves feature using SOLIDWORKS API",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/document/features-manager/create-loft/"}},u={},c=[{value:"Notes",id:"notes",level:2},{value:"Use cases",id:"use-cases",level:2},{value:"Sheet Metal Bending",id:"sheet-metal-bending",level:3}],l={toc:c},f="wrapper";function d(e){let{components:t,...a}=e;return(0,s.kt)(f,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This macro create new configurations for all features selected in the feature tree and suppresses them one by one in the respective configuration using SOLIDWORKS API."),(0,s.kt)("p",null,"This macro can be useful if it is needed to represents some historical data of the model in the configurations."),(0,s.kt)("h2",{id:"notes"},"Notes"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Configurations created as derived configurations of the active configuration"),(0,s.kt)("li",{parentName:"ul"},"Each configuration named after the feature name"),(0,s.kt)("li",{parentName:"ul"},"Features are processed in the order they have been selected"),(0,s.kt)("li",{parentName:"ul"},"Each feature and all previous features will be suppressed in the respective configuration")),(0,s.kt)("h2",{id:"use-cases"},"Use cases"),(0,s.kt)("h3",{id:"sheet-metal-bending"},"Sheet Metal Bending"),(0,s.kt)("p",null,"This macro can be used to represent the steps of bending of the sheet metal. In this case each configuration will represent the bending step."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Set the sheet metal part to the flattened state"),(0,s.kt)("li",{parentName:"ul"},"Select flatten bends in the order under the ",(0,s.kt)("em",{parentName:"li"},"Flat-Pattern")," feature")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Sheet metal flatten bends",src:n(71637).Z,width:"599",height:"322"}),"{ width=350 }"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Run the macro")),(0,s.kt)("p",null,"As the result sub configurations for each bend are created representing the bending step:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Sheet metal bending steps in the configurations",src:n(59667).Z,width:"600",height:"298"})),(0,s.kt)("p",null,"Refer the ",(0,s.kt)("a",{parentName:"p",href:"/docs/codestack/solidworks-api/motion-study/animate-configurations/"},"Animate Configurations")," for example macro to animate the configurations using SOLIDWORKS API."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n        \n        Dim vFeats As Variant\n        vFeats = GetSelectedFeatures(swModel)\n        \n        Dim swActiveConf As SldWorks.Configuration\n        Set swActiveConf = swModel.ConfigurationManager.ActiveConfiguration\n        \n        Dim i As Integer\n        \n        Dim swFeatsList() As SldWorks.Feature\n        \n        For i = 0 To UBound(vFeats)\n            \n            ReDim Preserve swFeatsList(i)\n            \n            Dim swFeat As SldWorks.Feature\n            Set swFeat = vFeats(i)\n            \n            Set swFeatsList(i) = swFeat\n            \n            If False = SuppressFeaturesInNewConfiguration(swModel, swFeatsList, swFeat.Name, swActiveConf.Name) Then\n                MsgBox "Failed to set the feature state for " & swFeat.Name\n                End\n            End If\n            \n        Next\n        \n        swModel.ShowConfiguration2 swActiveConf.Name\n\n    Else\n        MsgBox "Please open document"\n    End If\n    \nEnd Sub\n\nFunction GetSelectedFeatures(model As SldWorks.ModelDoc2) As Variant\n    \n    Dim swFeatures() As SldWorks.Feature\n    \n    Dim isArrInit As Boolean\n    isArrInit = False\n    \n    Dim swSelMgr As SldWorks.SelectionMgr\n    Dim i As Integer\n    Set swSelMgr = model.SelectionManager\n            \n    For i = 1 To swSelMgr.GetSelectedObjectCount2(-1)\n            \n        On Error Resume Next\n        \n        Dim swFeat As SldWorks.Feature\n        Set swFeat = swSelMgr.GetSelectedObject6(i, -1)\n            \n        If Not swFeat Is Nothing Then\n            If isArrInit Then\n                ReDim Preserve swFeatures(UBound(swFeatures) + 1)\n            Else\n                ReDim swFeatures(0)\n                isArrInit = True\n            End If\n            Set swFeatures(UBound(swFeatures)) = swFeat\n        End If\n        \n    Next\n    \n    GetSelectedFeatures = swFeatures\n    \nEnd Function\n\nFunction SuppressFeaturesInNewConfiguration(model As SldWorks.ModelDoc2, feats As Variant, confName As String, parentConfName As String) As Boolean\n    \n    Dim swFeatConf As SldWorks.Configuration\n    Set swFeatConf = model.ConfigurationManager.AddConfiguration(confName, "", "", swConfigurationOptions2_e.swConfigOption_LinkToParent + swConfigurationOptions2_e.swConfigOption_DontActivate + swConfigurationOptions2_e.swConfigOption_InheritProperties, parentConfName, "")\n    \n    If Not swFeatConf Is Nothing Then\n        \n        Dim i As Integer\n        \n        For i = 0 To UBound(feats)\n            \n            Dim swFeat As SldWorks.Feature\n            Set swFeat = feats(i)\n            \n            Dim confNames(0) As String\n            confNames(0) = swFeatConf.Name\n            \n            If False = swFeat.SetSuppression2(swFeatureSuppressionAction_e.swSuppressFeature, swInConfigurationOpts_e.swSpecifyConfiguration, confNames) Then\n                SuppressFeaturesInNewConfiguration = False\n                Exit Function\n            End If\n        Next\n        SuppressFeaturesInNewConfiguration = True\n    Else\n        SuppressFeaturesInNewConfiguration = False\n        Exit Function\n    End If\n    \nEnd Function\n')))}d.isMDXComponent=!0},59667:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/sheet-metal-bending-412b4851760a344975b6201165a0edee.gif"},71637:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/sheet-metal-bends-selection-e9a5b1e4b9a9c25bf0f675363b73a62b.png"}}]);