"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[98267],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>w});var o=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,s=function(e,n){if(null==e)return{};var t,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=o.createContext({}),l=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return o.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=l(t),m=s,w=d["".concat(p,".").concat(m)]||d[m]||u[m]||r;return t?o.createElement(w,i(i({ref:n},c),{},{components:t})):o.createElement(w,i({ref:n},c))}));function w(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=m;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[d]="string"==typeof e?e:s,i[1]=a;for(var l=2;l<r;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},10350:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=t(87462),s=(t(67294),t(3905));const r={title:"Macro to suspend graphics update using SOLIDWORKS API",caption:"Suspend Graphics Update",description:"Example demonstrates how to suppress graphics update while performing the operations using SOLIDWORKS API",labels:["api","graphics","utility","suspend","performance"]},i=void 0,a={unversionedId:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-graphics-update/index",id:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-graphics-update/index",title:"Macro to suspend graphics update using SOLIDWORKS API",description:"Example demonstrates how to suppress graphics update while performing the operations using SOLIDWORKS API",source:"@site/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-graphics-update/index.md",sourceDirName:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-graphics-update",slug:"/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-graphics-update/",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-graphics-update/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-graphics-update/index.md",tags:[],version:"current",frontMatter:{title:"Macro to suspend graphics update using SOLIDWORKS API",caption:"Suspend Graphics Update",description:"Example demonstrates how to suppress graphics update while performing the operations using SOLIDWORKS API",labels:["api","graphics","utility","suspend","performance"]},sidebar:"tutorialSidebar",previous:{title:"Macro to set SOLIDWORKS document units (length, angle, mass, volume, time)",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/set-units/"},next:{title:"Macro to suspend rebuild operation in SOLIDWORKS model using API",permalink:"/solidworks-GPT/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/suspend-rebuild/"}},p={},l=[],c={toc:l},d="wrapper";function u(e){let{components:n,...t}=e;return(0,s.kt)(d,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This macro demonstrates how to suspend graphics update while performing operations with feature tree and models (including opening of new documents) using SOLIDWORKS API."),(0,s.kt)("p",null,"Macro copies the bodies from the external part into the newly created derived configuration of the active part document."),(0,s.kt)("p",null,"Set the source part path (the part to copy bodies from) via ",(0,s.kt)("em",{parentName:"p"},"SRC_PART")," constant"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const SRC_PART As String = "C:\\Sample.sldprt"\n')),(0,s.kt)("p",null,"Try both options to see the difference by changing the ",(0,s.kt)("em",{parentName:"p"},"SUPPRESS_UPDATES")," constant"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},"Const SUPPRESS_UPDATES As Boolean = True 'True to suppress updates, False to show the updates (default behavior)\n")),(0,s.kt)("p",null,"Macro performs the following steps"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Opens the model with bodies to copy"),(0,s.kt)("li",{parentName:"ul"},"Copies all the bodies into the memory"),(0,s.kt)("li",{parentName:"ul"},"Closes the model"),(0,s.kt)("li",{parentName:"ul"},"Creates new derived configuration in the original model"),(0,s.kt)("li",{parentName:"ul"},"Inserts copied bodies"),(0,s.kt)("li",{parentName:"ul"},"Suppresses the created features in all configurations except of this one"),(0,s.kt)("li",{parentName:"ul"},"Activates the original configuration")),(0,s.kt)("p",null,"If ",(0,s.kt)("em",{parentName:"p"},"SUPPRESS_UPDATES")," option is set to true all of the operations will be hidden and only active state of the model will be shown on screen (i.e. model opening, feature insertion etc. will be invisible)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const SUPPRESS_UPDATES As Boolean = True\n\nConst SRC_PART As String = "C:\\Sample.sldprt"\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If TypeOf swModel Is SldWorks.PartDoc Then\n        \n        On Error GoTo End_\n\n        If SUPPRESS_UPDATES Then\n            SuppressUpdates swModel, True\n        End If\n        \n        Dim activeConfName As String\n        activeConfName = swModel.ConfigurationManager.ActiveConfiguration.Name\n        \n        Dim vBodies As Variant\n        vBodies = GetBodies(SRC_PART)\n        \n        swModel.ConfigurationManager.AddConfiguration2 activeConfName & "_Merged", "", "", swConfigurationOptions2_e.swConfigOption_LinkToParent, activeConfName, "", True\n        \n        Dim i As Integer\n        \n        For i = 0 To UBound(vBodies)\n            Dim swBody As SldWorks.Body2\n            Set swBody = vBodies(i)\n            Dim swFeat As SldWorks.Feature\n            Set swFeat = swModel.CreateFeatureFromBody3(swBody, False, swCreateFeatureBodyOpts_e.swCreateFeatureBodySimplify)\n            swFeat.SetSuppression2 swFeatureSuppressionAction_e.swUnSuppressFeature, swInConfigurationOpts_e.swThisConfiguration, Empty\n        Next\n        \n        swModel.ShowConfiguration2 activeConfName\n\nEnd_: \'restore the flag otherwise all files will be opened invisible\n    \n        If SUPPRESS_UPDATES Then\n            SuppressUpdates swModel, False\n        End If\n        \n    Else\n        MsgBox "Please open part document"\n    End If\n    \nEnd Sub\n\nSub SuppressUpdates(model As SldWorks.ModelDoc2, suppress As Boolean)\n    \n    Dim enable As Boolean\n    enable = Not suppress\n    \n    Dim swView As SldWorks.ModelView\n    Set swView = model.ActiveView\n    \n    swView.EnableGraphicsUpdate = enable\n    \n    model.FeatureManager.EnableFeatureTree = enable\n    model.FeatureManager.EnableFeatureTreeWindow = enable\n        \n    swApp.DocumentVisible enable, swDocumentTypes_e.swDocPART\n    swApp.DocumentVisible enable, swDocumentTypes_e.swDocASSEMBLY\n    swApp.DocumentVisible enable, swDocumentTypes_e.swDocDRAWING\n    \nEnd Sub\n\nFunction GetBodies(path As String) As Variant\n    \n    Dim swPart As SldWorks.PartDoc\n    Set swPart = swApp.OpenDoc6(path, swDocumentTypes_e.swDocPART, _\n        swOpenDocOptions_e.swOpenDocOptions_Silent + swOpenDocOptions_e.swOpenDocOptions_ReadOnly, "", 0, 0)\n    \n    Dim vBodies As Variant\n    vBodies = swPart.GetBodies2(swBodyType_e.swSolidBody, True)\n    \n    If Not IsEmpty(vBodies) Then\n        Dim i As Integer\n        For i = 0 To UBound(vBodies)\n            Dim swBody As SldWorks.Body2\n            Set swBody = vBodies(i)\n            Set vBodies(i) = swBody.Copy\n        Next\n    End If\n    \n    swApp.CloseDoc swPart.GetTitle()\n    \n    GetBodies = vBodies\n    \nEnd Function\n')))}u.isMDXComponent=!0}}]);