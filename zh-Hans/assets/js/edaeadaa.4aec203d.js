"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[93170],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),u=a,g=p["".concat(l,".").concat(u)]||p[u]||m[u]||r;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var d=2;d<r;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},43011:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(87462),a=(n(67294),n(3905));const r={title:"Using SOLIDWORKS PDM API In VBA And VSTA Macros",caption:"Developing Macros",description:"Getting starting with writing VBA and VSTA macros utilizing SOLIDWORKS PDM API",image:"edm-type-library.png",labels:["getting started","vba macros","pdm api"]},o=void 0,s={unversionedId:"codestack/solidworks-pdm-api/getting-started/macros/index",id:"codestack/solidworks-pdm-api/getting-started/macros/index",title:"Using SOLIDWORKS PDM API In VBA And VSTA Macros",description:"Getting starting with writing VBA and VSTA macros utilizing SOLIDWORKS PDM API",source:"@site/docs/codestack/solidworks-pdm-api/getting-started/macros/index.md",sourceDirName:"codestack/solidworks-pdm-api/getting-started/macros",slug:"/codestack/solidworks-pdm-api/getting-started/macros/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-pdm-api/getting-started/macros/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-pdm-api/getting-started/macros/index.md",tags:[],version:"current",frontMatter:{title:"Using SOLIDWORKS PDM API In VBA And VSTA Macros",caption:"Developing Macros",description:"Getting starting with writing VBA and VSTA macros utilizing SOLIDWORKS PDM API",image:"edm-type-library.png",labels:["getting started","vba macros","pdm api"]},sidebar:"tutorialSidebar",previous:{title:"Debugging SOLIDWORKS PDM Add-In - Best Practices",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-pdm-api/getting-started/add-ins/debugging-best-practices/"},next:{title:"Developing stand-alone applications using SOLIDWORKS PDM API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-pdm-api/getting-started/stand-alone/"}},l={},d=[{value:"Connecting to SOLIDWORKS PDM In VBA Macro",id:"connecting-to-solidworks-pdm-in-vba-macro",level:2},{value:"Early Binding",id:"early-binding",level:3},{value:"Late Binding",id:"late-binding",level:3}],c={toc:d},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In some cases it might be beneficial to use SOLIDWORKS PDM API directly from SOLIDWORKS VBA or VSTA macro. In this case you can combine ",(0,a.kt)("a",{parentName:"p",href:"/docs/codestack/solidworks-api/"},"SOLIDWORKS API")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/codestack/solidworks-pdm-api/"},"SOLIDWORKS PDM API")," functions in a single macro."),(0,a.kt)("h2",{id:"connecting-to-solidworks-pdm-in-vba-macro"},"Connecting to SOLIDWORKS PDM In VBA Macro"),(0,a.kt)("p",null,"Macro should be created in the same way as any other VBA macro for SOLIDWORKS. You can also add PDM API code into existing SOLIDWORKS macro if needed."),(0,a.kt)("h3",{id:"early-binding"},"Early Binding"),(0,a.kt)("p",null,"To enable early binding to SOLIDWORKS PDM API (recommended approach), it is required to add the SOLIDWORKS type library under the Tools->References window in VBA Editor."),(0,a.kt)("p",null,"Search for ",(0,a.kt)("em",{parentName:"p"},"PDMWorks Enterprise ","[Year]"," Type Library"),". If this reference is not available in the list use the ",(0,a.kt)("em",{parentName:"p"},"Browse")," button to lookup the file in the installation directory as shown on the image below:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Adding SOLIDWORKS PDM Type Library to the macro references",src:n(35497).Z,width:"544",height:"457"}),"{ width=450 }"),(0,a.kt)("p",null,"Below is a typical initialization routine to connect to the vault. This example will display the standard PDM Login Window if login is required."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb"},'Dim pdmVault As EdmVault5\n\nSub main()\n\n    Set pdmVault = New EdmVault5\n    pdmVault.LoginAuto "MyVault", 0\n    \n    If pdmVault.IsLoggedIn Then\n        \'TODO: Implement the routine            \n    Else\n        Err.Raise vbError, "User is not logged in to the vault"\n    End If\n    \nEnd Sub\n')),(0,a.kt)("p",null,"Alternatively it is possible to login silently by providing login and password."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb"},'pdmVault.Login "admin", "mypassword", "MyVault"\n')),(0,a.kt)("h3",{id:"late-binding"},"Late Binding"),(0,a.kt)("p",null,"Unlike SOLIDWORKS macro, SOLIDWORKS PDM library is not default selection in the references list. When you create new macro this library is not selected and might not be available from the libraries list. This might introduce additional challenges when macro needed to be shared across different machines."),(0,a.kt)("p",null,"In this case it might be beneficial to utilize ",(0,a.kt)("a",{parentName:"p",href:"/docs/codestack/visual-basic/variables/declaration/#early-binding-and-late-binding"},"Late Binding")," to connect to vault and call PDM API. In this case it is not required to add references to the macro in VBA Editor. All PDM objects must be declared as ",(0,a.kt)("a",{parentName:"p",href:"/docs/codestack/visual-basic/variables/standard-types#object"},"Object"),". The functions can still be called in the same way, however intelli-sense will not be available."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb"},'Dim pdmVault As Object\n\nSub main()\n\n    Set pdmVault = CreateObject("ConisioLib.EdmVault")\n\n    pdmVault.LoginAuto "MyVault", 0\n    \n    If pdmVault.IsLoggedIn Then\n        \'TODO: Implement the routine            \n    Else\n        Err.Raise vbError, "User is not logged in to the vault"\n    End If\n    \nEnd Sub\n')))}m.isMDXComponent=!0},35497:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/edm-type-library-73d958fabdff3ee038fb660a641b2cbf.png"}}]);