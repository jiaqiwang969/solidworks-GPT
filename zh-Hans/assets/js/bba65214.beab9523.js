"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[3272],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>w});var o=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,s=function(e,n){if(null==e)return{};var t,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=o.createContext({}),a=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=a(e.components);return o.createElement(i.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=a(t),d=s,w=u["".concat(i,".").concat(d)]||u[d]||m[d]||r;return t?o.createElement(w,c(c({ref:n},p),{},{components:t})):o.createElement(w,c({ref:n},p))}));function w(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,c=new Array(r);c[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:s,c[1]=l;for(var a=2;a<r;a++)c[a]=t[a];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},73469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var o=t(87462),s=(t(67294),t(3905));const r={layout:"sw-tool",title:"count all selected components using SOLIDWORKS API",caption:"Count All Selected Components"},c=void 0,l={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/count-all-selected-components/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/count-all-selected-components/index",title:"count all selected components using SOLIDWORKS API",description:"Macro counts all unique components selected in the assembly and displays the result in the commands bar",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/count-all-selected-components/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/count-all-selected-components",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/count-all-selected-components/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/count-all-selected-components/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/count-all-selected-components/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"count all selected components using SOLIDWORKS API",caption:"Count All Selected Components"},sidebar:"tutorialSidebar",previous:{title:"Macro to copy path of SOLIDWORKS component to clipboard",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/copy-path/"},next:{title:"VBA macro to export component positions to CSV via SOLIDWORKS API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/document/assembly/components/export-positions/"}},i={},a=[],p={toc:a},u="wrapper";function m(e){let{components:n,...r}=e;return(0,s.kt)(u,(0,o.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Macro counts all unique components selected in the assembly and displays the result in the commands bar\nimage: status-bar-selected-comps.png\nlabels: ","[assembly, count components, solidworks api, status bar, utility]","\ngroup: Assembly\nredirect-from:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"/2018/03/solidworks-api-assembly-count-selected-components.html"),(0,s.kt)("li",{parentName:"ul"},"/solidworks-api/document/assembly/count-all-selected-components")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"This macro counts all unique components selected in the assembly using SOLIDWORKS API. Components can be either selected in the features manager tree or in the graphics area."),(0,s.kt)("p",null,"Macro will also count component if only entity of the component is selected (e.g. face or edge) using ",(0,s.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2018/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISelectionMgr.html"},"ISelectionMgr")," SOLIDWORKS API Interface.."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Quantity of selected components displayed in the status bar",src:t(11130).Z,width:"314",height:"320"}),"{ width=320 }"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\nDim swAssy As SldWorks.AssemblyDoc\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Set swAssy = swApp.ActiveDoc\n    \n    If Not swAssy Is Nothing Then\n            \n        Dim swSelMgr As SldWorks.SelectionMgr\n        Set swSelMgr = swAssy.SelectionManager\n        \n        Dim swCompsColl As Collection\n        Set swCompsColl = New Collection\n        \n        Dim i As Integer\n        \n        For i = 0 To swSelMgr.GetSelectedObjectCount2(-1)\n            \n            Dim swComp As SldWorks.Component2\n            Set swComp = swSelMgr.GetSelectedObjectsComponent2(i)\n            \n            If Not swComp Is Nothing Then\n                If Not Contains(swCompsColl, swComp) Then \'get only unique components\n                    swCompsColl.Add swComp\n                End If\n            End If\n            \n        Next\n        \n        Dim swFrame As SldWorks.Frame\n        Set swFrame = swApp.Frame\n        swFrame.SetStatusBarText "Selected " & swCompsColl.Count() & " component(s)"\n    \n    Else\n        MsgBox "Please open assembly"\n    End If\n    \nEnd Sub\n\nFunction Contains(coll As Collection, item As Object) As Boolean\n    \n    Dim i As Integer\n    \n    For i = 1 To coll.Count\n        If coll.item(i) Is item Then\n            Contains = True\n            Exit Function\n        End If\n    Next\n    \n    Contains = False\n    \nEnd Function\n\n')))}m.isMDXComponent=!0},11130:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/status-bar-selected-comps-361f4ce8bf20f1eaa6791dd0aef89bd2.png"}}]);