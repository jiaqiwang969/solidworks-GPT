"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[90864],{3905:(n,e,t)=>{t.d(e,{Zo:()=>d,kt:()=>w});var o=t(67294);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function r(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,o,s=function(n,e){if(null==n)return{};var t,o,s={},i=Object.keys(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)t=i[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var l=o.createContext({}),m=function(n){var e=o.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):r(r({},e),n)),t},d=function(n){var e=m(n.components);return o.createElement(l.Provider,{value:e},n.children)},c="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},p=o.forwardRef((function(n,e){var t=n.components,s=n.mdxType,i=n.originalType,l=n.parentName,d=a(n,["components","mdxType","originalType","parentName"]),c=m(t),p=s,w=c["".concat(l,".").concat(p)]||c[p]||u[p]||i;return t?o.createElement(w,r(r({ref:e},d),{},{components:t})):o.createElement(w,r({ref:e},d))}));function w(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var i=t.length,r=new Array(i);r[0]=p;var a={};for(var l in e)hasOwnProperty.call(e,l)&&(a[l]=e[l]);a.originalType=n,a[c]="string"==typeof n?n:s,r[1]=a;for(var m=2;m<i;m++)r[m]=t[m];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},56557:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>m});var o=t(87462),s=(t(67294),t(3905));const i={layout:"sw-tool",title:"\u4f7f\u7528SOLIDWORKS API\u5236\u4f5c\u914d\u7f6e\u5207\u6362\u52a8\u753b\u7684\u5b8f",image:"animate-configurations.svg",labels:["\u8fd0\u52a8","\u52a8\u753b","\u94a3\u91d1","\u5f2f\u66f2"],group:"\u8fd0\u52a8\u7814\u7a76"},r=void 0,a={unversionedId:"codestack/solidworks-api/motion-study/animate-configurations/index",id:"codestack/solidworks-api/motion-study/animate-configurations/index",title:"\u4f7f\u7528SOLIDWORKS API\u5236\u4f5c\u914d\u7f6e\u5207\u6362\u52a8\u753b\u7684\u5b8f",description:"{% youtube { id: t35Kjjq509w } %}",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/motion-study/animate-configurations/index.md",sourceDirName:"codestack/solidworks-api/motion-study/animate-configurations",slug:"/codestack/solidworks-api/motion-study/animate-configurations/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/motion-study/animate-configurations/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/motion-study/animate-configurations/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"\u4f7f\u7528SOLIDWORKS API\u5236\u4f5c\u914d\u7f6e\u5207\u6362\u52a8\u753b\u7684\u5b8f",image:"animate-configurations.svg",labels:["\u8fd0\u52a8","\u52a8\u753b","\u94a3\u91d1","\u5f2f\u66f2"],group:"\u8fd0\u52a8\u7814\u7a76"},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528SOLIDWORKS API\u81ea\u52a8\u5316\u8fd0\u52a8\u7814\u7a76",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/motion-study/"},next:{title:"troubleshooting",permalink:"/solidworks-GPT/zh-Hans/docs/category/troubleshooting"}},l={},m=[],d={toc:m},c="wrapper";function u(n){let{components:e,...i}=n;return(0,s.kt)(c,(0,o.Z)({},d,i,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"{% youtube { id: t35Kjjq509w } %}"),(0,s.kt)("p",null,"\u8be5\u5b8f\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u4ece\u914d\u7f6e\u4e2d\u521b\u5efa\u52a8\u753b\u3002"),(0,s.kt)("p",null,"\u5f53\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u52a8\u753b\u6765\u8868\u793a\u6a21\u578b\u5386\u53f2\u6216\u94a3\u91d1\u6298\u53e0\u65f6\uff0c\u8fd9\u5c06\u975e\u5e38\u6709\u7528\u3002"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u6253\u5f00\u96f6\u4ef6\u6216\u88c5\u914d\u4f53"),(0,s.kt)("li",{parentName:"ul"},"\u6309\u7167\u5e94\u8be5\u8fdb\u884c\u52a8\u753b\u7684\u987a\u5e8f\u9009\u62e9\u914d\u7f6e")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u5728\u914d\u7f6e\u9009\u9879\u5361\u4e2d\u9009\u62e9\u591a\u4e2a\u914d\u7f6e",src:t(66282).Z,width:"948",height:"427"}),"{ width=350 }"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u5b8f\u3002\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u88c5\u914d\u4f53\uff0c\u5176\u4e2d\u7684\u914d\u7f6e\u8bbe\u7f6e\u4e3a\u52a8\u753b\u6b65\u9aa4\u3002")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u94a3\u91d1\u5f2f\u66f2\u52a8\u753b",src:t(54160).Z,width:"969",height:"768"}),"{ width=450 }"),(0,s.kt)("p",null,"\u5b8f\u53c2\u6570\uff08\u5f2f\u66f2\u8fc7\u6e21\u65f6\u95f4\u548c\u6298\u53e0\u64cd\u4f5c\u4e4b\u95f4\u7684\u6682\u505c\u65f6\u95f4\uff09\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5b8f\u9876\u90e8\u7684\u5e38\u91cf\u6765\u66f4\u6539"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},"Const TRANSITION_TIME As Double = 0.5\nConst PAUSE_TIME As Double = 2\n")),(0,s.kt)("p",null,"\u53c2\u8003",(0,s.kt)("a",{parentName:"p",href:"/docs/codestack/solidworks-api/document/features-manager/create-feature-configurations/"},"\u5728\u65b0\u914d\u7f6e\u4e2d\u7981\u6b62\u7279\u5f81"),"\u4ee5\u83b7\u53d6\u4e00\u4e2a\u4ece\u7279\u5f81\u521b\u5efa\u914d\u7f6e\u7684\u5b8f\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const TRANSITION_TIME As Double = 0.5\nConst PAUSE_TIME As Double = 2\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n    \n    Set swApp = Application.SldWorks\n\n    Dim swModel As SldWorks.ModelDoc2\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n                \n        If swModel.GetPathName() <> "" Then\n                \n            Dim vConfs As Variant\n            vConfs = GetSelectedConfigurations(swModel)\n            \n            If Not IsEmpty(vConfs) Then\n                \n                Dim swAssy As SldWorks.AssemblyDoc\n                 \n                Set swAssy = NewAssembly\n                \n                    If Not swAssy Is Nothing Then\n                    Dim vComps As Variant\n                    vComps = CreateComponents(swAssy, swModel, vConfs)\n                    Dim swMotionStudyMgr As Object\n                    Set swMotionStudyMgr = swAssy.Extension.GetMotionStudyManager()\n                \n                    Dim swMotionStudy As Object\n                    Set swMotionStudy = swMotionStudyMgr.CreateMotionStudy()\n                \n                    CreateFrames swMotionStudy, vComps, TRANSITION_TIME, PAUSE_TIME\n                Else\n                \n                    MsgBox "Failed to create new assembly"\n                End If\n            Else\n                MsgBox "Please select configurations"\n            End If\n            \n        Else\n            MsgBox "Please save document"\n        End If\n        \n    Else\n        MsgBox "Please open part or assembly"\n    End If\n\nEnd Sub\n\nSub CreateFrames(motionStudy As Object, vComps As Variant, transitionTime As Double, pauseTime As Double)\n    \n    Dim i As Integer\n    Dim swCompToHide As SldWorks.Component2\n    Dim swCompToShow As SldWorks.Component2\n        \n    motionStudy.SetTime 0\n    \n    Set swCompToShow = vComps(0)\n    swCompToShow.Visible = True\n    \n    For i = 1 To UBound(vComps)\n        Set swCompToHide = vComps(i)\n        swCompToHide.Visible = False\n    Next\n    \n    Dim curTime As Double\n    curTime = 0\n    \n    For i = 1 To UBound(vComps)\n                \n        Set swCompToHide = vComps(i - 1)\n        Set swCompToShow = vComps(i)\n        \n        motionStudy.SetTime curTime + transitionTime\n        swCompToHide.Visible = False\n        \n        motionStudy.SetTime curTime + transitionTime\n        swCompToShow.Visible = True\n        \n        curTime = i * showTime + i * pauseTime\n        motionStudy.SetTime curTime\n        \n        swCompToShow.Visible = False\n        swCompToShow.Visible = True\n            \n        If i <> UBound(vComps) Then\n        \n            Dim swCompToLock As SldWorks.Component2\n            Set swCompToLock = vComps(i + 1)\n            \n            swCompToLock.Visible = True\n            swCompToLock.Visible = False\n            \n        End If\n        \n    Next\n    \nEnd Sub\n\nFunction CreateComponents(assy As SldWorks.AssemblyDoc, model As SldWorks.ModelDoc2, confs As Variant) As Variant\n    \n    Dim i As Integer\n\n    Dim swComps() As SldWorks.Component2\n    ReDim swComps(UBound(confs))\n    \n    Dim dMatrix(15) As Double\n    dMatrix(0) = 1: dMatrix(1) = 0: dMatrix(2) = 0: dMatrix(3) = 0\n    dMatrix(4) = 1: dMatrix(5) = 0: dMatrix(6) = 0: dMatrix(7) = 0\n    dMatrix(8) = 1: dMatrix(9) = 0: dMatrix(10) = 0: dMatrix(11) = 0\n    dMatrix(12) = 1: dMatrix(13) = 0: dMatrix(14) = 0: dMatrix(15) = 0\n    \n    Dim swMathUtils As SldWorks.MathUtility\n    Set swMathUtils = swApp.GetMathUtility\n    Dim swTransform As SldWorks.MathTransform\n    Set swTransform = swMathUtils.CreateTransform(dMatrix)\n    \n    For i = 0 To UBound(confs)\n\n        Dim swComp As SldWorks.Component2\n        Set swComp = assy.AddComponent5(model.GetPathName(), swAddComponentConfigOptions_e.swAddComponentConfigOptions_CurrentSelectedConfig, "", True, confs(i), 0, 0, 0)\n        swComp.Select4 False, Nothing, False\n        assy.UnfixComponent\n        swComp.Transform2 = swTransform\n        swComp.ReferencedConfiguration = confs(i)\n        swComp.Select4 False, Nothing, False\n        assy.FixComponent\n        Set swComps(i) = swComp\n    Next\n\n    CreateComponents = swComps\n    \nEnd Function\n\nFunction NewAssembly() As SldWorks.AssemblyDoc\n    \n    Dim swAssy As SldWorks.AssemblyDoc\n    \n    Dim assyTemplate As String\n    assyTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplateAssembly)\n    \n    If assyTemplate <> "" Then\n        Set swAssy = swApp.NewDocument(assyTemplate, 0, 0, 0)\n    Else\n        Err.Raise vbObjectError, , "Assembly default template is not specified"\n    End If\n    \n    Set NewAssembly = swAssy\n    \nEnd Function\n\nFunction GetSelectedConfigurations(model As SldWorks.ModelDoc2) As Variant\n    \n    Dim confNames() As String\n    Dim isInit As Boolean\n    \n    Dim swSelMgr As SldWorks.SelectionMgr\n    Set swSelMgr = model.SelectionManager\n    \n    Dim i As Integer\n    \n    For i = 1 To swSelMgr.GetSelectedObjectCount2(-1)\n        \n        Dim swConf As SldWorks.Configuration\n        On Error Resume Next\n        \n        Set swConf = swSelMgr.GetSelectedObject6(i, -1)\n        \n        If Not swConf Is Nothing Then\n            If True = isInit Then\n                ReDim Preserve confNames(UBound(confNames) + 1)\n            Else\n                isInit = True\n                ReDim confNames(0)\n            End If\n            \n            confNames(UBound(confNames)) = swConf.Name\n            \n        End If\n        \n    Next\n    \n    GetSelectedConfigurations = confNames\n    \nEnd Function\n')))}u.isMDXComponent=!0},54160:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/motion-study-configuration-animation-79ffc442c3aa1fde01412f5721407119.png"},66282:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/sheet-metal-bending-animation-5b5ca3e550ddd7450c27d3746aea4d70.png"}}]);