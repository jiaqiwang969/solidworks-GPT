"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[15064],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>w});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),l=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(r),u=n,w=p["".concat(d,".").concat(u)]||p[u]||m[u]||o;return r?a.createElement(w,s(s({ref:t},c),{},{components:r})):a.createElement(w,s({ref:t},c))}));function w(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[p]="string"==typeof e?e:n,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4412:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const o={title:"Storing data in the 3rd party storage (stream) via SwEx.AddIn framework",caption:"Stream",description:"Serializing custom structures into the 3rd party storage (stream) using SwEx.AddIn framework","toc-group-name":"labs-solidworks-swex",order:1},s=void 0,i={unversionedId:"codestack/labs/solidworks/swex/add-in/third-party-data-storage/stream/index",id:"codestack/labs/solidworks/swex/add-in/third-party-data-storage/stream/index",title:"Storing data in the 3rd party storage (stream) via SwEx.AddIn framework",description:"Serializing custom structures into the 3rd party storage (stream) using SwEx.AddIn framework",source:"@site/docs/codestack/labs/solidworks/swex/add-in/third-party-data-storage/stream/index.md",sourceDirName:"codestack/labs/solidworks/swex/add-in/third-party-data-storage/stream",slug:"/codestack/labs/solidworks/swex/add-in/third-party-data-storage/stream/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/labs/solidworks/swex/add-in/third-party-data-storage/stream/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/labs/solidworks/swex/add-in/third-party-data-storage/stream/index.md",tags:[],version:"current",frontMatter:{title:"Storing data in the 3rd party storage (stream) via SwEx.AddIn framework",caption:"Stream",description:"Serializing custom structures into the 3rd party storage (stream) using SwEx.AddIn framework","toc-group-name":"labs-solidworks-swex",order:1},sidebar:"tutorialSidebar",previous:{title:"Storing data in the 3rd party storage store via SwEx.AddIn framework",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/labs/solidworks/swex/add-in/third-party-data-storage/storage/"},next:{title:"Installation and updates of SwEx.AddIn Framework for SOLIDWORKS add-ins",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/labs/solidworks/swex/installation/"}},d={},l=[{value:"Stream Access Handler",id:"stream-access-handler",level:2},{value:"Reading data",id:"reading-data",level:2},{value:"Writing data",id:"writing-data",level:2}],c={toc:l},p="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Call ",(0,n.kt)("a",{parentName:"p",href:"https://docs.codestack.net/swex/add-in/html/M_SolidWorks_Interop_sldworks_ModelDocExtension_Access3rdPartyStream.htm"},"IModelDoc2::Access3rdPartyStream")," extension method to access the 3rd party stream. Pass the boolean parameter to read or write stream."),(0,n.kt)("p",null,"use this approach when it is required to store a single structure at the model."),(0,n.kt)("h2",{id:"stream-access-handler"},"Stream Access Handler"),(0,n.kt)("p",null,"To simplify the handling of the stream lifecycle, use the Documents Manager API from the SwEx.AddIn framework:"),(0,n.kt)("p",null,"{% code-snippet { file-name: ThirdPartyData.StreamHandler.* } %}"),(0,n.kt)("h2",{id:"reading-data"},"Reading data"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.codestack.net/swex/add-in/html/P_CodeStack_SwEx_AddIn_Base_IThirdPartyStreamHandler_Stream.htm"},"IThirdPartyStreamHandler::Stream")," property returns null for the stream which not exists on reading."),(0,n.kt)("p",null,"{% code-snippet { file-name: ThirdPartyData.Stream.StreamLoad.* } %}"),(0,n.kt)("h2",{id:"writing-data"},"Writing data"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.codestack.net/swex/add-in/html/P_CodeStack_SwEx_AddIn_Base_IThirdPartyStreamHandler_Stream.htm"},"IThirdPartyStreamHandler::Stream")," will always return the pointer to the stream (stream is automatically created if it doesn't exist)."),(0,n.kt)("p",null,"{% code-snippet { file-name: ThirdPartyData.Stream.StreamSave.* } %}"))}m.isMDXComponent=!0}}]);