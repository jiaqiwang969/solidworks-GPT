"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[19353],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>m});var s=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,s)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,s,o=function(n,e){if(null==n)return{};var t,s,o={},r=Object.keys(n);for(s=0;s<r.length;s++)t=r[s],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(s=0;s<r.length;s++)t=r[s],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=s.createContext({}),c=function(n){var e=s.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=c(n.components);return s.createElement(l.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return s.createElement(s.Fragment,{},e)}},f=s.forwardRef((function(n,e){var t=n.components,o=n.mdxType,r=n.originalType,l=n.parentName,p=a(n,["components","mdxType","originalType","parentName"]),d=c(t),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||r;return t?s.createElement(m,i(i({ref:e},p),{},{components:t})):s.createElement(m,i({ref:e},p))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var r=t.length,i=new Array(r);i[0]=f;var a={};for(var l in e)hasOwnProperty.call(e,l)&&(a[l]=e[l]);a.originalType=n,a[d]="string"==typeof n?n:o,i[1]=a;for(var c=2;c<r;c++)i[c]=t[c];return s.createElement.apply(null,i)}return s.createElement.apply(null,t)}f.displayName="MDXCreateElement"},62290:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=t(87462),o=(t(67294),t(3905));const r={title:"\u4f7f\u7528SOLIDWORKS API\u521b\u5efa\u6837\u6761\u66f2\u7ebfCSV\u6587\u4ef6\u7684\u5b8f",caption:"\u4eceCSV\u6587\u4ef6\u521b\u5efa\u6837\u6761\u66f2\u7ebf"},i=void 0,a={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-create-spline/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-create-spline/index",title:"\u4f7f\u7528SOLIDWORKS API\u521b\u5efa\u6837\u6761\u66f2\u7ebfCSV\u6587\u4ef6\u7684\u5b8f",description:"\u4f7f\u7528SOLIDWORKS API\u4ece\u52a0\u8f7d\u7684CSV\u6587\u4ef6\u4e2d\u7684\u70b9\u6570\u636e\u521b\u5efa\u6d3b\u52a8\u8349\u56fe\u4e2d\u7684\u6837\u6761\u66f2\u7ebf\u7684VBA\u5b8f",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-create-spline/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-create-spline",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-create-spline/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-create-spline/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-create-spline/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS API\u521b\u5efa\u6837\u6761\u66f2\u7ebfCSV\u6587\u4ef6\u7684\u5b8f",caption:"\u4eceCSV\u6587\u4ef6\u521b\u5efa\u6837\u6761\u66f2\u7ebf"},sidebar:"tutorialSidebar",previous:{title:"Creating C# add-in for SOLIDWORKS automation using API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csharp/"},next:{title:"\u901a\u8fc7SOLIDWORKS API\u4eceCSV\u6587\u4ef6\u5bfc\u5165\u70b9\u4e91\u5230\u8349\u56fe",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/csv-import-points/"}},l={},c=[{value:"labels: csv, sketch, spline",id:"labels-csv-sketch-spline",level:2}],p={toc:c},d="wrapper";function u(n){let{components:e,...r}=n;return(0,o.kt)(d,(0,s.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u4f7f\u7528SOLIDWORKS API\u4ece\u52a0\u8f7d\u7684CSV\u6587\u4ef6\u4e2d\u7684\u70b9\u6570\u636e\u521b\u5efa\u6d3b\u52a8\u8349\u56fe\u4e2d\u7684\u6837\u6761\u66f2\u7ebf\u7684VBA\u5b8f\nimage: spline-pmpage.png"),(0,o.kt)("h2",{id:"labels-csv-sketch-spline"},"labels: ","[csv, sketch, spline]"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"\u5728\u5177\u6709\u5c5e\u6027\u7ba1\u7406\u5668\u9875\u9762\u7684\u8349\u56fe\u4e2d\u7684\u6837\u6761\u66f2\u7ebf",src:t(54339).Z,width:"744",height:"449"})),(0,o.kt)("p",null,"\u8fd9\u4e2aVBA\u5b8f\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u4eceCSV\u6587\u4ef6\u52a0\u8f7d\u70b9\u6570\u636e\u6765\u5728\u6d3b\u52a8\u8349\u56fe\u4e2d\u521b\u5efa\u6837\u6761\u66f2\u7ebf\u3002CSV\u6587\u4ef6\u5e94\u8be5\u5305\u542b3\u5217\uff0c\u7528\u4e8e\u8868\u793a\u6837\u6761\u8282\u70b9\u7684\u5750\u6807\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002",(0,o.kt)("a",{target:"_blank",href:t(6658).Z},"\u4e0b\u8f7d\u793a\u4f8b\u6837\u6761\u6570\u636e")),(0,o.kt)("p",null,"\u5728",(0,o.kt)("strong",{parentName:"p"},"CSV_FILE_PATH"),"\u5e38\u91cf\u4e2d\u6307\u5b9a\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb"},'Const CSV_FILE_PATH As String = "D:\\spline-data.csv"\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n\n    Dim swModel As SldWorks.ModelDoc2\n    Set swModel = swApp.ActiveDoc\n    \n    Dim swSkMgr As SldWorks.SketchManager\n    Set swSkMgr = swModel.SketchManager\n    \n    If Not swSkMgr.ActiveSketch Is Nothing Then\n        \n        Dim vPts As Variant\n        vPts = ReadCsvFile(CSV_FILE_PATH, True)\n        \n        DrawSpline swSkMgr, vPts\n        \n    Else\n        Err.Raise vbError, "", "\u8bf7\u6fc0\u6d3b\u8349\u56fe"\n    End If\n    \nEnd Sub\n\nSub DrawSpline(skMgr As SldWorks.SketchManager, vPoints As Variant)\n    \n    skMgr.AddToDB = True\n    \n    Dim dSplinePts() As Double\n    ReDim dSplinePts((UBound(vPoints) + 1) * 3 - 1)\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(vPoints)\n        \n        Dim vPt As Variant\n        vPt = vPoints(i)\n        \n        Dim x As Double\n        Dim y As Double\n        Dim z As Double\n        \n        If UBound(vPt) >= 0 Then\n            x = vPt(0)\n        End If\n        \n        If UBound(vPt) >= 1 Then\n            y = vPt(1)\n        End If\n        \n        If UBound(vPt) >= 2 Then\n            z = vPt(2)\n        End If\n        \n        dSplinePts(i * 3) = x\n        dSplinePts(i * 3 + 1) = y\n        dSplinePts(i * 3 + 2) = z\n        \n    Next\n    \n    Dim swSkSegment As SldWorks.SketchSegment\n    \n    Set swSkSegment = skMgr.CreateSpline2(dSplinePts, False)\n    \n    If swSkSegment Is Nothing Then\n        Err.Raise vbError, "", "\u65e0\u6cd5\u521b\u5efa\u6837\u6761\u66f2\u7ebf"\n    End If\n    \n    skMgr.AddToDB = False\n    \nEnd Sub\n\nFunction ReadCsvFile(filePath As String, firstRowHeader As Boolean) As Variant\n    \n    \'rows x columns\n    Dim vTable() As Variant\n    \n    Dim fileName As String\n    Dim tableRow As String\n    Dim fileNo As Integer\n\n    fileNo = FreeFile\n    \n    Open filePath For Input As #fileNo\n    \n    Dim isFirstRow As Boolean\n        \n    isFirstRow = True\n    isTableInit = False\n    \n    Do While Not EOF(fileNo)\n        \n        Line Input #fileNo, tableRow\n            \n        If Not isFirstRow Or Not firstRowHeader Then\n            \n            Dim vCells As Variant\n            vCells = Split(tableRow, ",")\n            \n            Dim i As Integer\n            \n            Dim dCells() As Double\n            ReDim dCells(UBound(vCells))\n            \n            For i = 0 To UBound(vCells)\n                dCells(i) = CDbl(vCells(i))\n            Next\n                    \n            If (Not vTable) = -1 Then\n                ReDim vTable(0)\n            Else\n                ReDim Preserve vTable(UBound(vTable) + 1)\n            End If\n                    \n            vTable(UBound(vTable)) = dCells\n            \n        End If\n        \n        If isFirstRow Then\n            isFirstRow = False\n        End If\n    \n    Loop\n    \n    Close #fileNo\n    \n    ReadCsvFile = vTable\n    \nEnd Function\n')))}u.isMDXComponent=!0},6658:(n,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/files/spline-data-10e7cf9347a1a6449b1b6745fb4e35a7.csv"},54339:(n,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/spline-pmpage-09844ce34a910038ee235bc398bb4d25.png"}}]);