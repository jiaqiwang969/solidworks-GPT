"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[4227],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>f});var o=t(67294);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,o,s=function(n,e){if(null==n)return{};var t,o,s={},r=Object.keys(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var i=o.createContext({}),p=function(n){var e=o.useContext(i),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},c=function(n){var e=p(n.components);return o.createElement(i.Provider,{value:e},n.children)},m="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},u=o.forwardRef((function(n,e){var t=n.components,s=n.mdxType,r=n.originalType,i=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),m=p(t),u=s,f=m["".concat(i,".").concat(u)]||m[u]||d[u]||r;return t?o.createElement(f,a(a({ref:e},c),{},{components:t})):o.createElement(f,a({ref:e},c))}));function f(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var r=t.length,a=new Array(r);a[0]=u;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=n,l[m]="string"==typeof n?n:s,a[1]=l;for(var p=2;p<r;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},26798:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=t(87462),s=(t(67294),t(3905));const r={layout:"sw-tool",title:"\u6e05\u9664SOLIDWORKS\u88c5\u914d\u4e2d\u7684\u7ec4\u4ef6\u914d\u7f6e\uff08\u5220\u9664\u6240\u6709\u672a\u4f7f\u7528\u7684\u914d\u7f6e\uff09",image:"purged-components-result1.png",labels:["\u7ec4\u4ef6","\u66ff\u6362","\u6e05\u9664"],group:"\u88c5\u914d"},a=void 0,l={unversionedId:"codestack/solidworks-api/document/assembly/components/purge-configurations/index",id:"codestack/solidworks-api/document/assembly/components/purge-configurations/index",title:"\u6e05\u9664SOLIDWORKS\u88c5\u914d\u4e2d\u7684\u7ec4\u4ef6\u914d\u7f6e\uff08\u5220\u9664\u6240\u6709\u672a\u4f7f\u7528\u7684\u914d\u7f6e\uff09",description:"\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u9700\u8981\u4ece\u88c5\u914d\u4e2d\u5220\u9664\uff08\u6e05\u9664\uff09\u6240\u6709\u672a\u4f7f\u7528\u7684\u7ec4\u4ef6\u914d\u7f6e\u3002\u8fd9\u5bf9\u4e8e\u7d27\u56fa\u4ef6\u6216\u5de5\u5177\u7bb1\u7ec4\u4ef6\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u6587\u4ef6\u4e2d\u53ef\u80fd\u5305\u542b\u6570\u5343\u4e2a\u914d\u7f6e\uff0c\u4f46\u5728\u88c5\u914d\u4e2d\u53ea\u4f7f\u7528\u4e86\u51e0\u4e2a\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/document/assembly/components/purge-configurations/index.md",sourceDirName:"codestack/solidworks-api/document/assembly/components/purge-configurations",slug:"/codestack/solidworks-api/document/assembly/components/purge-configurations/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/assembly/components/purge-configurations/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/document/assembly/components/purge-configurations/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"\u6e05\u9664SOLIDWORKS\u88c5\u914d\u4e2d\u7684\u7ec4\u4ef6\u914d\u7f6e\uff08\u5220\u9664\u6240\u6709\u672a\u4f7f\u7528\u7684\u914d\u7f6e\uff09",image:"purged-components-result1.png",labels:["\u7ec4\u4ef6","\u66ff\u6362","\u6e05\u9664"],group:"\u88c5\u914d"},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528SOLIDWORKS API\u8fdb\u884c\u7ec4\u4ef6\u914d\u7f6e\u6392\u5217\u7684\u5b8f",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/assembly/components/permutation/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u91cd\u547d\u540d\u6c38\u4e45\u548c\u865a\u62df\u7ec4\u4ef6",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/assembly/components/rename/"}},i={},p=[{value:"\u6ce8\u610f\u4e8b\u9879",id:"\u6ce8\u610f\u4e8b\u9879",level:2},{value:"\u9009\u9879",id:"\u9009\u9879",level:2},{value:"\u66ff\u6362\u540d\u79f0",id:"\u66ff\u6362\u540d\u79f0",level:3},{value:"\u5206\u7ec4\u914d\u7f6e",id:"\u5206\u7ec4\u914d\u7f6e",level:3},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:3},{value:"\u9009\u98791",id:"\u9009\u98791",level:3},{value:"\u9009\u98792",id:"\u9009\u98792",level:3}],c={toc:p},m="wrapper";function d(n){let{components:e,...r}=n;return(0,s.kt)(m,(0,o.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u9700\u8981\u4ece\u88c5\u914d\u4e2d\u5220\u9664\uff08\u6e05\u9664\uff09\u6240\u6709\u672a\u4f7f\u7528\u7684\u7ec4\u4ef6\u914d\u7f6e\u3002\u8fd9\u5bf9\u4e8e\u7d27\u56fa\u4ef6\u6216\u5de5\u5177\u7bb1\u7ec4\u4ef6\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u6587\u4ef6\u4e2d\u53ef\u80fd\u5305\u542b\u6570\u5343\u4e2a\u914d\u7f6e\uff0c\u4f46\u5728\u88c5\u914d\u4e2d\u53ea\u4f7f\u7528\u4e86\u51e0\u4e2a\u3002"),(0,s.kt)("p",null,"\u6b64\u5b8f\u5141\u8bb8\u521b\u5efa\u6240\u6709\u9009\u5b9a\u7ec4\u4ef6\u7684\u526f\u672c\uff0c\u6e05\u9664\u5176\u914d\u7f6e\u5e76\u5728\u88c5\u914d\u4e2d\u66ff\u6362\u5b83\u4eec\u3002"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u5f3a\u70c8\u5efa\u8bae\u5728\u4f7f\u7528\u6b64\u5b8f\u4e4b\u524d\u5907\u4efd\u60a8\u7684\u88c5\u914d")),(0,s.kt)("p",null,"\u60a8\u53ef\u4ee5\u624b\u52a8\u9009\u62e9\u7ec4\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528",(0,s.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2016/English/SolidWorks/sldworks/c_Advanced_Component_Selection_SWassy.htm"},"\u9ad8\u7ea7\u7ec4\u4ef6\u9009\u62e9\u5de5\u5177"),"\u6839\u636e\u6761\u4ef6\u9009\u62e9\u7ec4\u4ef6\uff08\u4f8b\u5982\u7d27\u56fa\u4ef6\u6216\u5de5\u5177\u680f\uff09\uff1a"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u901a\u8fc7\u9ad8\u7ea7\u7ec4\u4ef6\u9009\u62e9\u5de5\u5177\u9009\u62e9\u88c5\u914d\u4e2d\u7684\u6240\u6709\u7d27\u56fa\u4ef6\u548c\u5de5\u5177\u7bb1\u90e8\u4ef6",src:t(83715).Z,width:"777",height:"470"})),(0,s.kt)("p",null,"\u8981\u4f7f\u7528\u5176\u4ed6\u6761\u4ef6\uff0c\u8bf7\u4f7f\u7528",(0,s.kt)("a",{parentName:"p",href:"/docs/codestack/solidworks-api/document/assembly/components/advanced-selection/"},"\u6269\u5c55\u7684\u9ad8\u7ea7\u9009\u62e9\u5b8f"),"\u3002"),(0,s.kt)("h2",{id:"\u6ce8\u610f\u4e8b\u9879"},"\u6ce8\u610f\u4e8b\u9879"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u8be5\u5b8f\u4ec5\u9002\u7528\u4e8e\u6c38\u4e45\u7ec4\u4ef6\u3002\u5bf9\u4e8e\u865a\u62df\u7ec4\u4ef6\u5c06\u751f\u6210\u9519\u8bef\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u8be5\u5b8f\u4ec5\u9002\u7528\u4e8e\u57fa\u4e8e\u96f6\u4ef6\uff08*.sldprt\uff09\u7684\u7ec4\u4ef6\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u8be5\u5b8f\u4ec5\u9002\u7528\u4e8e\u5b8c\u5168\u52a0\u8f7d\u7684\u7ec4\u4ef6\uff0c\u4e0d\u652f\u6301\u6291\u5236\u6216\u8f7b\u91cf\u7ea7\u7ec4\u4ef6\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u8be5\u5b8f\u5728\u5904\u7406\u540e\u4e0d\u4fdd\u5b58\u6587\u6863\u3002\u4f7f\u7528\u201c\u5168\u90e8\u4fdd\u5b58\u201d\u4fdd\u5b58\u6240\u6709\u4fee\u6539\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u8be5\u5b8f\u5c06\u6240\u6709\u66ff\u6362\u90e8\u4ef6\u590d\u5236\u5230\u4e0e\u6e90\u90e8\u4ef6\u76f8\u540c\u7684\u4f4d\u7f6e\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5728\u7279\u5f81\u7ba1\u7406\u5668\u6811\u4e2d\u9009\u62e9\u7ec4\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4ece\u56fe\u5f62\u89c6\u56fe\u4e2d\u9009\u62e9\u7ec4\u4ef6\uff08\u8fd8\u53ef\u4ee5\u9009\u62e9\u7ec4\u4ef6\u7684\u4efb\u4f55\u5b9e\u4f53\uff0c\u4f8b\u5982\u9762\u6216\u8fb9\uff09\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u5982\u679c\u5b58\u5728\u8bbe\u8ba1\u8868\uff0c\u5c06\u5220\u9664\u8bbe\u8ba1\u8868\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u521b\u5efa\uff0c\u5219\u4e0d\u4f1a\u66ff\u6362\u73b0\u6709\u6587\u4ef6\uff0c\u5e76\u751f\u6210\u201c\u6587\u4ef6\u5df2\u5b58\u5728\u201d\u9519\u8bef\u3002\u8bf7\u624b\u52a8\u5220\u9664\u6240\u6709\u8fd9\u4e9b\u6587\u4ef6\u3002\u5982\u679c\u5b8f\u5931\u8d25\uff0c\u5219\u53ef\u80fd\u4f1a\u5c06\u5176\u4e2d\u4e00\u4e9b\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5728\u88c5\u914d\u4e2d\u672a\u4f7f\u7528\u3002\u4f7f\u7528\u201c\u5168\u90e8\u5173\u95ed\u201d\u547d\u4ee4\u91ca\u653e\u8fd9\u4e9b\u6587\u4ef6\u3002"),(0,s.kt)("li",{parentName:"ul"},"\u5c06\u91cd\u65b0\u8fde\u63a5\u7ea6\u675f\u3002")),(0,s.kt)("h2",{id:"\u9009\u9879"},"\u9009\u9879"),(0,s.kt)("h3",{id:"\u66ff\u6362\u540d\u79f0"},"\u66ff\u6362\u540d\u79f0"),(0,s.kt)("p",null,"\u901a\u8fc7\u66f4\u6539",(0,s.kt)("em",{parentName:"p"},"REPLACEMENT_NAME"),"\u5e38\u91cf\u6765\u6307\u5b9a\u66ff\u6362\u6587\u4ef6\u7684\u540d\u79f0\u3002\u4f7f\u7528\u5e26\u6709","[","title","]","\u548c","[","conf","]","\u5360\u4f4d\u7b26\u7684\u81ea\u7531\u6587\u672c\uff0c\u5b83\u4eec\u5c06\u5206\u522b\u66ff\u6362\u4e3a\u6e90\u6587\u4ef6\u7684\u6807\u9898\u548c\u7ec4\u4ef6\u7684\u5f15\u7528\u914d\u7f6e\u3002\u5982\u679c\u5c06",(0,s.kt)("em",{parentName:"p"},"GROUP_BY_CONFIGURATIONS"),"\u9009\u9879\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219","[","conf","]","\u5360\u4f4d\u7b26\u5c06\u88ab\u6240\u6709\u914d\u7f6e\u540d\u79f0\u7684\u8fde\u63a5\u66ff\u6362\uff0c\u7528_\u7b26\u53f7\u5206\u9694\u3002"),(0,s.kt)("h3",{id:"\u5206\u7ec4\u914d\u7f6e"},"\u5206\u7ec4\u914d\u7f6e"),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"GROUP_BY_CONFIGURATIONS"),"\u9009\u9879\u5141\u8bb8\u6307\u5b9a\u662f\u5426\u5e94\u66ff\u6362\u5f15\u7528\u540c\u4e00\u6587\u6863\u7684\u4e0d\u540c\u914d\u7f6e\u7684\u7ec4\u4ef6\u4e3a\u5355\u4e2a\u7ec4\u4ef6\uff0c\u8fd8\u662f\u5e94\u4e3a\u6bcf\u4e2a\u7ec4\u4ef6\u521b\u5efa\u65b0\u7684\u5355\u4e2a\u914d\u7f6e\u90e8\u4ef6\u3002"),(0,s.kt)("h3",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u7ec4\u4ef6\u7684\u672a\u4f7f\u7528\u914d\u7f6e",src:t(81512).Z,width:"749",height:"406"})),(0,s.kt)("p",null,"\u67092\u4e2a\u5177\u6709\u591a\u4e2a\u914d\u7f6e\u7684\u6587\u4ef6"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Part1.sldprt\u5305\u542b4\u4e2a\u914d\u7f6e\uff1a\u9ed8\u8ba4\uff0c2\uff0c3\u548c4"),(0,s.kt)("li",{parentName:"ul"},"Part2.sldprt\u5305\u542b\u7531\u8bbe\u8ba1\u8868\u9a71\u52a8\u76846\u4e2a\u914d\u7f6e\uff1a\u9ed8\u8ba4\uff0cA\uff0cB\uff0cC\uff0cD\uff0cE"),(0,s.kt)("li",{parentName:"ul"},"Part1\u5728\u914d\u7f6e\u9ed8\u8ba4\u548c4\u4e2d\u653e\u7f6e\u5230\u88c5\u914d\u4e2d2\u6b21"),(0,s.kt)("li",{parentName:"ul"},"Part2\u5728\u914d\u7f6eA\u548cB\u4e2d\u653e\u7f6e\u5230\u88c5\u914d\u4e2d2\u6b21")),(0,s.kt)("p",null,"\u7528\u6237\u9009\u62e9\u524d3\u4e2a\u7ec4\u4ef6\u5e76\u8fd0\u884c\u5b8f\u3002\u6839\u636e\u6307\u5b9a\u7684\u8bbe\u7f6e\uff0c\u5c06\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c"),(0,s.kt)("h3",{id:"\u9009\u98791"},"\u9009\u98791"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const GROUP_BY_CONFIGURATIONS As Boolean = False\nConst REPLACEMENT_NAME As String = "[title]_[conf]"\n')),(0,s.kt)("p",null,"\u7ed3\u679c\u5c06\u751f\u62103\u4e2a\u5177\u6709\u5355\u4e2a\u914d\u7f6e\u7684\u65b0\u6587\u4ef6\uff1aPart1_Default.sldprt\uff0cPart1_4.sldprt\uff0cPart2_A.sldprt\uff08\u8bbe\u8ba1\u8868\u5df2\u5220\u9664\uff09\uff0c\u5e76\u66ff\u6362\u6240\u6709\u9009\u5b9a\u7684\u7ec4\u4ef6\u3002\u7b2c4\u4e2a\u7ec4\u4ef6\u4e0d\u4f1a\u66f4\u6539\uff0c\u56e0\u4e3a\u6700\u521d\u672a\u9009\u62e9\u5b83\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u6e05\u9664\u7ec4\u4ef6\u7684\u7ed3\u679c",src:t(98628).Z,width:"559",height:"316"})),(0,s.kt)("h3",{id:"\u9009\u98792"},"\u9009\u98792"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const GROUP_BY_CONFIGURATIONS As Boolean = True\nConst REPLACEMENT_NAME As String = "[title]_[conf]_replacement"\n')),(0,s.kt)("p",null,"\u7ed3\u679c\u5c06\u751f\u62102\u4e2a\u65b0\u6587\u4ef6\uff1aPart1_Default_4_replacement.sldprt\uff08\u5177\u67092\u4e2a\u914d\u7f6e\uff09\uff0cPart2_A_replacement.sldprt\uff08\u8bbe\u8ba1\u8868\u5df2\u5220\u9664\uff09\uff0c\u5e76\u66ff\u6362\u6240\u6709\u9009\u5b9a\u7684\u7ec4\u4ef6\u3002\u7b2c4\u4e2a\u7ec4\u4ef6\u4e0d\u4f1a\u66f4\u6539\uff0c\u56e0\u4e3a\u6700\u521d\u672a\u9009\u62e9\u5b83\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u6e05\u9664\u7ec4\u4ef6\u7684\u7b2c\u4e8c\u4e2a\u7ed3\u679c",src:t(51929).Z,width:"811",height:"306"})),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const GROUP_BY_CONFIGURATIONS As Boolean = False\nConst REPLACEMENT_NAME As String = "[title]_[conf]"\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \ntry:\n    On Error GoTo catch\n    \n    Dim swAssy As SldWorks.AssemblyDoc\n    \n    Set swAssy = swApp.ActiveDoc\n    \n    If Not swAssy Is Nothing Then\n        \n        Dim vComps As Variant\n        vComps = GetReplacementComponents(swAssy)\n        \n        Dim swCompGroups As Object\n        Set swCompGroups = GroupByModel(vComps)\n        \n        Dim replacementsMap As Object\n\n        Set replacementsMap = CreateReplacementModels(swCompGroups)\n        \n        ReplaceComponents swAssy, vComps, replacementsMap\n        \n    Else\n        Err.Raise vbError, "", "\u6253\u5f00\u88c5\u914d\u6587\u6863"\n    End If\n    \n    GoTo finally\n    \ncatch:\n    swApp.SendMsgToUser2 Err.Description, swMessageBoxIcon_e.swMbStop, swMessageBoxBtn_e.swMbOk\nfinally:\n    \nEnd Sub\n\nSub ReplaceComponents(assy As SldWorks.AssemblyDoc, comps As Variant, replacementMap As Object)\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(comps)\n        \n        Dim swComp As SldWorks.Component2\n        Set swComp = comps(i)\n        \n        Dim srcKey As String\n        \n        srcKey = swComp.GetModelDoc2().GetPathName\n        \n        If Not GROUP_BY_CONFIGURATIONS Then\n            srcKey = srcKey & "::" & swComp.ReferencedConfiguration\n        End If\n        \n        If False <> swComp.Select4(False, Nothing, False) Then\n            Dim fileName As String\n            fileName = replacementMap.item(srcKey)\n            \n            If False = assy.ReplaceComponents2(fileName, swComp.ReferencedConfiguration, False, swReplaceComponentsConfiguration_e.swReplaceComponentsConfiguration_MatchName, True) Then\n                Err.Raise vbError, "", "\u65e0\u6cd5\u66ff\u6362\u7ec4\u4ef6 " & swComp.Name2\n            End If\n            \n        Else\n            Err.Raise vbError, "", ""\n        End If\n        \n    Next\n    \nEnd Sub\n\nFunction CreateReplacementModels(modelsMap As Object) As Object\n    \n    Const PLACEHOLDER_TITLE As String = "[title]"\n    Const PLACEHOLDER_CONF As String = "[conf]"\n\n    Dim replacementsMap As Object\n    Set replacementsMap = CreateObject("Scripting.Dictionary")\n    \n    Dim i As Integer\n    \n    Dim vModels As Variant\n    vModels = modelsMap.keys\n    \n    For i = 0 To UBound(vModels)\n        \n        Dim swModel As SldWorks.ModelDoc2\n        Set swModel = vModels(i)\n        \n        Dim refConfs As Collection\n        Set refConfs = modelsMap.item(swModel)\n        \n        Dim path As String\n        Dim dir As String\n        Dim title As String\n        \n        path = swModel.GetPathName\n        title = Mid(path, InStrRev(path, "\\") + 1, InStrRev(path, ".") - InStrRev(path, "\\") - 1)\n        dir = Left(path, InStrRev(path, "\\"))\n        \n        Dim newTitle As String\n        Dim newPath As String\n        Dim j As Integer\n        \n        If GROUP_BY_CONFIGURATIONS Then\n            \n            Dim confs As String\n            confs = ""\n            For j = 1 To refConfs.Count\n                confs = confs & refConfs(j) & IIf(j <> refConfs.Count, "_", "")\n            Next\n            \n            newTitle = Replace(REPLACEMENT_NAME, PLACEHOLDER_TITLE, title)\n            newTitle = Replace(newTitle, PLACEHOLDER_CONF, confs)\n            newPath = dir & newTitle & ".sldprt"\n            \n            CreateFileCopy path, newPath\n            \n            RemoveConfigurations newPath, refConfs\n            replacementsMap.Add path, newPath\n        Else\n            For j = 1 To refConfs.Count\n                \n                newTitle = Replace(REPLACEMENT_NAME, PLACEHOLDER_TITLE, title)\n                newTitle = Replace(newTitle, PLACEHOLDER_CONF, refConfs(j))\n                newPath = dir & newTitle & ".sldprt"\n                \n                CreateFileCopy path, newPath\n                \n                Dim keepConf As Collection\n                Set keepConf = New Collection\n                keepConf.Add refConfs(j)\n                \n                RemoveConfigurations newPath, keepConf\n                replacementsMap.Add path & "::" & refConfs(j), newPath\n            Next\n        End If\n        \n    Next\n    \n    Set CreateReplacementModels = replacementsMap\n    \nEnd Function\n\nSub CreateFileCopy(srcFile As String, destFile As String)\n    \n    Dim fso As Object\n    Set fso = CreateObject("Scripting.FileSystemObject")\n\n    fso.CopyFile srcFile, destFile, False\n    \nEnd Sub\n\nSub RemoveConfigurations(filePath As String, confsToKeep As Collection)\n    \ntry:\n    On Error GoTo catch\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Dim swDocSpec As SldWorks.DocumentSpecification\n    Set swDocSpec = swApp.GetOpenDocSpec(filePath)\n    \n    swApp.DocumentVisible False, swDocumentTypes_e.swDocPART\n    Set swModel = swApp.OpenDoc7(swDocSpec)\n    swApp.DocumentVisible True, swDocumentTypes_e.swDocPART\n    \n    swModel.ShowConfiguration2 confsToKeep(1)\n    \n    Dim vConfNames As Variant\n    \n    vConfNames = swModel.GetConfigurationNames\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(vConfNames)\n        \n        Dim confName As String\n        confName = CStr(vConfNames(i))\n        \n        If Not CollectionContains(confsToKeep, confName) Then\n            swModel.DeleteConfiguration2 confName\n        End If\n        \n    Next\n    \n    If False <> swModel.Extension.HasDesignTable() Then\n        swModel.DeleteDesignTable\n    End If\n    \n    GoTo finally\n    \ncatch:\n    swApp.DocumentVisible True, swDocumentTypes_e.swDocPART\n    Err.Raise Err.Number, Err.Source, Err.Description\nfinally:\n    \nEnd Sub\n\nFunction GroupByModel(comps As Variant) As Object\n    \n    Dim modelsMap As Object\n    Set modelsMap = CreateObject("Scripting.Dictionary")\n    \n    Dim refConfNames As Collection\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(comps)\n        \n        Dim swComp As SldWorks.Component2\n        Set swComp = comps(i)\n        \n        Dim swCompModel As SldWorks.ModelDoc2\n        Set swCompModel = swComp.GetModelDoc2\n        \n        If Not modelsMap.exists(swCompModel) Then\n            Set refConfNames = New Collection\n            refConfNames.Add swComp.ReferencedConfiguration\n            modelsMap.Add swCompModel, refConfNames\n        Else\n            Set refConfNames = modelsMap.item(swCompModel)\n            \n            If Not CollectionContains(refConfNames, swComp.ReferencedConfiguration) Then\n                refConfNames.Add swComp.ReferencedConfiguration\n            End If\n        End If\n    Next\n    \n    Set GroupByModel = modelsMap\n    \nEnd Function\n\nFunction GetReplacementComponents(model As SldWorks.ModelDoc2) As Variant\n    \n    Dim swComps() As SldWorks.Component2\n    Dim isInit As Boolean\n    \n    Dim i As Integer\n    \n    Dim swSelMgr As SldWorks.SelectionMgr\n    Set swSelMgr = model.SelectionManager\n    \n    For i = 1 To swSelMgr.GetSelectedObjectCount2(-1)\n        \n        Dim swComp As SldWorks.Component2\n        Set swComp = swSelMgr.GetSelectedObjectsComponent4(i, -1)\n        \n        If False = swComp.IsVirtual Then\n        \n            Dim swCompModel As SldWorks.ModelDoc2\n            Set swCompModel = swComp.GetModelDoc2\n            \n            If swCompModel Is Nothing Then\n                Err.Raise vbError, "", "\u65e0\u6cd5\u4ece\u7ec4\u4ef6\u83b7\u53d6\u6587\u6863\uff1a" & swComp.Name2 & "\u3002\u786e\u4fdd\u7ec4\u4ef6\u5df2\u5b8c\u5168\u89e3\u6790\u4e14\u672a\u6291\u5236"\n            End If\n            \n            If Not TypeOf swCompModel Is SldWorks.PartDoc Then\n                Err.Raise vbError, "", "\u4ec5\u652f\u6301\u96f6\u4ef6\u7ec4\u4ef6"\n            End If\n            \n            If isInit Then\n                If Not Contains(swComps, swComp) Then\n                    ReDim Preserve swComps(UBound(swComps) + 1)\n                    Set swComps(UBound(swComps)) = swComp\n                End If\n            Else\n                ReDim swComps(0)\n                Set swComps(0) = swComp\n                isInit = True\n            End If\n            \n        Else\n            Err.Raise vbError, "", "\u4e0d\u652f\u6301\u865a\u62df\u7ec4\u4ef6"\n        End If\n        \n    Next\n    \n    If isInit Then\n        GetReplacementComponents = swComps\n    Else\n        GetReplacementComponents = Empty\n    End If\n    \nEnd Function\n\nFunction Contains(arr As Variant, item As Object) As Boolean\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(arr)\n        If arr(i) Is item Then\n            Contains = True\n            Exit Function\n        End If\n    Next\n    \n    Contains = False\n    \nEnd Function\n\nFunction CollectionContains(coll As Collection, item As String) As Boolean\n    \n    Dim i As Integer\n    \n    For i = 1 To coll.Count\n        If LCase(coll.item(i)) = LCase(item) Then\n            CollectionContains = True\n            Exit Function\n        End If\n    Next\n    \n    CollectionContains = False\n    \nEnd Function\n')))}d.isMDXComponent=!0},83715:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/advanced-component-selection-a20f632f7f18c000a16a8429c4acdb16.png"},81512:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/components-configurations-fe4c3292ae3ff855a75963b636e05c84.png"},98628:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/purged-components-result1-67bab00970c89a09261dd3d21e93e7cb.png"},51929:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/purged-components-result2-7372b26a4f0b26fcb105bde4e4a2ba41.png"}}]);