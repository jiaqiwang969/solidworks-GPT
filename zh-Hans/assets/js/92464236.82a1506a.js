"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[9166],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var o=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=o.createContext({}),c=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(a.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),u=i,h=p["".concat(a,".").concat(u)]||p[u]||m[u]||r;return t?o.createElement(h,s(s({ref:n},d),{},{components:t})):o.createElement(h,s({ref:n},d))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=u;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l[p]="string"==typeof e?e:i,s[1]=l;for(var c=2;c<r;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},48153:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=t(87462),i=(t(67294),t(3905));const r={layout:"sw-macro-fix",title:"Fix the inconsistent model title extension in SOLIDWORKS API",caption:"Model Title Inconsistency Displaying Extension",description:"Fixing the Run-time Error '5' - Invalid procedure call or argument error when running a macro which is using the title of the model (e.g. inserting the note, linking the custom property value, generating new file name for exporting)",image:"invalid-procedure-or-call-error.png",labels:["macro","troubleshooting"],"redirect-from":["/2018/04/macro-troubleshooting--model-title-inconsistency-displaying-extension.html"]},s=void 0,l={unversionedId:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/model-title-inconsistency-displaying-extension/index",id:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/model-title-inconsistency-displaying-extension/index",title:"Fix the inconsistent model title extension in SOLIDWORKS API",description:"Fixing the Run-time Error '5' - Invalid procedure call or argument error when running a macro which is using the title of the model (e.g. inserting the note, linking the custom property value, generating new file name for exporting)",source:"@site/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/model-title-inconsistency-displaying-extension/index.md",sourceDirName:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/model-title-inconsistency-displaying-extension",slug:"/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/model-title-inconsistency-displaying-extension/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/model-title-inconsistency-displaying-extension/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/model-title-inconsistency-displaying-extension/index.md",tags:[],version:"current",frontMatter:{layout:"sw-macro-fix",title:"Fix the inconsistent model title extension in SOLIDWORKS API",caption:"Model Title Inconsistency Displaying Extension",description:"Fixing the Run-time Error '5' - Invalid procedure call or argument error when running a macro which is using the title of the model (e.g. inserting the note, linking the custom property value, generating new file name for exporting)",image:"invalid-procedure-or-call-error.png",labels:["macro","troubleshooting"],"redirect-from":["/2018/04/macro-troubleshooting--model-title-inconsistency-displaying-extension.html"]},sidebar:"tutorialSidebar",previous:{title:"How to fix Missing SOLIDWORKS Type Library References error",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/missing-solidworks-type-library-references/"},next:{title:"SOLIDWORKS macro error when preconditions are not met",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/macros/preconditions-not-met/"}},a={},c=[{value:"Symptoms",id:"symptoms",level:2},{value:"Cause",id:"cause",level:2},{value:"Resolution",id:"resolution",level:2}],d={toc:c},p="wrapper";function m(e){let{components:n,...r}=e;return(0,i.kt)(p,(0,o.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"symptoms"},"Symptoms"),(0,i.kt)("p",null,"SOLIDWORKS macro is using the title of the model (e.g. inserting the note, linking the custom property value, generating new file name for exporting).\nAs the result macro misbehaves (inserting extension twice) or displays the error: ",(0,i.kt)("em",{parentName:"p"},"Run-time Error '5': Invalid procedure call or argument"),"  "),(0,i.kt)("p",null,"The extension is extracted from the document title via ",(0,i.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2018/english/api/sldworksapi/solidworks.interop.sldworks~solidworks.interop.sldworks.imodeldoc2~gettitle.html"},"IModelDoc2::GetTitle")," SOLIDWORKS API method."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Run-time Error &#39;5&#39;: Invalid procedure call or argument error when running a macro",src:t(38986).Z,width:"640",height:"212"}),"{ width=640 height=211 }"),(0,i.kt)("h2",{id:"cause"},"Cause"),(0,i.kt)("p",null,"There are several factors which affect the way title is displayed to the user:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Extension visibility in the model's title is displayed based on the windows setting ",(0,i.kt)("em",{parentName:"li"},"'Hide extension for known file types'"),".\nDepending on this setting title of the model can either include or exclude extension (e.g. ",(0,i.kt)("em",{parentName:"li"},"Part1 "),"or ",(0,i.kt)("em",{parentName:"li"},"Part1.sldprt"),")  ")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Hide extensions for known file types option in Windows explorer",src:t(43890).Z,width:"278",height:"320"}),"{ width=277 height=320 }"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For the newly created files (i.e. files which were never saved) extension is never displayed"),(0,i.kt)("li",{parentName:"ul"},"For drawings the title is a composition of a name and the active sheet. The extension is never displayed for drawings")),(0,i.kt)("h2",{id:"resolution"},"Resolution"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Change the setting based on the macro requirement"),(0,i.kt)("li",{parentName:"ul"},"Modify the macro code to consider both options. The example below provides two functions to get the title with or without extension regardless of the conditions.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\nDim swModel As SldWorks.ModelDoc2\n\nSub main()\n\n    Set swApp = Application.SldWorks\n\n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n    \n        Debug.Print GetTitleWithoutExtension(swModel)\n        Debug.Print GetTitleWithExtension(swModel)\n        \n    Else\n        MsgBox "Please open the model"\n    End If\n    \nEnd Sub\n\nFunction GetTitleWithExtension(model As SldWorks.ModelDoc2) As String\n    \n    Dim title As String\n    Dim ext As String\n    \n    Select Case model.GetType\n        Case swDocumentTypes_e.swDocPART\n            ext = ".sldprt"\n        Case swDocumentTypes_e.swDocASSEMBLY\n            ext = ".sldasm"\n        Case swDocumentTypes_e.swDocDRAWING\n            ext = ".slddrw"\n    End Select\n    \n    If model.GetPathName() = "" Then\n        title = model.GetTitle + ext \'extension is not shown for file which is not saved\n    Else\n        If IsExtensionShown() Then\n            title = model.GetTitle\n        Else\n            title = model.GetTitle + ext\n        End If\n    End If\n    \n    If model.GetType() = swDocumentTypes_e.swDocDRAWING Then\n        title = model.GetTitle() \'drawing extension never included into the title\n        title = Left(title, InStrRev(title, "-") - 2) + ext \'removing the sheet name from the drawing title\n    End If\n    \n    GetTitleWithExtension = title\n    \nEnd Function\n\nFunction GetTitleWithoutExtension(model As SldWorks.ModelDoc2) As String\n    \n    Const EXT_PATTERN = ".sldxxx"\n    \n    Dim title As String\n    \n    If model.GetPathName() = "" Then\n        title = model.GetTitle \'extension is not shown for file which is not saved\n    Else\n        If IsExtensionShown() Then\n            title = model.GetTitle\n            title = Left(title, Len(title) - Len(EXT_PATTERN))\n        Else\n            title = model.GetTitle\n        End If\n    End If\n    \n    If model.GetType() = swDocumentTypes_e.swDocDRAWING Then\n        title = Left(title, InStrRev(title, "-") - 2)\n    End If\n    \n    GetTitleWithoutExtension = title\n    \nEnd Function\n\nFunction IsExtensionShown() As Boolean\n\n    Const REG_KEY As String = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\HideFileExt"\n    Const UNCHECKED As Integer = 0\n    \n    Dim wshShell As Object\n    Set wshShell = CreateObject("WScript.Shell")\n    \n    IsExtensionShown = wshShell.RegRead(REG_KEY) = UNCHECKED\n\nEnd Function\n')))}m.isMDXComponent=!0},43890:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/hide-extensions-for-known-file-types-a637cfe14668c70c8058174ea1c549a1.png"},38986:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/invalid-procedure-or-call-error-6dad17977cc838541c8e42dccf63de2b.png"}}]);