"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[95764],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var o=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,s=function(e,n){if(null==e)return{};var t,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=o.createContext({}),l=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return o.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},w=o.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=l(t),w=s,m=u["".concat(p,".").concat(w)]||u[w]||d[w]||r;return t?o.createElement(m,i(i({ref:n},c),{},{components:t})):o.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=w;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[u]="string"==typeof e?e:s,i[1]=a;for(var l=2;l<r;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}w.displayName="MDXCreateElement"},39339:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=t(87462),s=(t(67294),t(3905));const r={title:"\u4f7f\u7528SOLIDWORKS API\u6682\u505c\u56fe\u5f62\u66f4\u65b0\u7684\u5b8f",caption:"\u6682\u505c\u56fe\u5f62\u66f4\u65b0"},i=void 0,a={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-graphics-update/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-graphics-update/index",title:"\u4f7f\u7528SOLIDWORKS API\u6682\u505c\u56fe\u5f62\u66f4\u65b0\u7684\u5b8f",description:"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u5728\u4f7f\u7528SOLIDWORKS API\u6267\u884c\u64cd\u4f5c\u65f6\u7981\u6b62\u56fe\u5f62\u66f4\u65b0\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-graphics-update/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-graphics-update",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-graphics-update/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-graphics-update/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-graphics-update/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS API\u6682\u505c\u56fe\u5f62\u66f4\u65b0\u7684\u5b8f",caption:"\u6682\u505c\u56fe\u5f62\u66f4\u65b0"},sidebar:"tutorialSidebar",previous:{title:"SOLIDWORKS VBA\u5b8f\u590d\u5236\u9884\u9009\u9762",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/surface-offset-equal/"},next:{title:"\u4f7f\u7528API\u5728SOLIDWORKS\u6a21\u578b\u4e2d\u6682\u505c\u91cd\u5efa\u64cd\u4f5c\u7684\u5b8f",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/suspend-rebuild/"}},p={},l=[{value:"labels: api, graphics, utility, suspend, performance",id:"labels-api-graphics-utility-suspend-performance",level:2}],c={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,s.kt)(u,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u5728\u4f7f\u7528SOLIDWORKS API\u6267\u884c\u64cd\u4f5c\u65f6\u7981\u6b62\u56fe\u5f62\u66f4\u65b0\u3002"),(0,s.kt)("h2",{id:"labels-api-graphics-utility-suspend-performance"},"labels: ","[api, graphics, utility, suspend, performance]"),(0,s.kt)("p",null,"\u8be5\u5b8f\u6f14\u793a\u4e86\u5982\u4f55\u5728\u4f7f\u7528\u7279\u5f81\u6811\u548c\u6a21\u578b\uff08\u5305\u62ec\u6253\u5f00\u65b0\u6587\u6863\uff09\u8fdb\u884c\u64cd\u4f5c\u65f6\u6682\u505c\u56fe\u5f62\u66f4\u65b0\uff0c\u4f7f\u7528SOLIDWORKS API\u3002"),(0,s.kt)("p",null,"\u8be5\u5b8f\u5c06\u5916\u90e8\u96f6\u4ef6\u4e2d\u7684\u5b9e\u4f53\u590d\u5236\u5230\u6d3b\u52a8\u96f6\u4ef6\u6587\u6863\u7684\u65b0\u521b\u5efa\u7684\u6d3e\u751f\u914d\u7f6e\u4e2d\u3002"),(0,s.kt)("p",null,"\u901a\u8fc7 ",(0,s.kt)("em",{parentName:"p"},"SRC_PART")," \u5e38\u91cf\u8bbe\u7f6e\u6e90\u96f6\u4ef6\u8def\u5f84\uff08\u8981\u4ece\u4e2d\u590d\u5236\u5b9e\u4f53\u7684\u96f6\u4ef6\uff09\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const SRC_PART As String = "C:\\Sample.sldprt"\n')),(0,s.kt)("p",null,"\u901a\u8fc7\u66f4\u6539 ",(0,s.kt)("em",{parentName:"p"},"SUPPRESS_UPDATES")," \u5e38\u91cf\u5c1d\u8bd5\u4e24\u4e2a\u9009\u9879\u4ee5\u67e5\u770b\u5dee\u5f02\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},"Const SUPPRESS_UPDATES As Boolean = True 'True\u8868\u793a\u7981\u6b62\u66f4\u65b0\uff0cFalse\u8868\u793a\u663e\u793a\u66f4\u65b0\uff08\u9ed8\u8ba4\u884c\u4e3a\uff09\n")),(0,s.kt)("p",null,"\u8be5\u5b8f\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u6253\u5f00\u5177\u6709\u8981\u590d\u5236\u7684\u5b9e\u4f53\u7684\u6a21\u578b"),(0,s.kt)("li",{parentName:"ul"},"\u5c06\u6240\u6709\u5b9e\u4f53\u590d\u5236\u5230\u5185\u5b58\u4e2d"),(0,s.kt)("li",{parentName:"ul"},"\u5173\u95ed\u6a21\u578b"),(0,s.kt)("li",{parentName:"ul"},"\u5728\u539f\u59cb\u6a21\u578b\u4e2d\u521b\u5efa\u65b0\u7684\u6d3e\u751f\u914d\u7f6e"),(0,s.kt)("li",{parentName:"ul"},"\u63d2\u5165\u590d\u5236\u7684\u5b9e\u4f53"),(0,s.kt)("li",{parentName:"ul"},"\u5728\u9664\u6b64\u914d\u7f6e\u4e4b\u5916\u7684\u6240\u6709\u914d\u7f6e\u4e2d\u7981\u6b62\u521b\u5efa\u7684\u7279\u5f81"),(0,s.kt)("li",{parentName:"ul"},"\u6fc0\u6d3b\u539f\u59cb\u914d\u7f6e")),(0,s.kt)("p",null,"\u5982\u679c\u5c06 ",(0,s.kt)("em",{parentName:"p"},"SUPPRESS_UPDATES")," \u9009\u9879\u8bbe\u7f6e\u4e3a true\uff0c\u5219\u6240\u6709\u64cd\u4f5c\u90fd\u5c06\u88ab\u9690\u85cf\uff0c\u5c4f\u5e55\u4e0a\u53ea\u4f1a\u663e\u793a\u6a21\u578b\u7684\u6d3b\u52a8\u72b6\u6001\uff08\u5373\u6a21\u578b\u6253\u5f00\u3001\u7279\u5f81\u63d2\u5165\u7b49\u5c06\u4e0d\u53ef\u89c1\uff09\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const SUPPRESS_UPDATES As Boolean = True\n\nConst SRC_PART As String = "C:\\Sample.sldprt"\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If TypeOf swModel Is SldWorks.PartDoc Then\n        \n        On Error GoTo End_\n\n        If SUPPRESS_UPDATES Then\n            SuppressUpdates swModel, True\n        End If\n        \n        Dim activeConfName As String\n        activeConfName = swModel.ConfigurationManager.ActiveConfiguration.Name\n        \n        Dim vBodies As Variant\n        vBodies = GetBodies(SRC_PART)\n        \n        swModel.ConfigurationManager.AddConfiguration2 activeConfName & "_Merged", "", "", swConfigurationOptions2_e.swConfigOption_LinkToParent, activeConfName, "", True\n        \n        Dim i As Integer\n        \n        For i = 0 To UBound(vBodies)\n            Dim swBody As SldWorks.Body2\n            Set swBody = vBodies(i)\n            Dim swFeat As SldWorks.Feature\n            Set swFeat = swModel.CreateFeatureFromBody3(swBody, False, swCreateFeatureBodyOpts_e.swCreateFeatureBodySimplify)\n            swFeat.SetSuppression2 swFeatureSuppressionAction_e.swUnSuppressFeature, swInConfigurationOpts_e.swThisConfiguration, Empty\n        Next\n        \n        swModel.ShowConfiguration2 activeConfName\n\nEnd_: \'\u6062\u590d\u6807\u5fd7\uff0c\u5426\u5219\u6240\u6709\u6587\u4ef6\u90fd\u5c06\u4ee5\u4e0d\u53ef\u89c1\u72b6\u6001\u6253\u5f00\n    \n        If SUPPRESS_UPDATES Then\n            SuppressUpdates swModel, False\n        End If\n        \n    Else\n        MsgBox "\u8bf7\u6253\u5f00\u96f6\u4ef6\u6587\u6863"\n    End If\n    \nEnd Sub\n\nSub SuppressUpdates(model As SldWorks.ModelDoc2, suppress As Boolean)\n    \n    Dim enable As Boolean\n    enable = Not suppress\n    \n    Dim swView As SldWorks.ModelView\n    Set swView = model.ActiveView\n    \n    swView.EnableGraphicsUpdate = enable\n    \n    model.FeatureManager.EnableFeatureTree = enable\n    model.FeatureManager.EnableFeatureTreeWindow = enable\n        \n    swApp.DocumentVisible enable, swDocumentTypes_e.swDocPART\n    swApp.DocumentVisible enable, swDocumentTypes_e.swDocASSEMBLY\n    swApp.DocumentVisible enable, swDocumentTypes_e.swDocDRAWING\n    \nEnd Sub\n\nFunction GetBodies(path As String) As Variant\n    \n    Dim swPart As SldWorks.PartDoc\n    Set swPart = swApp.OpenDoc6(path, swDocumentTypes_e.swDocPART, _\n        swOpenDocOptions_e.swOpenDocOptions_Silent + swOpenDocOptions_e.swOpenDocOptions_ReadOnly, "", 0, 0)\n    \n    Dim vBodies As Variant\n    vBodies = swPart.GetBodies2(swBodyType_e.swSolidBody, True)\n    \n    If Not IsEmpty(vBodies) Then\n        Dim i As Integer\n        For i = 0 To UBound(vBodies)\n            Dim swBody As SldWorks.Body2\n            Set swBody = vBodies(i)\n            Set vBodies(i) = swBody.Copy\n        Next\n    End If\n    \n    swApp.CloseDoc swPart.GetTitle()\n    \n    GetBodies = vBodies\n    \nEnd Function\n')))}d.isMDXComponent=!0}}]);