"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[20136],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>g});var r=n(67294);function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){s(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,s=function(t,e){if(null==t)return{};var n,r,s={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(s[n]=t[n]);return s}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(s[n]=t[n])}return s}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,s=t.mdxType,a=t.originalType,l=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),d=p(n),m=s,g=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(g,o(o({ref:e},u),{},{components:n})):r.createElement(g,o({ref:e},u))}));function g(t,e){var n=arguments,s=e&&e.mdxType;if("string"==typeof t||s){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i[d]="string"==typeof t?t:s,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},26541:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(87462),s=(n(67294),n(3905));const a={image:"linked-sheet-metal-cut-list-properties.png"},o=void 0,i={unversionedId:"codestack/solidworks-api/data-storage/custom-properties/link-sheet-metal/index",id:"codestack/solidworks-api/data-storage/custom-properties/link-sheet-metal/index",title:"index",description:"\u94fe\u63a5\u7684\u94a3\u91d1\u5207\u5272\u6e05\u5355\u81ea\u5b9a\u4e49\u5c5e\u6027{ width=800 }",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/data-storage/custom-properties/link-sheet-metal/index.md",sourceDirName:"codestack/solidworks-api/data-storage/custom-properties/link-sheet-metal",slug:"/codestack/solidworks-api/data-storage/custom-properties/link-sheet-metal/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/data-storage/custom-properties/link-sheet-metal/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/data-storage/custom-properties/link-sheet-metal/index.md",tags:[],version:"current",frontMatter:{image:"linked-sheet-metal-cut-list-properties.png"},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528SOLIDWORKS API\u5904\u7406\u81ea\u5b9a\u4e49\u5c5e\u6027\u4fee\u6539\u4e8b\u4ef6\uff08\u6dfb\u52a0\u3001\u5220\u9664\u3001\u66f4\u6539\uff09",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/data-storage/custom-properties/handle-events/"},next:{title:"index",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/data-storage/custom-properties/link-to-file/"}},l={},p=[{value:"\u6ce8\u610f\u4e8b\u9879\u548c\u9650\u5236",id:"\u6ce8\u610f\u4e8b\u9879\u548c\u9650\u5236",level:2}],u={toc:p},d="wrapper";function c(t){let{components:e,...a}=t;return(0,s.kt)(d,(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u94fe\u63a5\u7684\u94a3\u91d1\u5207\u5272\u6e05\u5355\u81ea\u5b9a\u4e49\u5c5e\u6027",src:n(82122).Z,width:"1517",height:"718"}),"{ width=800 }"),(0,s.kt)("p",null,"\u6b64VBA\u5b8f\u5141\u8bb8\u5c06\u94a3\u91d1\u96f6\u4ef6\u7684\u6307\u5b9a\u5207\u5272\u6e05\u5355\u81ea\u5b9a\u4e49\u5c5e\u6027\u94fe\u63a5\u5230SOLIDWORKS\u6587\u4ef6\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002"),(0,s.kt)("p",null,"\u81ea\u5b9a\u4e49\u5c5e\u6027\u5c06\u901a\u8fc7\u516c\u5f0f\u94fe\u63a5\uff0c\u5e76\u5728\u94a3\u91d1\u7684\u51e0\u4f55\u5f62\u72b6\u53d1\u751f\u66f4\u6539\u65f6\u81ea\u52a8\u66f4\u65b0\u3002"),(0,s.kt)("p",null,"\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u56de\u9000\u503c\uff0c\u5982\u679c\u6e90\u96f6\u4ef6\u4e0d\u662f\u94a3\u91d1\u6587\u6863\uff0c\u5219\u5c06\u5176\u5199\u5165\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002"),(0,s.kt)("p",null,"\u4e3a\u4e86\u81ea\u5b9a\u4e49\u5c5e\u6027\u6620\u5c04\uff0c\u8bf7\u5728",(0,s.kt)("strong",{parentName:"p"},"Init"),"\u51fd\u6570\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u6620\u5c04\u503c\uff0c\u5982\u4e0b\u6240\u793a\u3002"),(0,s.kt)("p",null,"\u5728\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff08",(0,s.kt)("strong",{parentName:"p"},"\u56de\u9000\u503c"),"\uff09\u4e2d\u6307\u5b9a\u8868\u8fbe\u5f0f\u65f6\uff0c\u9700\u8981\u7528\u5176\u4ed6",(0,s.kt)("strong",{parentName:"p"},'"'),"\uff08\u5f15\u53f7\uff09\u8f6c\u4e49",(0,s.kt)("strong",{parentName:"p"},'"'),"\uff08\u5f15\u53f7\uff09\u3002\u4f8b\u5982\uff0cSOLIDWORKS\u8d28\u91cf\u7684\u516c\u5f0f\u662f",(0,s.kt)("strong",{parentName:"p"},'"SW-Mass"'),"\uff0c\u5982\u679c\u9700\u8981\u5c06\u5176\u8bbe\u7f6e\u4e3a\u56de\u9000\u503c\uff0c\u5219\u7b2c\u4e09\u4e2a\u53c2\u6570\u5e94\u4e3a",(0,s.kt)("strong",{parentName:"p"},'"""SW-Mass"""'),"\uff0c\u5176\u4e2d\u5916\u90e8\u5f15\u53f7\u662f\u8868\u793a",(0,s.kt)("a",{parentName:"p",href:"/docs/codestack/visual-basic/variables/standard-types#string"},"VBA\u5b57\u7b26\u4e32\u503c"),"\u7684\u5f15\u53f7"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Sub Init(Optional dummy As Variant = Empty)\n    \n    Set Map = New Collection\n    \n    Map.Add CreateMapValue("\u96f6\u4ef6\u7f16\u53f7", "", "") \'\u6dfb\u52a0\u7a7a\u7684\'\u96f6\u4ef6\u7f16\u53f7\'\u81ea\u5b9a\u4e49\u5c5e\u6027\n    Map.Add CreateMapValue("\u5bbd\u5ea6", "\u5305\u56f4\u76d2\u5bbd\u5ea6", "") \'\u6dfb\u52a0\u6765\u81ea\u94a3\u91d1\u7684\'\u5305\u56f4\u76d2\u5bbd\u5ea6\'\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\'\u5bbd\u5ea6\'\uff0c\u5982\u679c\u4e0d\u662f\u94a3\u91d1\u96f6\u4ef6\uff0c\u5219\u4e3a\u7a7a\n    Map.Add CreateMapValue("\u6750\u6599", "", """SW-Material""") \'\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5c5e\u6027\'\u6750\u6599\'\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\'SW-Material\'\u516c\u5f0f\uff0c\u65e0\u8bba\u8fd9\u662f\u5426\u662f\u94a3\u91d1\u96f6\u4ef6\n        \nEnd Sub\n')),(0,s.kt)("h2",{id:"\u6ce8\u610f\u4e8b\u9879\u548c\u9650\u5236"},"\u6ce8\u610f\u4e8b\u9879\u548c\u9650\u5236"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u4ec5\u652f\u6301\u5355\u4e2a\u5207\u5272\u6e05\u5355\u6587\u4ef6\uff08\u5982\u679c\u6709\u591a\u4e2a\u5207\u5272\u6e05\u5355\uff0c\u5219\u4f1a\u5f15\u53d1\u9519\u8bef\uff09"),(0,s.kt)("li",{parentName:"ul"},"\u5b8f\u5c06\u5728\u5207\u5272\u6e05\u5355\u6587\u4ef6\u5939\u4e0a\u8bbe\u7f6e",(0,s.kt)("strong",{parentName:"li"},"\u81ea\u52a8\u521b\u5efa\u5207\u5272\u6e05\u5355"),"\u548c",(0,s.kt)("strong",{parentName:"li"},"\u81ea\u52a8\u66f4\u65b0"),"\u9009\u9879"),(0,s.kt)("li",{parentName:"ul"},"\u4ec5\u652f\u6301\u96f6\u4ef6\u6587\u6863"),(0,s.kt)("li",{parentName:"ul"},"\u5207\u5272\u6e05\u5355\u81ea\u5b9a\u4e49\u5c5e\u6027\u901a\u8fc7\u8868\u8fbe\u5f0f\u548c\u5207\u5272\u6e05\u5355\u540d\u79f0\u8fdb\u884c\u94fe\u63a5\u3002\u5982\u679c\u91cd\u547d\u540d\u5207\u5272\u6e05\u5355\uff0c\u5219\u5c5e\u6027\u5c06\u4e0d\u4f1a\u66f4\u65b0\uff0c\u9700\u8981\u91cd\u65b0\u8fd0\u884c\u5b8f\u3002\u4f46\u662f\uff0c\u5982\u679c\u5207\u5272\u6e05\u5355\u4fdd\u6301\u539f\u59cb\u540d\u79f0\uff0c\u5219\u6240\u6709\u5c5e\u6027\u5c06\u52a8\u6001\u66f4\u65b0\uff0c\u65e0\u9700\u91cd\u65b0\u8fd0\u884c\u5b8f\u3002")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\n\nDim Map As Collection\n\nSub Init(Optional dummy As Variant = Empty)\n    \n    Set Map = New Collection\n    \n    Map.Add CreateMapValue("\u957f\u5ea6", "\u5305\u56f4\u76d2\u957f\u5ea6", """D1@Boss-Extrude1""")\n    Map.Add CreateMapValue("\u8d28\u91cf", "\u8d28\u91cf", """SW-Mass""")\n    Map.Add CreateMapValue("\u8868\u9762\u79ef", "", """SW-SurfaceArea""")\n        \nEnd Sub\n\nFunction CreateMapValue(targetPrpName As String, srcCutListPrpName As String, Optional fallbackValue As String = "") As Variant\n    \n    CreateMapValue = Array(targetPrpName, srcCutListPrpName, fallbackValue)\n    \nEnd Function\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swPart As SldWorks.ModelDoc2\n    \n    Set swPart = swApp.ActiveDoc\n    \n    If swPart Is Nothing Then\n        Err.Raise vbError, "", "\u6253\u5f00\u96f6\u4ef6\u6587\u6863"\n    End If\n    \n    If swPart.GetType() <> swDocumentTypes_e.swDocPART Then\n        Err.Raise vbError, "", "\u6d3b\u52a8\u6587\u6863\u4e0d\u662f\u96f6\u4ef6"\n    End If\n    \n    Init\n    \n    Dim vCutLists As Variant\n    vCutLists = GetCutLists(swPart)\n    \n    Dim swCutListCustomPrpMgr As SldWorks.CustomPropertyManager\n    \n    If Not IsEmpty(vCutLists) Then\n        \n        If UBound(vCutLists) > 0 Then\n            Err.Raise vbError, "", "\u4ec5\u652f\u6301\u5355\u4e2a\u5207\u5272\u6e05\u5355\u9879"\n        End If\n        \n        Dim swCutList As SldWorks.Feature\n        \n        Set swCutList = vCutLists(0)\n        \n        Dim swCutListFolder As SldWorks.BodyFolder\n        Set swCutListFolder = swCutList.GetSpecificFeature2\n        \n        Dim swBody As SldWorks.Body2\n        Set swBody = swCutListFolder.GetBodies()(0)\n        \n        If False <> swBody.IsSheetMetal() Then\n            Set swCutListCustomPrpMgr = swCutList.CustomPropertyManager\n        End If\n        \n    End If\n    \n    Dim swTargetCustPrpMgr As SldWorks.CustomPropertyManager\n    Set swTargetCustPrpMgr = swPart.Extension.CustomPropertyManager("")\n    \n    Dim i As Integer\n    \n    For i = 1 To Map.Count\n    \n        Dim targetPrpName As String\n        Dim srcCutListPrpName As String\n        Dim fallbackValue As String\n        \n        targetPrpName = CStr(Map.item(i)(0))\n        srcCutListPrpName = CStr(Map.item(i)(1))\n        fallbackValue = CStr(Map.item(i)(2))\n        \n        CopyProperty swCutListCustomPrpMgr, swTargetCustPrpMgr, targetPrpName, srcCutListPrpName, fallbackValue\n    Next\n    \nEnd Sub\n\nFunction GetCutLists(model As SldWorks.ModelDoc2) As Variant\n\n    Dim swFeat As SldWorks.Feature\n    \n    Dim swCutLists() As SldWorks.Feature\n    \n    Set swFeat = model.FirstFeature\n    \n    While Not swFeat Is Nothing\n        \n        If swFeat.GetTypeName2 <> "HistoryFolder" Then\n        \n            ProcessFeature swFeat, swCutLists\n            \n            TraverseSubFeatures swFeat, swCutLists\n        \n        End If\n        \n        Set swFeat = swFeat.GetNextFeature\n        \n    Wend\n    \n    If (Not swCutLists) = -1 Then\n        GetCutLists = Empty\n    Else\n        GetCutLists = swCutLists\n    End If\n    \nEnd Function\n\nSub TraverseSubFeatures(parentFeat As SldWorks.Feature, cutLists() As SldWorks.Feature)\n    \n    Dim swChildFeat As SldWorks.Feature\n    Set swChildFeat = parentFeat.GetFirstSubFeature\n    \n    While Not swChildFeat Is Nothing\n        ProcessFeature swChildFeat, cutLists\n        Set swChildFeat = swChildFeat.GetNextSubFeature()\n    Wend\n    \nEnd Sub\n\nSub ProcessFeature(feat As SldWorks.Feature, cutLists() As SldWorks.Feature)\n    \n    If feat.GetTypeName2() = "SolidBodyFolder" Then\n        \n        Dim swBodyFolder As SldWorks.BodyFolder\n        Set swBodyFolder = feat.GetSpecificFeature2\n        \n        swBodyFolder.SetAutomaticCutList True\n        swBodyFolder.SetAutomaticUpdate True\n        swBodyFolder.UpdateCutList\n        \n    ElseIf feat.GetTypeName2() = "CutListFolder" Then\n        \n        If Not Contains(cutLists, feat) Then\n            If (Not cutLists) = -1 Then\n                ReDim cutLists(0)\n            Else\n                ReDim Preserve cutLists(UBound(cutLists) + 1)\n            End If\n            \n            Set cutLists(UBound(cutLists)) = feat\n        End If\n        \n    End If\n    \nEnd Sub\n\nFunction Contains(arr As Variant, item As Object) As Boolean\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(arr)\n        If arr(i) Is item Then\n            Contains = True\n            Exit Function\n        End If\n    Next\n    \n    Contains = False\n    \nEnd Function\n\nSub CopyProperty(srcPrpMgr As SldWorks.CustomPropertyManager, targPrpMgr As SldWorks.CustomPropertyManager, targetPrpName As String, srcCutListPrpName As String, fallbackValue As String)\n\n    Dim prpVal As String\n    \n    If Not srcPrpMgr Is Nothing And srcCutListPrpName <> "" Then\n    \n        Dim prpResVal As String\n                    \n        srcPrpMgr.Get5 srcCutListPrpName, False, prpVal, prpResVal, False\n    Else\n        prpVal = fallbackValue\n    End If\n    \n    targPrpMgr.Add2 targetPrpName, swCustomInfoType_e.swCustomInfoText, prpVal\n    targPrpMgr.Set targetPrpName, prpVal\n    \nEnd Sub\n')))}c.isMDXComponent=!0},82122:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/linked-sheet-metal-cut-list-properties-eadf814fe0ebf7805b166d8ac694f63b.png"}}]);