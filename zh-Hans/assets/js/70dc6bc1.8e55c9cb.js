"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[55872],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return t?o.createElement(f,i(i({ref:n},p),{},{components:t})):o.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},61684:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const a={layout:"sw-tool",title:"Export part to Parasolid via Document Manager API (without SOLIDWORKS)",caption:"Export Part File To Parasolid",description:"Power Shell script to export part file to parasolid format (.xmp_bin) from command line via Document Manager API (without SOLIDWORKS)",image:"export-parasolid.svg",labels:["export","parasolid"],group:"Import/Export"},i=void 0,s={unversionedId:"codestack/solidworks-document-manager-api/document/export-parasolid/index",id:"codestack/solidworks-document-manager-api/document/export-parasolid/index",title:"Export part to Parasolid via Document Manager API (without SOLIDWORKS)",description:"Power Shell script to export part file to parasolid format (.xmp_bin) from command line via Document Manager API (without SOLIDWORKS)",source:"@site/docs/codestack/solidworks-document-manager-api/document/export-parasolid/index.md",sourceDirName:"codestack/solidworks-document-manager-api/document/export-parasolid",slug:"/codestack/solidworks-document-manager-api/document/export-parasolid/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/document/export-parasolid/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-document-manager-api/document/export-parasolid/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"Export part to Parasolid via Document Manager API (without SOLIDWORKS)",caption:"Export Part File To Parasolid",description:"Power Shell script to export part file to parasolid format (.xmp_bin) from command line via Document Manager API (without SOLIDWORKS)",image:"export-parasolid.svg",labels:["export","parasolid"],group:"Import/Export"},sidebar:"tutorialSidebar",previous:{title:"Add watermark to model using 3rd party storage via SOLIDWORKS Document Manager API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/document/data-storage/third-party/add-watermark/"},next:{title:"Get all external references of document using SOLIDWORKS Document Manager API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/document/get-external-references/"}},l={},c=[{value:"Configuration and usage instructions",id:"configuration-and-usage-instructions",level:2},{value:"export-parasolid.ps1",id:"export-parasolidps1",level:3},{value:"export-parasolid.cmd",id:"export-parasolidcmd",level:3}],p={toc:c},d="wrapper";function m(e){let{components:n,...a}=e;return(0,r.kt)(d,(0,o.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This PowerShell script allows exporting the SOLIDWORKS part file into the parasolid format (.xmp_bin) from the command line using SOLIDWORKS Document Manager API"),(0,r.kt)("p",null,"This file can be opened in any compatible CAD application (SOLIDWORKS, Solid Edge, etc.)"),(0,r.kt)("p",null,"This script doesn't require SOLIDWORKS to be installed and doesn't consume SOLIDWORKS license."),(0,r.kt)("h2",{id:"configuration-and-usage-instructions"},"Configuration and usage instructions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create two files and paste the code from the below snippets")),(0,r.kt)("h3",{id:"export-parasolidps1"},"export-parasolid.ps1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ps1"},'$inputFilePath=$args[0]\n$outDirPath=$args[1]\n\n$ScriptDir = Split-Path $script:MyInvocation.MyCommand.Path\n\n$Assem = ( \n    $ScriptDir + "\\SolidWorks.Interop.swdocumentmgr.dll"\n    ) \n    \n$Source = @"\nImports System\nImports System.IO\nImports SolidWorks.Interop.swdocumentmgr\n\nPublic Class Exporter\n\n    Const LICENSE_KEY As String = "Your license key"\n\n    Shared Sub New()\n        AddHandler AppDomain.CurrentDomain.AssemblyResolve, AddressOf OnAssemblyResolve\n    End Sub\n\n    Public Shared Sub LoadLibrary(ParamArray libs As Object())\n        For Each [lib] As String In libs\n            Console.WriteLine(String.Format("Loading library: {0}", [lib]))\n            Dim assm As System.Reflection.Assembly = System.Reflection.Assembly.LoadFrom([lib])\n            Console.WriteLine(assm.GetName().ToString())\n        Next\n    End Sub\n\n    Private Shared Function OnAssemblyResolve(ByVal sender As Object, ByVal args As ResolveEventArgs) As System.Reflection.Assembly\n        For Each assm As System.Reflection.Assembly In AppDomain.CurrentDomain.GetAssemblies()\n\n            If assm.GetName().ToString() = args.Name Then\n                Return assm\n            End If\n        Next\n\n        Return Nothing\n    End Function\n    \n    Public Shared Sub ExportParasolid(filePath As String, outDirPath As String)\n\n        Try\n        \n            Dim classFact As SwDMClassFactory = New SwDMClassFactory()\n            Dim app As ISwDMApplication = classFact.GetApplication(LICENSE_KEY)\n\n            Dim docType As SwDmDocumentType\n            Dim doc As ISwDMDocument = OpenDocument(app, filePath, True, docType)\n\n            If docType <> SwDmDocumentType.swDmDocumentPart Then\n                Throw New InvalidCastException("Only part documents are supported")\n            End If\n\n            Dim confNames As String() = CType(doc.ConfigurationManager.GetConfigurationNames(), String())\n\n            If confNames Is Nothing OrElse confNames.Length = 0 Then\n                Throw New NullReferenceException("No configurations found")\n            End If\n\n            If Not Directory.Exists(outDirPath) Then\n                Directory.CreateDirectory(outDirPath)\n            End If\n\n            For Each confName As String In confNames\n\n                Console.WriteLine(String.Format("Extracting parasolid bodies from the \'{0}\'", confName))\n                Dim conf As ISwDMConfiguration2 = doc.ConfigurationManager.GetConfigurationByName(confName)\n\n                Dim outFilePath As String = Path.Combine(outDirPath, String.Format("{0}_{1}.xmp_bin", Path.GetFileNameWithoutExtension(filePath), confName))\n                Dim err As SwDmBodyError = conf.GetPartitionStream(outFilePath)\n                If err <> SwDmBodyError.swDmBodyErrorNone Then\n                    PrintError(String.Format("Failed to export parasolid body of \'{1}\' in \'{2}\'", confName, filePath), True)\n                End If\n\n            Next\n        \n        Catch ex As Exception\n            PrintError(ex.Message, False)\n        End Try\n\n    End Sub\n\n    Private Shared Function OpenDocument(app As ISwDMApplication, filePath As String, [readOnly] As Boolean, Optional ByRef docType As SwDmDocumentType = SwDmDocumentType.swDmDocumentUnknown) As ISwDMDocument\n\n        docType = SwDmDocumentType.swDmDocumentUnknown\n\n        Select Case Path.GetExtension(filePath).ToLower()\n            Case ".sldprt"\n                docType = SwDmDocumentType.swDmDocumentPart\n            Case ".sldasm"\n                docType = SwDmDocumentType.swDmDocumentAssembly\n            Case ".slddrw"\n                docType = SwDmDocumentType.swDmDocumentDrawing\n        End Select\n\n        Dim err As SwDmDocumentOpenError\n        Dim doc As ISwDMDocument = app.GetDocument(filePath, SwDmDocumentType.swDmDocumentPart, [readOnly], err)\n\n        If doc Is Nothing Then\n            Throw New NullReferenceException(String.Format("Failed to open document: {0}", err))\n        End If\n\n        Return doc\n\n    End Function\n    \n    Private Shared Sub PrintError(msg As String, isWarning As Boolean)\n        \n        Dim color As ConsoleColor\n        \n        If isWarning Then\n            color = ConsoleColor.DarkYellow\n        Else\n            color = ConsoleColor.DarkRed\n        End If\n        \n        Console.WriteLine(msg)\n        Console.ResetColor()\n        \n    End Sub\n\nEnd Class\n"@\n\nAdd-Type -TypeDefinition $Source -ReferencedAssemblies $Assem -Language VisualBasic\n\n[Exporter]::LoadLibrary($Assem)\n[Exporter]::ExportParasolid($inputFilePath, $outDirPath)\n')),(0,r.kt)("h3",{id:"export-parasolidcmd"},"export-parasolid.cmd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cmd"},'SET inputFilePath=%1\nSET outDirPath=%2\n\nPowerShell -NoProfile -ExecutionPolicy Bypass -File "%~dp0export-parasolid.ps1" %inputFilePath% %outDirPath%\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copy the ",(0,r.kt)("em",{parentName:"li"},"SolidWorks.Interop.swdocumentmgr.dll")," into the folder where the above scripts are created. PowerShell script is based on .NET Framework 2.0 so the SOLIDWORKS Document Manager interop must target this framework. The dll can be found at: ",(0,r.kt)("strong",{parentName:"li"},"SOLIDWORKS Installation Folder"),"\\api\\redist\\CLR2\\SolidWorks.Interop.swdocumentmgr.dll")),(0,r.kt)("p",null,"Alternatively full path to interop can be specified as shown below. In this case it is not required to copy this dll into the folder with script files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ps1"},'$Assem = ( \n   "Full path to SolidWorks.Interop.swdocumentmgr.dll"\n    ) \n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Start the command line and execute the following command")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bat"},"> [Full Path To export-parasolid.cmd] [Full Path To Input SOLIDWORKS file] [Full Path to output directory]\n")),(0,r.kt)("p",null,"As the result all bodies from all configurations of the file are exported to the specified directory (directory is automatically created if not exist). Output files are named as following: ",(0,r.kt)("em",{parentName:"p"},"[original file name]","_","[configuration name]",".xmp_bin")," The process log is displayed directly in the console:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Parasolid export console output",src:t(1007).Z,width:"843",height:"449"})))}m.isMDXComponent=!0},1007:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/export-parasolid-console-output-1c62765a995997f6dfc125970827ce27.png"}}]);