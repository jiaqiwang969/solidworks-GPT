"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[99622],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>w});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=d(n),p=r,w=u["".concat(l,".").concat(p)]||u[p]||m[p]||s;return n?o.createElement(w,i(i({ref:t},c),{},{components:n})):o.createElement(w,i({ref:t},c))}));function w(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:r,i[1]=a;for(var d=2;d<s;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4027:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var o=n(87462),r=(n(67294),n(3905));const s={title:"\u4f7f\u7528SOLIDWORKS API\u5c06\u5b9e\u4f53\u5207\u7247\u6210\u591a\u4e2a\u622a\u9762",caption:"\u5207\u7247\u622a\u9762"},i=void 0,a={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/slice-body/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/slice-body/index",title:"\u4f7f\u7528SOLIDWORKS API\u5c06\u5b9e\u4f53\u5207\u7247\u6210\u591a\u4e2a\u622a\u9762",description:"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u5c06\u5b9e\u4f53\u5207\u7247\uff0c\u5e76\u63d0\u53d6\u5207\u7247\u7684\u622a\u9762\u6570\u636e\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/slice-body/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/slice-body",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/slice-body/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/slice-body/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/slice-body/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS API\u5c06\u5b9e\u4f53\u5207\u7247\u6210\u591a\u4e2a\u622a\u9762",caption:"\u5207\u7247\u622a\u9762"},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528SOLIDWORKS API\u83b7\u53d6\u94a3\u91d1\u5f2f\u66f2\u7684\u8349\u56fe\u7ebf",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/sketched-bend-feature-sketch-lines/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u5bf9\u6587\u4ef6\u548c\u914d\u7f6e\u7279\u5b9a\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\u8fdb\u884c\u6392\u5e8f",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/sort/"}},l={},d=[{value:"labels: \u5207\u7247, \u6295\u5f71, \u76f8\u4ea4, \u5efa\u6a21, \u4e34\u65f6\u5b9e\u4f53",id:"labels-\u5207\u7247-\u6295\u5f71-\u76f8\u4ea4-\u5efa\u6a21-\u4e34\u65f6\u5b9e\u4f53",level:2},{value:"\u7b97\u6cd5",id:"\u7b97\u6cd5",level:2},{value:"\u786e\u5b9a\u5b9e\u4f53\u7684\u8d77\u59cb\u70b9\u548c\u6700\u5927\u957f\u5ea6",id:"\u786e\u5b9a\u5b9e\u4f53\u7684\u8d77\u59cb\u70b9\u548c\u6700\u5927\u957f\u5ea6",level:3},{value:"\u786e\u5b9a\u5b9e\u4f53\u7684\u6700\u5927\u534a\u5f84",id:"\u786e\u5b9a\u5b9e\u4f53\u7684\u6700\u5927\u534a\u5f84",level:3},{value:"\u8ba1\u7b97\u622a\u9762",id:"\u8ba1\u7b97\u622a\u9762",level:3},{value:"\u9884\u89c8\u7ed3\u679c",id:"\u9884\u89c8\u7ed3\u679c",level:3}],c={toc:d},u="wrapper";function m(e){let{components:t,...s}=e;return(0,r.kt)(u,(0,o.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u5c06\u5b9e\u4f53\u5207\u7247\uff0c\u5e76\u63d0\u53d6\u5207\u7247\u7684\u622a\u9762\u6570\u636e\u3002\nimage: sliced-sections.png"),(0,r.kt)("h2",{id:"labels-\u5207\u7247-\u6295\u5f71-\u76f8\u4ea4-\u5efa\u6a21-\u4e34\u65f6\u5b9e\u4f53"},"labels: ","[\u5207\u7247, \u6295\u5f71, \u76f8\u4ea4, \u5efa\u6a21, \u4e34\u65f6\u5b9e\u4f53]"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"\u5b9e\u4f53\u7684\u622a\u9762\u5207\u7247",src:n(64082).Z,width:"497",height:"288"}),"{ width=350 }"),(0,r.kt)("p",null,"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u5207\u7247\u9009\u5b9a\u7684\u5b9e\u4f53\uff0c\u5e76\u8ba1\u7b97\u5207\u7247\u7684\u622a\u9762\u5c5e\u6027\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5728",(0,r.kt)("em",{parentName:"li"},"SLICES_COUNT"),"\u5e38\u91cf\u4e2d\u6307\u5b9a\u6240\u9700\u5207\u7247\u7684\u6570\u91cf")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},"Const SLICES_COUNT As Integer = 100\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5728\u96f6\u4ef6\u6587\u6863\u4e2d\u9009\u62e9\u5b9e\u4f53"),(0,r.kt)("li",{parentName:"ul"},"\u7ed3\u679c\u5982\u4e0b\uff1a",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u4f53\u5728Y\u65b9\u5411\u4e0a\u88ab\u5207\u7247"),(0,r.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5207\u7247\u7684\u9762\u79ef\u5c06\u8f93\u51fa\u5230VBA\u7f16\u8f91\u5668\u7684\u5373\u65f6\u7a97\u53e3"),(0,r.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u5207\u7247\u7684\u9884\u89c8\u5c06\u663e\u793a\u5728\u56fe\u5f62\u533a\u57df\u4e2d"))),(0,r.kt)("li",{parentName:"ul"},"\u7ee7\u7eed\u8fd0\u884c\u5b8f\u4ee5\u9690\u85cf\u9884\u89c8")),(0,r.kt)("h2",{id:"\u7b97\u6cd5"},"\u7b97\u6cd5"),(0,r.kt)("h3",{id:"\u786e\u5b9a\u5b9e\u4f53\u7684\u8d77\u59cb\u70b9\u548c\u6700\u5927\u957f\u5ea6"},"\u786e\u5b9a\u5b9e\u4f53\u7684\u8d77\u59cb\u70b9\u548c\u6700\u5927\u957f\u5ea6"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u627e\u5230\u6b63\u65b9\u5411\u548c\u8d1f\u65b9\u5411\u4e0a\u7684\u4e24\u4e2a\u6781\u70b9\uff0c\u8fd9\u4e9b\u6781\u70b9\u4f4d\u4e8e\u65b9\u5411\u5411\u91cf\u4e0a\uff08\u672c\u793a\u4f8b\u4e2d\u4e3aY\u5411\u91cf\uff09"),(0,r.kt)("li",{parentName:"ul"},"\u5c06\u8fd9\u4e9b\u70b9\u6295\u5f71\u5230\u65b9\u5411\u5411\u91cf\u7ebf\u4e0a\uff08\u5411\u91cf\u53ef\u4ee5\u56fa\u5b9a\u5728\u4efb\u4f55\u70b9\u4e0a\uff0c\u5728\u672c\u793a\u4f8b\u4e2d\u56fa\u5b9a\u57280, 0, 0\uff09"),(0,r.kt)("li",{parentName:"ul"},"\u4e00\u65e6\u6295\u5f71\u5b8c\u6210\uff0c\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb - \u8fd9\u5c06\u7b49\u4e8e\u5b9e\u4f53\u7684\u6700\u5927\u957f\u5ea6"),(0,r.kt)("li",{parentName:"ul"},"\u7b2c\u4e00\u4e2a\u6781\u70b9\u662f\u8d77\u59cb\u70b9")),(0,r.kt)("h3",{id:"\u786e\u5b9a\u5b9e\u4f53\u7684\u6700\u5927\u534a\u5f84"},"\u786e\u5b9a\u5b9e\u4f53\u7684\u6700\u5927\u534a\u5f84"),(0,r.kt)("p",null,"\u53ea\u9700\u8981\u627e\u5230\u8db3\u591f\u5927\u7684\u534a\u5f84\u4ee5\u8986\u76d6\u5b9e\u4f53\u3002\u8be5\u534a\u5f84\u5c06\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5e73\u9762\u5b9e\u4f53\u8fdb\u884c\u76f8\u4ea4\u3002\u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u6700\u5927\u534a\u5f84\u7b49\u4e8e\u5305\u56f4\u76d2\u7684\u5bf9\u89d2\u7ebf\u957f\u5ea6\uff0c\u8fd9\u5c06\u786e\u4fdd\u5e73\u9762\u622a\u9762\u5c06\u8986\u76d6\u8f93\u5165\u5b9e\u4f53\u3002"),(0,r.kt)("h3",{id:"\u8ba1\u7b97\u622a\u9762"},"\u8ba1\u7b97\u622a\u9762"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8ba1\u7b97\u622a\u9762\u7684\u6b65\u957f"),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u6bcf\u4e2a\u622a\u9762\uff0c\u5c06\u8d77\u59cb\u70b9\u6309\u6b65\u957f\u79fb\u52a8\u3002\u7aef\u70b9\u5904\u7684\u622a\u9762\u5e94\u8be5\u88ab\u8df3\u8fc7\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u76f8\u4ea4\u7ed3\u679c"),(0,r.kt)("li",{parentName:"ul"},"\u5728\u6bcf\u4e2a\u6b65\u957f\u5904\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u622a\u9762\u5e73\u9762\uff08\u5706\u76d8\uff09\uff0c\u5e76\u5c06\u5176\u4e0e\u5b9e\u4f53\u76f8\u4ea4",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u76f8\u4ea4\u7684\u7ed3\u679c\u662f\u622a\u9762\u4f4d\u7f6e\u5904\u7684\u7247\u4f53\uff08\u6216\u7247\u4f53\uff09"),(0,r.kt)("li",{parentName:"ul"},"\u5c06\u622a\u9762\u7684\u6307\u9488\u5b58\u50a8\u5728\u96c6\u5408\u4e2d"),(0,r.kt)("li",{parentName:"ul"},"\u6240\u6709\u5c5e\u6027\u90fd\u53ef\u4ee5\u4ece\u7ed3\u679c\u4f53\u4e2d\u8bbf\u95ee\uff08\u4f8b\u5982\u8868\u9762\u79ef\uff09")))),(0,r.kt)("h3",{id:"\u9884\u89c8\u7ed3\u679c"},"\u9884\u89c8\u7ed3\u679c"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5c06\u6bcf\u4e2a\u7ed3\u679c\u4f53\u663e\u793a\u4e3a\u9884\u89c8"),(0,r.kt)("li",{parentName:"ul"},"\u505c\u6b62\u5b8f\u7684\u6267\u884c\u4ee5\u9a8c\u8bc1\u7ed3\u679c",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u9700\u8981\u9690\u85cf\u6216\u66f4\u6539\u539f\u59cb\u5b9e\u4f53\u7684\u900f\u660e\u5ea6\u4ee5\u67e5\u770b\u663e\u793a\u7684\u622a\u9762"))),(0,r.kt)("li",{parentName:"ul"},"\u7ee7\u7eed\u5b8f\u7684\u6267\u884c\u3002\u8fd9\u5c06\u6e05\u9664\u9884\u89c8")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},'Const SLICES_COUNT As Integer = 100\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n        \n        Dim swBody As SldWorks.Body2\n        Set swBody = swModel.SelectionManager.GetSelectedObject6(1, -1)\n                        \n        If Not swBody Is Nothing Then\n            \n            Dim startTime As Double\n            startTime = Timer\n            \n            Dim swSliceBodies As Collection\n            Set swSliceBodies = New Collection\n            \n            Dim maxRadius As Double\n            maxRadius = GetMaxRadius(swBody)\n            \n            Dim i As Integer\n            \n            Dim dNorm(2) As Double\n            Dim dRef(2) As Double\n            \n            dNorm(0) = 0: dNorm(1) = 1: dNorm(2) = 0\n            dRef(0) = 1: dRef(1) = 0: dRef(2) = 0\n            \n            Dim vStartPt As Variant\n            Dim length As Double\n            vStartPt = GetStartPoint(swBody, dNorm, length)\n            \n            Dim step As Double\n            step = length / (SLICES_COUNT + 1)\n            \n            For i = 1 To (SLICES_COUNT + 1) - 1\n            \n                Dim swCutPlane As SldWorks.Body2\n                \n                Dim vRoot As Variant\n                vRoot = MovePoint(vStartPt, dNorm, step * i)\n                                \n                Set swCutPlane = CreatePlanarBody(vRoot, dNorm, dRef, maxRadius)\n                \n                Dim swTempBody As SldWorks.Body2\n                Set swTempBody = swBody.Copy\n        \n                Dim bodyErr As Long\n                Dim vRes As Variant\n                vRes = swCutPlane.Operations2(swBodyOperationType_e.SWBODYINTERSECT, swTempBody, bodyErr)\n                \n                Dim j As Integer\n                \n                If Not IsEmpty(vRes) Then\n                    For j = 0 To UBound(vRes)\n                        Dim swResBody As SldWorks.Body2\n                        Set swResBody = vRes(j)\n                        Debug.Print "Area: " & swResBody.GetMassProperties(0)(4)\n                        swSliceBodies.Add swResBody\n                    Next\n                Else\n                    err.Raise vbError, , "Intersection failed"\n                End If\n                \n            Next\n            \n            Debug.Print "Time: " & Round(Timer - startTime, 2)\n            \n            For i = 1 To swSliceBodies.Count\n                swSliceBodies(i).Display3 swModel, RGB(255, 255, 0), swTempBodySelectOptions_e.swTempBodySelectOptionNone\n            Next\n            \n            Stop\n            \n            For i = swSliceBodies.Count To 1 Step -1\n                swSliceBodies.Remove i\n            Next\n                    \n        Else\n            MsgBox "Please select body"\n        End If\n        \n    Else\n        MsgBox "Please open model"\n    End If\n    \nEnd Sub\n\nFunction GetMaxRadius(body As SldWorks.Body2) As Double\n    \n    Dim vBox As Variant\n    vBox = body.GetBodyBox()\n    \n    GetMaxRadius = Sqrt((vBox(3) - vBox(0)) ^ 2 + (vBox(4) - vBox(1)) ^ 2 + (vBox(5) - vBox(2)) ^ 2)\n    \nEnd Function\n\nFunction GetStartPoint(body As SldWorks.Body2, vDir As Variant, ByRef length As Double) As Variant\n    \n    Dim x As Double\n    Dim y As Double\n    Dim z As Double\n    \n    body.GetExtremePoint CDbl(-vDir(0)), CDbl(-vDir(1)), CDbl(-vDir(2)), x, y, z\n    \n    Dim dPt(2) As Double\n    dPt(0) = x: dPt(1) = y: dPt(2) = z\n    \n    GetStartPoint = dPt\n    \n    body.GetExtremePoint CDbl(vDir(0)), CDbl(vDir(1)), CDbl(vDir(2)), x, y, z\n    \n    dPt(0) = x: dPt(1) = y: dPt(2) = z\n    \n    Dim dVecPt(2) As Double\n    \n    Dim vPt1 As Variant\n    Dim vPt2 As Variant\n        \n    vPt1 = ProjectPointOnVector(GetStartPoint, vDir, dVecPt)\n    vPt2 = ProjectPointOnVector(dPt, vDir, dVecPt)\n    \n    length = Sqrt((vPt1(0) - vPt2(0)) ^ 2 + (vPt1(1) - vPt2(1)) ^ 2 + (vPt1(2) - vPt2(2)) ^ 2)\n    \nEnd Function\n\nFunction ProjectPointOnVector(vPt As Variant, vVec As Variant, vPtOnVec As Variant) As Variant\n    \n    Dim swMathUtils As SldWorks.MathUtility\n    Set swMathUtils = swApp.GetMathUtility\n    \n    Dim swPt As SldWorks.MathPoint\n    Dim swVec As SldWorks.MathVector\n    Dim swPtOnVec As SldWorks.MathPoint\n    \n    Set swPt = swMathUtils.CreatePoint(vPt)\n    Set swVec = swMathUtils.CreateVector(vVec)\n    Set swPtOnVec = swMathUtils.CreatePoint(vPtOnVec)\n    \n    Dim swVec2 As SldWorks.MathVector\n    Set swVec2 = swPtOnVec.Subtract(swPt)\n    \n    Dim magn As Double\n    Dim prod As Double\n    Dim dist As Double\n    \n    prod = swVec.Dot(swVec2)\n    magn = swVec.GetLength() ^ 2\n    dist = prod / magn\n        \n    Dim swDestPt As SldWorks.MathPoint\n    Set swDestPt = swPtOnVec.AddVector(swVec.Scale(dist))\n    \n    ProjectPointOnVector = swDestPt.ArrayData\n    \nEnd Function\n\nFunction CreatePlanarBody(vRoot As Variant, vNorm As Variant, vRef As Variant, radius As Double) As SldWorks.Body2\n    \n    Dim swModeler As SldWorks.Modeler\n        \n    Set swModeler = swApp.GetModeler\n        \n    Dim swSurf As SldWorks.Surface\n            \n    Set swSurf = swModeler.CreatePlanarSurface2(vRoot, vNorm, vRef)\n    \n    Dim swTrimCurve(0) As SldWorks.Curve\n    \n    Dim vArcPt As Variant\n    vArcPt = MovePoint(vRoot, vRef, radius)\n    \n    Set swTrimCurve(0) = swModeler.CreateArc(vRoot, vNorm, radius, vArcPt, vArcPt)\n    \n    Set CreatePlanarBody = swSurf.CreateTrimmedSheet4(swTrimCurve, True)\n    \nEnd Function\n\nFunction MovePoint(vPt As Variant, vDir As Variant, dist As Double) As Variant\n    \n    Dim swMathUtils As SldWorks.MathUtility\n    \n    Set swMathUtils = swApp.GetMathUtility\n    \n    Dim swPt As SldWorks.MathPoint\n    Dim swDir As SldWorks.MathVector\n    \n    Set swPt = swMathUtils.CreatePoint(vPt)\n    Set swDir = swMathUtils.CreateVector(vDir)\n    \n    Set swDir = swDir.Normalise()\n    Set swDir = swDir.Scale(dist)\n    \n    Set swPt = swPt.AddVector(swDir)\n    \n    MovePoint = swPt.ArrayData\n    \nEnd Function\n\n')))}m.isMDXComponent=!0},64082:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/sliced-sections-dbdc5266356a36e3e63ef424fab4413c.png"}}]);