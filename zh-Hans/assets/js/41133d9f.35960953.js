"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[21242],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>w});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),c=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return o.createElement(i.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),l=c(t),p=r,w=l["".concat(i,".").concat(p)]||l[p]||u[p]||a;return t?o.createElement(w,s(s({ref:n},m),{},{components:t})):o.createElement(w,s({ref:n},m))}));function w(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=p;var d={};for(var i in n)hasOwnProperty.call(n,i)&&(d[i]=n[i]);d.originalType=e,d[l]="string"==typeof e?e:r,s[1]=d;for(var c=2;c<a;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},17705:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const a={title:"SOLIDWORKS commands manager with SwEx.AddIn framework",caption:"Commands Manager",description:"Instructions on adding commands (menu, toolbar and context menu) with SwEx.AddIn framework for developing SOLIDWORKS add-ins in C# and VB.NET","toc-group-name":"labs-solidworks-swex",sidebar_position:0},s=void 0,d={unversionedId:"codestack/labs/solidworks/swex/add-in/commands-manager/index",id:"codestack/labs/solidworks/swex/add-in/commands-manager/index",title:"SOLIDWORKS commands manager with SwEx.AddIn framework",description:"Instructions on adding commands (menu, toolbar and context menu) with SwEx.AddIn framework for developing SOLIDWORKS add-ins in C# and VB.NET",source:"@site/docs/codestack/labs/solidworks/swex/add-in/commands-manager/index.md",sourceDirName:"codestack/labs/solidworks/swex/add-in/commands-manager",slug:"/codestack/labs/solidworks/swex/add-in/commands-manager/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/labs/solidworks/swex/add-in/commands-manager/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/labs/solidworks/swex/add-in/commands-manager/index.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"SOLIDWORKS commands manager with SwEx.AddIn framework",caption:"Commands Manager",description:"Instructions on adding commands (menu, toolbar and context menu) with SwEx.AddIn framework for developing SOLIDWORKS add-ins in C# and VB.NET","toc-group-name":"labs-solidworks-swex",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"SwEx.AddIn Framework enables easy and robust development of add-ins with SOLIDWORKS API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/labs/solidworks/swex/add-in/"},next:{title:"Custom enable command state for SOLIDWORKS commands",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/labs/solidworks/swex/add-in/commands-manager/command-states/"}},i={},c=[],m={toc:c},l="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(l,(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"SwEx simplifies the adding of commands by considering the enumerator type as a command group and enumerator values as command items. Values can be decorated by various attributes to provide custom title, description and icon."),(0,r.kt)("p",null,"Commands can be inserted into menu, toolbar or context menu."),(0,r.kt)("p",null,"User can handle the commands clicks and assign the custom state for command buttons."),(0,r.kt)("p",null,"Multiple command groups can be inserted within the same add-in."))}u.isMDXComponent=!0}}]);