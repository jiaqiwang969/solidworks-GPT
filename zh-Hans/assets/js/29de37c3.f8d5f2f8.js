"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[80276],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},s=Object.keys(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),l=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=l(t.components);return r.createElement(c.Provider,{value:e},t.children)},w="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,s=t.originalType,c=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),w=l(n),p=a,m=w["".concat(c,".").concat(p)]||w[p]||u[p]||s;return n?r.createElement(m,o(o({ref:e},d),{},{components:n})):r.createElement(m,o({ref:e},d))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var s=n.length,o=new Array(s);o[0]=p;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i[w]="string"==typeof t?t:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},67409:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const s={title:"\u901a\u8fc7SOLIDWORKS API\u521b\u5efa\u5706\u5f62\u6a21\u5f0f\u7684\u65cb\u8f6c\u53d8\u6362",image:"circ-pattern-emulator.png",labels:["\u89d2\u5ea6","\u8f74","\u5706\u5f62\u6a21\u5f0f","\u793a\u4f8b","\u51e0\u4f55","\u5b9e\u4f8b","\u65cb\u8f6c","\u53d8\u6362"],"redirect-from":["/2018/03/create-rotational-transformation-based.html"]},o=void 0,i={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/circular-pattern-data-rotational-transformation/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/circular-pattern-data-rotational-transformation/index",title:"\u901a\u8fc7SOLIDWORKS API\u521b\u5efa\u5706\u5f62\u6a21\u5f0f\u7684\u65cb\u8f6c\u53d8\u6362",description:"\u8fd9\u4e2aSOLIDWORKS API\u793a\u4f8b\u901a\u8fc7\u8bfb\u53d6\u6240\u9009\u5706\u5f62\u6a21\u5f0f\u7684\u53d8\u6362\uff0c\u5e76\u901a\u8fc7\u5e94\u7528\u4e0e\u5706\u5f62\u6a21\u5f0f\u4e2d\u76f8\u540c\u7684\u53d8\u6362\u6765\u521b\u5efa\u6307\u5b9a\u79cd\u5b50\u4f53\u7684\u6a21\u5f0f\u7684\u4e34\u65f6\u9884\u89c8\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/circular-pattern-data-rotational-transformation/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/circular-pattern-data-rotational-transformation",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/circular-pattern-data-rotational-transformation/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/circular-pattern-data-rotational-transformation/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/circular-pattern-data-rotational-transformation/index.md",tags:[],version:"current",frontMatter:{title:"\u901a\u8fc7SOLIDWORKS API\u521b\u5efa\u5706\u5f62\u6a21\u5f0f\u7684\u65cb\u8f6c\u53d8\u6362",image:"circ-pattern-emulator.png",labels:["\u89d2\u5ea6","\u8f74","\u5706\u5f62\u6a21\u5f0f","\u793a\u4f8b","\u51e0\u4f55","\u5b9e\u4f8b","\u65cb\u8f6c","\u53d8\u6362"],"redirect-from":["/2018/03/create-rotational-transformation-based.html"]},sidebar:"tutorialSidebar",previous:{title:"SOLIDWORKS API\u4e2d\u4f7f\u7528\u88c5\u914d\u7ec4\u4ef6\u53d8\u6362\u7684\u7528\u6cd5",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/assembly-component-transformation/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u83b7\u53d6\u5750\u6807\u7cfb\u7684\u53d8\u6362\u77e9\u9635",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/transformation/get-coordinate-system-transform/"}},c={},l=[],d={toc:l},w="wrapper";function u(t){let{components:e,...s}=t;return(0,a.kt)(w,(0,r.Z)({},d,s,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u8fd9\u4e2aSOLIDWORKS API\u793a\u4f8b\u901a\u8fc7\u8bfb\u53d6\u6240\u9009\u5706\u5f62\u6a21\u5f0f\u7684\u53d8\u6362\uff0c\u5e76\u901a\u8fc7\u5e94\u7528\u4e0e\u5706\u5f62\u6a21\u5f0f\u4e2d\u76f8\u540c\u7684\u53d8\u6362\u6765\u521b\u5efa\u6307\u5b9a\u79cd\u5b50\u4f53\u7684\u6a21\u5f0f\u7684\u4e34\u65f6\u9884\u89c8\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u6a21\u62df\u5706\u5f62\u6a21\u5f0f\u7279\u5f81\u521b\u5efa\u7684\u4f53\u7684\u526f\u672c",src:n(23818).Z,width:"640",height:"305"}),"{ width=640 height=304 }"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9009\u62e9\u5706\u5f62\u6a21\u5f0f\u7279\u5f81\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u9009\u5b9a\u5bf9\u8c61",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5b83\u5fc5\u987b\u4f7f\u7528\u53c2\u8003\u8f74\u4f5c\u4e3a\u65b9\u5411\u9009\u62e9\u4efb\u4f55\u4e0d\u5c5e\u4e8e\u5706\u5f62\u6a21\u5f0f\u7279\u5f81\u7684\u5b9e\u4f53\u4f53"))),(0,a.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u5b8f\u3002\u5b8f\u5c06\u4ece\u6a21\u5f0f\u4e2d\u8bfb\u53d6\u53d8\u6362\uff0c\u5e76\u5c06\u76f8\u540c\u7684\u53d8\u6362\u5e94\u7528\u4e8e\u5728\u4e0a\u4e00\u6b65\u4e2d\u9009\u62e9\u7684\u4f53\u3002\n\u9884\u89c8\u5c06\u4f7f\u7528\u4e34\u65f6\u4f53\u663e\u793a\uff0c\u5f53\u5b8f\u6062\u590d\u6267\u884c\u65f6\uff08\u5373\u6309F5\u6216\u8fd0\u884c\uff09\uff0c\u8fd9\u4e9b\u4f53\u5c06\u7acb\u5373\u88ab\u9500\u6bc1\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5728\u8fd0\u884c\u6b64\u5b8f\u65f6\u4e0d\u4f1a\u521b\u5efa\u6216\u5220\u9664\u4efb\u4f55\u4e34\u65f6\u7279\u5f81")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\nDim swModel As SldWorks.ModelDoc2\nDim swMathUtils As SldWorks.MathUtility\nDim swSelMgr As SldWorks.SelectionMgr\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Set swModel = swApp.ActiveDoc\n    \n    Set swMathUtils = swApp.GetMathUtility\n    \n    Set swSelMgr = swModel.SelectionManager\n    \n    Dim swFeat As SldWorks.Feature\n    Dim swBody As SldWorks.Body2\n    Dim swCircPatt As SldWorks.CircularPatternFeatureData\n    \n    Set swFeat = swSelMgr.GetSelectedObject6(1, -1)\n    \n    If Not swFeat Is Nothing Then\n        If swFeat.GetTypeName2 = "CirPattern" Then\n            Set swCircPatt = swFeat.GetDefinition\n        End If\n    End If\n    \n    Set swBody = swSelMgr.GetSelectedObject6(2, -1)\n    \n    If swBody Is Nothing Then\n        MsgBox "\u8bf7\u5c06\u8981\u8fdb\u884c\u6a21\u5f0f\u7684\u4f53\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u9009\u62e9"\n        End\n    End If\n    \n    If Not swCircPatt Is Nothing Then\n                \n        Dim angle As Double\n        Dim swOrigPt As SldWorks.MathPoint\n        Dim swDirVec As SldWorks.MathVector\n        Dim instances As Integer\n        Dim vPreviewBodies As Variant\n        \n        GetCircularPatternParameters swCircPatt, swOrigPt, swDirVec, angle, instances\n        \n        vPreviewBodies = CreateCircularPatternPreview(swBody, swOrigPt, swDirVec, angle, instances)\n        \n        Stop\n        \n        ClearTempBodies vPreviewBodies\n        \n    Else\n        MsgBox "\u8bf7\u5c06\u5706\u5f62\u6a21\u5f0f\u7279\u5f81\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u9009\u62e9"\n    End If\n    \nEnd Sub\n\nSub GetCircularPatternParameters(swCircPatt As SldWorks.CircularPatternFeatureData, ByRef swOrigPt As MathPoint, ByRef swDirVec As MathVector, ByRef angle As Double, ByRef instances As Integer)\n    \n    swCircPatt.AccessSelections swModel, Nothing\n    \n    If swCircPatt.EqualSpacing Then\n        angle = swCircPatt.Spacing / (swCircPatt.TotalInstances - 1)\n    Else\n        angle = swCircPatt.Spacing\n    End If\n    \n    If swCircPatt.ReverseDirection Then\n        angle = -angle\n    End If\n    \n    instances = swCircPatt.TotalInstances - 2\n    \n    Dim swAxis As SldWorks.RefAxis\n    Set swAxis = swCircPatt.Axis\n        \n    If swAxis Is Nothing Then\n        MsgBox "\u53ea\u652f\u6301\u53c2\u8003\u8f74\u4f5c\u4e3a\u65b9\u5411"\n        End\n    End If\n    \n    Dim vVec As Variant\n    vVec = swAxis.GetRefAxisParams\n    \n    Dim dData(2) As Double\n    \n    dData(0) = vVec(0):  dData(1) = vVec(1): dData(2) = vVec(2)\n    Set swOrigPt = swMathUtils.CreatePoint(dData)\n    \n    dData(0) = vVec(3) - vVec(0):  dData(1) = vVec(4) - vVec(1): dData(2) = vVec(5) - vVec(2)\n    Set swDirVec = swMathUtils.CreateVector(dData)\n    \n    swCircPatt.ReleaseSelectionAccess\n    \nEnd Sub\n\nFunction CreateCircularPatternPreview(swBody As SldWorks.Body2, swOrigPt As MathPoint, swDirVec As MathVector, angle As Double, instances As Integer) As Variant\n    \n    Dim swPreviewBodies() As SldWorks.Body2\n    ReDim swPreviewBodies(instances)\n    \n    Dim i As Integer\n    \n    For i = 0 To instances\n        \n        Dim swTransform As SldWorks.MathTransform\n\n        Set swTransform = swMathUtils.CreateTransformRotateAxis(swOrigPt, swDirVec, angle * (i + 1))\n        \n        Set swPreviewBodies(i) = swBody.Copy\n        \n        swPreviewBodies(i).ApplyTransform swTransform\n        \n        swPreviewBodies(i).Display3 swModel, RGB(0, 0, 255), swTempBodySelectOptions_e.swTempBodySelectOptionNone\n        \n    Next\n    \n    CreateCircularPatternPreview = swPreviewBodies\n        \nEnd Function\n\nSub ClearTempBodies(vBodies As Variant)\n    \n    Dim i As Integer\n\n    For i = 0 To UBound(vBodies)\n        Set vBodies(i) = Nothing\n    Next\n    \nEnd Sub\n')))}u.isMDXComponent=!0},23818:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/circ-pattern-emulator-59ec4d7f8754b03d06eba3979fd0ca14.png"}}]);