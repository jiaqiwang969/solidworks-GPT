"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[82390],{3905:(e,n,o)=>{o.d(n,{Zo:()=>l,kt:()=>w});var t=o(67294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function s(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?s(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function a(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)o=s[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)o=s[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=t.createContext({}),p=function(e){var n=t.useContext(c),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},l=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=p(o),u=r,w=d["".concat(c,".").concat(u)]||d[u]||m[u]||s;return o?t.createElement(w,i(i({ref:n},l),{},{components:o})):t.createElement(w,i({ref:n},l))}));function w(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=o.length,i=new Array(s);i[0]=u;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a[d]="string"==typeof e?e:r,i[1]=a;for(var p=2;p<s;p++)i[p]=o[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}u.displayName="MDXCreateElement"},12525:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var t=o(87462),r=(o(67294),o(3905));const s={title:"\u4f7f\u7528SOLIDWORKS API\u904d\u5386\u7ec4\u4ef6\u6811",image:"sw-components-tree.png",labels:["\u88c5\u914d\u4f53","\u7ec4\u4ef6\u6811","solidworks api","\u904d\u5386"],"redirect-from":["/2018/03/solidworks-api-assembly-traverse-comps-tree.html","/solidworks-api/document/assembly/traversing-components-tree"]},i=void 0,a={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/traversing-tree/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/traversing-tree/index",title:"\u4f7f\u7528SOLIDWORKS API\u904d\u5386\u7ec4\u4ef6\u6811",description:"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u904d\u5386\u88c5\u914d\u4f53\u4e2d\u7684\u7ec4\u4ef6\u6811\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684\u7f29\u8fdb\u7b26\u53f7\u8f93\u51fa\u7ed3\u679c\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/traversing-tree/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/traversing-tree",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/traversing-tree/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/traversing-tree/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/traversing-tree/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS API\u904d\u5386\u7ec4\u4ef6\u6811",image:"sw-components-tree.png",labels:["\u88c5\u914d\u4f53","\u7ec4\u4ef6\u6811","solidworks api","\u904d\u5386"],"redirect-from":["/2018/03/solidworks-api-assembly-traverse-comps-tree.html","/solidworks-api/document/assembly/traversing-components-tree"]},sidebar:"tutorialSidebar",previous:{title:"VBA\u5b8f\u8c03\u7528SOLIDWORKS API\u4e2d\u7684\u663e\u793a\u6240\u6709\u7ec4\u4ef6\u547d\u4ee4",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/show-with-dependents/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u67e5\u627e\u6240\u9009\u7ec4\u4ef6\u7684\u4f7f\u7528\u7ec4\u4ef6",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/components/where-used/"}},c={},p=[],l={toc:p},d="wrapper";function m(e){let{components:n,...s}=e;return(0,r.kt)(d,(0,t.Z)({},l,s,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u904d\u5386\u88c5\u914d\u4f53\u4e2d\u7684\u7ec4\u4ef6\u6811\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u7684\u7f29\u8fdb\u7b26\u53f7\u8f93\u51fa\u7ed3\u679c\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"\u7ec4\u4ef6\u6811",src:o(56785).Z,width:"140",height:"320"}),"{ width=150 }"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\nDim swModel As SldWorks.ModelDoc2\n\nConst INDENT_SYMBOL As String = "    "\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n\n        Dim swRootComp As SldWorks.Component2\n\n        Set swRootComp = swModel.ConfigurationManager.ActiveConfiguration.GetRootComponent\n    \n        TraverseComponent swRootComp, ""\n\n    Else\n\n        MsgBox "\u8bf7\u6253\u5f00\u88c5\u914d\u4f53"\n\n    End If\n    \nEnd Sub\n\nSub TraverseComponent(comp As SldWorks.Component2, indent As String)\n    \n    Dim vChildComps As Variant\n    \n    vChildComps = comp.GetChildren\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(vChildComps)\n    \n        Dim swChildComp As SldWorks.Component2\n        Set swChildComp = vChildComps(i)\n            \n        Debug.Print indent & swChildComp.Name2 & " (" & swChildComp.GetPathName() & ")"\n        \n        TraverseComponent swChildComp, indent & INDENT_SYMBOL\n        \n    Next\n    \nEnd Sub\n\n\n')))}m.isMDXComponent=!0},56785:(e,n,o)=>{o.d(n,{Z:()=>t});const t=o.p+"assets/images/sw-components-tree-1c8aebaa47e6812655df10300003e9ed.png"}}]);