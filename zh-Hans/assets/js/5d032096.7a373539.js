"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[17491],{3905:(n,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>b});var o=t(67294);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,o,s=function(n,e){if(null==n)return{};var t,o,s={},r=Object.keys(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var p=o.createContext({}),m=function(n){var e=o.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=m(n.components);return o.createElement(p.Provider,{value:e},n.children)},d="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},u=o.forwardRef((function(n,e){var t=n.components,s=n.mdxType,r=n.originalType,p=n.parentName,l=a(n,["components","mdxType","originalType","parentName"]),d=m(t),u=s,b=d["".concat(p,".").concat(u)]||d[u]||c[u]||r;return t?o.createElement(b,i(i({ref:e},l),{},{components:t})):o.createElement(b,i({ref:e},l))}));function b(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var r=t.length,i=new Array(r);i[0]=u;var a={};for(var p in e)hasOwnProperty.call(e,p)&&(a[p]=e[p]);a.originalType=n,a[d]="string"==typeof n?n:s,i[1]=a;for(var m=2;m<r;m++)i[m]=t[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},25532:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>m});var o=t(87462),s=(t(67294),t(3905));const r={title:"Batch add components and position them in the grid using SOLIDWORKS API",caption:"Insert And Position Components In A Grid",description:"VBA example demonstrates how to batch insert and position components in the 3D grid using SOLIDWORKS API by providing the number of rows and columns and distance between components",image:"positioned-components.png",labels:["components","positions"]},i=void 0,a={unversionedId:"codestack/solidworks-api/document/assembly/components/insert-position/index",id:"codestack/solidworks-api/document/assembly/components/insert-position/index",title:"Batch add components and position them in the grid using SOLIDWORKS API",description:"VBA example demonstrates how to batch insert and position components in the 3D grid using SOLIDWORKS API by providing the number of rows and columns and distance between components",source:"@site/docs/codestack/solidworks-api/document/assembly/components/insert-position/index.md",sourceDirName:"codestack/solidworks-api/document/assembly/components/insert-position",slug:"/codestack/solidworks-api/document/assembly/components/insert-position/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/assembly/components/insert-position/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/document/assembly/components/insert-position/index.md",tags:[],version:"current",frontMatter:{title:"Batch add components and position them in the grid using SOLIDWORKS API",caption:"Insert And Position Components In A Grid",description:"VBA example demonstrates how to batch insert and position components in the 3D grid using SOLIDWORKS API by providing the number of rows and columns and distance between components",image:"positioned-components.png",labels:["components","positions"]},sidebar:"tutorialSidebar",previous:{title:"Get and select all visible components in assembly using SOLIDWORKS API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/assembly/components/get-visible/"},next:{title:"Get Model Doc from lightweight component using SOLIDWORKS API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/assembly/components/lightweight-get-model-doc/"}},p={},m=[],l={toc:m},d="wrapper";function c(n){let{components:e,...r}=n;return(0,s.kt)(d,(0,o.Z)({},l,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Components inserted into 2 x 2 x 2 grid",src:t(90328).Z,width:"610",height:"640"}),"{ width=250 }"),(0,s.kt)("p",null,"This example demonstrates the performance efficient way of inserting a batch of components into assembly and automatic positioning of them in 3D grid using SOLIDWORKS API."),(0,s.kt)("p",null,"Components are inserted using the ",(0,s.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2011/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IAssemblyDoc~AddComponents3.html"},"IAssemblyDoc::AddComponents3")," SOLIDWORKS API method. Which allows to preassign the transformations for components to be inserted."),(0,s.kt)("p",null,"Boundaries of the grid can be specified by setting the constants in the begging of the macro."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},"Const ROWS_COUNT As Integer = 2 'maximum number of components in a row (parallel to X)\nConst COLUMNS_COUNT As Integer = 2 'maximum number of components in a row (parallel to Y)\nConst DISTANCE As Double = 0.1 'distance between components in rows, columns and levels\n")),(0,s.kt)("p",null,"Specify the list of components to insert by assigning the values of ",(0,s.kt)("em",{parentName:"p"},"compsPaths")," array. Inserting the same component path in different positions is supported."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Dim compsPaths(N) As String\n    \ncompsPaths(0) = "Full path to part or assembly"\ncompsPaths(1) = "Full path to part or assembly"\n...\ncompsPaths(N) = "Full path to part or assembly"\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const ROWS_COUNT As Integer = 2\nConst COLUMNS_COUNT As Integer = 2\nConst DISTANCE As Double = 0.1\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim compsPaths(7) As String\n    \n    compsPaths(0) = "D:\\models\\box1.sldprt"\n    compsPaths(1) = "D:\\models\\box2.sldprt"\n    compsPaths(2) = "D:\\models\\box3.sldprt"\n    compsPaths(3) = "D:\\models\\box1.sldprt"\n    compsPaths(4) = "D:\\models\\box1.sldprt"\n    compsPaths(5) = "D:\\models\\box2.sldprt"\n    compsPaths(6) = "D:\\models\\box3.sldprt"\n    compsPaths(7) = "D:\\models\\box1.sldprt"\n    \n    Dim swAssy As SldWorks.AssemblyDoc\n    \n    Set swAssy = swApp.ActiveDoc\n    \n    If Not swAssy Is Nothing Then\n        InsertComponents swAssy, compsPaths, ROWS_COUNT, COLUMNS_COUNT, DISTANCE\n    Else\n        MsgBox "Please open assembly"\n    End If\n    \nEnd Sub\n\nSub InsertComponents(assy As SldWorks.AssemblyDoc, vPaths As Variant, rows As Integer, columns As Integer, dist As Double)\n    \n    Dim transforms() As Double\n    ReDim transforms((UBound(vPaths) + 1) * 16 - 1)\n    \n    Dim coordSys() As String\n    ReDim coordSys(UBound(vPaths))\n    \n    Dim level As Integer\n    Dim row As Integer\n    Dim column As Integer\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(vPaths)\n        \n        If row = rows Then\n            \n            row = 0\n            column = column + 1\n            \n            If column = columns Then\n                column = 0\n                level = level + 1\n            End If\n        \n        End If\n        \n        Dim vTransform As Variant\n        vTransform = ComposeTransform(row * dist, column * dist, level * dist)\n        \n        Dim j As Integer\n        \n        For j = 0 To UBound(vTransform)\n            transforms(i * (UBound(vTransform) + 1) + j) = vTransform(j)\n        Next\n        \n        row = row + 1\n        \n    Next\n    \n    assy.AddComponents3 vPaths, transforms, coordSys\n    \nEnd Sub\n\nFunction ComposeTransform(x As Double, y As Double, z As Double) As Variant\n    \n    Dim dMatrix(15) As Double\n    dMatrix(0) = 1: dMatrix(1) = 0: dMatrix(2) = 0: dMatrix(3) = 0\n    dMatrix(4) = 1: dMatrix(5) = 0: dMatrix(6) = 0: dMatrix(7) = 0\n    dMatrix(8) = 1: dMatrix(9) = x: dMatrix(10) = y: dMatrix(11) = z\n    dMatrix(12) = 1: dMatrix(13) = 0: dMatrix(14) = 0: dMatrix(15) = 0\n    \n    ComposeTransform = dMatrix\n    \nEnd Function\n')))}c.isMDXComponent=!0},90328:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/positioned-components-80d6362286045d8233f2d44320c91c65.png"}}]);