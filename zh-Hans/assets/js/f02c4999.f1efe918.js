"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[28170],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var o=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,s=function(e,n){if(null==e)return{};var t,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=o.createContext({}),c=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(i.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=c(t),u=s,g=m["".concat(i,".").concat(u)]||m[u]||d[u]||r;return t?o.createElement(g,l(l({ref:n},p),{},{components:t})):o.createElement(g,l({ref:n},p))}));function g(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,l=new Array(r);l[0]=u;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a[m]="string"==typeof e?e:s,l[1]=a;for(var c=2;c<r;c++)l[c]=t[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},98062:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=t(87462),s=(t(67294),t(3905));const r={layout:"sw-tool",title:"Replace components preserving selection using SOLIDWORKS API",caption:"Replace Components",description:"Macro demonstrates how to replace selected components in the batch preserving original selections using SOLIDWORKS API",image:"replace_components.png",labels:["component","replace","selection"],group:"Assembly"},l=void 0,a={unversionedId:"codestack-clone/solidworks-api/document/assembly/components/replace/index",id:"codestack-clone/solidworks-api/document/assembly/components/replace/index",title:"Replace components preserving selection using SOLIDWORKS API",description:"Macro demonstrates how to replace selected components in the batch preserving original selections using SOLIDWORKS API",source:"@site/docs/codestack-clone/solidworks-api/document/assembly/components/replace/index.md",sourceDirName:"codestack-clone/solidworks-api/document/assembly/components/replace",slug:"/codestack-clone/solidworks-api/document/assembly/components/replace/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/document/assembly/components/replace/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/solidworks-api/document/assembly/components/replace/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"Replace components preserving selection using SOLIDWORKS API",caption:"Replace Components",description:"Macro demonstrates how to replace selected components in the batch preserving original selections using SOLIDWORKS API",image:"replace_components.png",labels:["component","replace","selection"],group:"Assembly"},sidebar:"tutorialSidebar",previous:{title:"Renaming permanent and virtual components using SOLIDWORKS API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/document/assembly/components/rename/"},next:{title:"Calculating rotation transformation to align component with direction",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/document/assembly/components/rotation-transform-align/"}},i={},c=[],p={toc:c},m="wrapper";function d(e){let{components:n,...r}=e;return(0,s.kt)(m,(0,o.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Components replaced in the tree",src:t(92961).Z,width:"648",height:"393"}),"{ width=350 }"),(0,s.kt)("p",null,"This macro allows to replace the selected components in the tree with the components from the nominated folder (optionally with additional suffix in name) using SOLIDWORKS API."),(0,s.kt)("p",null,"This could be useful when managing similar types of projects where some files were copied, updated and renamed and need to be replaced in the original assembly."),(0,s.kt)("p",null,"This macro is using the ",(0,s.kt)("a",{parentName:"p",href:"/docs/codestack/solidworks-api/document/selection/api-only-selection/"},"API only selections")," which allows to keep the original selected components and avoiding the need to use the temp collection variables to satisfy the requirement of ",(0,s.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2017/english/api/sldworksapi/solidworks.interop.sldworks~solidworks.interop.sldworks.iassemblydoc~replacecomponents2.html"},"IAssemblyDoc::ReplaceComponents2")," SOLIDWORKS API method where each component needs to be selected for replacement."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Modify the input parameters. Set the directory where the replacement parts are located via ",(0,s.kt)("em",{parentName:"li"},"REPLACEMENT_DIR")," and optional ",(0,s.kt)("em",{parentName:"li"},"SUFFIX")," for file name.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const REPLACEMENT_DIR As String = "D:\\Assembly\\Replacement"\nConst SUFFIX As String = "_new"\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Select components"),(0,s.kt)("li",{parentName:"ul"},"Run macro. All components are replaced")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const REPLACEMENT_DIR As String = "D:\\Assembly\\Replacement"\nConst SUFFIX As String = "_new"\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n        \n        Dim swAssy As SldWorks.AssemblyDoc\n        Set swAssy = swModel\n        \n        Dim swSelMgr As SldWorks.SelectionMgr\n        Set swSelMgr = swModel.SelectionManager\n        \n        Dim i As Integer\n        \n        For i = 1 To swSelMgr.GetSelectedObjectCount2(-1)\n            \n            If swSelMgr.GetSelectedObjectType3(i, -1) = swSelectType_e.swSelCOMPONENTS Then\n                \n                Dim swComp As SldWorks.Component2\n                Set swComp = swSelMgr.GetSelectedObject6(i, -1)\n                \n                Debug.Print swSelMgr.SuspendSelectionList\n                \n                swSelMgr.AddSelectionListObject swComp, Nothing\n                \n                swAssy.ReplaceComponents2 GetReplacementPath(swComp), swComp.ReferencedConfiguration, False, swReplaceComponentsConfiguration_e.swReplaceComponentsConfiguration_MatchName, True\n                    \n                swSelMgr.ResumeSelectionList\n                \n            End If\n        Next\n        \n    Else\n        MsgBox ("Please open assembly document")\n    End If\n    \nEnd Sub\n\nFunction GetReplacementPath(comp As SldWorks.Component2)\n    \n    Dim replFilePath As String\n    \n    Dim compPath As String\n    compPath = comp.GetPathName()\n                \n    Dim dir As String\n    dir = REPLACEMENT_DIR\n    \n    If Right(dir, 1) <> "\\" Then\n        dir = dir & "\\"\n    End If\n    \n    Dim fileName As String\n    fileName = Right(compPath, Len(compPath) - InStrRev(compPath, "\\"))\n    \n    If SUFFIX <> "" Then\n        \n        Dim ext As String\n        \n        ext = Right(fileName, Len(".SLDXXX"))\n        \n        fileName = Left(fileName, Len(fileName) - Len(ext)) & SUFFIX & ext\n        \n    End If\n    \n    replFilePath = dir & fileName\n                \n    GetReplacementPath = replFilePath\n    \nEnd Function\n')))}d.isMDXComponent=!0},92961:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/replace_components-64c5d3af96389bfe77145e510ad8590b.png"}}]);