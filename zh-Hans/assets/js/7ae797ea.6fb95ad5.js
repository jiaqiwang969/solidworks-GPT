"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[53718],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=o.createContext({}),l=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=l(e.components);return o.createElement(a.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(t),f=r,m=u["".concat(a,".").concat(f)]||u[f]||p[f]||i;return t?o.createElement(m,s(s({ref:n},d),{},{components:t})):o.createElement(m,s({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=f;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c[u]="string"==typeof e?e:r,s[1]=c;for(var l=2;l<i;l++)s[l]=t[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},34515:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=t(87462),r=(t(67294),t(3905));const i={title:"\u4f7f\u7528SOLIDWORKS API\u4eceBoss-Extrude\u7279\u5f81\u4e2d\u63d0\u53d6\u9009\u62e9",caption:"\u4eceBoss-Extrude\u7279\u5f81\u4e2d\u63d0\u53d6\u9009\u62e9"},s=void 0,c={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-boss-extrude-selection/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-boss-extrude-selection/index",title:"\u4f7f\u7528SOLIDWORKS API\u4eceBoss-Extrude\u7279\u5f81\u4e2d\u63d0\u53d6\u9009\u62e9",description:"\u4f7f\u7528SOLIDWORKS API\uff0c\u8fd9\u662f\u4e00\u4e2aC# VSTA\u5b8f\uff0c\u7528\u4e8e\u4ece\u6240\u9009\u7684Boss-Extrude\u7279\u5f81\u4e2d\u63d0\u53d6\u6709\u5173From Entity\u3001End Condition\u548cDirection\u9009\u62e9\u6846\u4e2d\u6307\u5b9a\u7684\u9009\u62e9\u5b9e\u4f53\u7684\u4fe1\u606f\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-boss-extrude-selection/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-boss-extrude-selection",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-boss-extrude-selection/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-boss-extrude-selection/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-boss-extrude-selection/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS API\u4eceBoss-Extrude\u7279\u5f81\u4e2d\u63d0\u53d6\u9009\u62e9",caption:"\u4eceBoss-Extrude\u7279\u5f81\u4e2d\u63d0\u53d6\u9009\u62e9"},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528SOLIDWORKS API\u4ece\u94a3\u91d1\u5c55\u5f00\u56fe\u6848\u4e2d\u67e5\u627e\u5207\u5272\u6e05\u5355\u9879",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-body-flat-pattern/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u67e5\u627e\u4f53\u7684\u5305\u56f4\u5706\u67f1\u4f53",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/get-bounding-cylinder/"}},a={},l=[{value:"labels: selection,boss-extrude",id:"labels-selectionboss-extrude",level:2}],d={toc:l},u="wrapper";function p(e){let{components:n,...i}=e;return(0,r.kt)(u,(0,o.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u4f7f\u7528SOLIDWORKS API\uff0c\u8fd9\u662f\u4e00\u4e2aC# VSTA\u5b8f\uff0c\u7528\u4e8e\u4ece\u6240\u9009\u7684Boss-Extrude\u7279\u5f81\u4e2d\u63d0\u53d6\u6709\u5173From Entity\u3001End Condition\u548cDirection\u9009\u62e9\u6846\u4e2d\u6307\u5b9a\u7684\u9009\u62e9\u5b9e\u4f53\u7684\u4fe1\u606f\u3002\nimage: boss-extrude-property-page.png"),(0,r.kt)("h2",{id:"labels-selectionboss-extrude"},"labels: ","[selection,boss-extrude]"),(0,r.kt)("p",null,"\u8fd9\u4e2aC# VSTA\u5b8f\u4f7f\u7528SOLIDWORKS API\u4eceBoss-Extrude\u7279\u5f81\u5b9a\u4e49\u4e2d\u63d0\u53d6From Entity\u3001End Condition\u548cDirection\u9009\u62e9\u6846\u4e2d\u6307\u5b9a\u7684\u9009\u62e9\u5b9e\u4f53\u7684\u4fe1\u606f\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Boss-Extrude\u7279\u5f81\u5c5e\u6027\u7ba1\u7406\u5668\u9875\u9762",src:t(56914).Z,width:"257",height:"673"})),(0,r.kt)("p",null,"\u63d0\u53d6\u7684\u6570\u636e\u4ee5\u4ee5\u4e0b\u683c\u5f0f\u8f93\u51fa\u5230VSTA\u7f16\u8f91\u5668\u7684\u8f93\u51fa\u7a97\u53e3\u4e2d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"From Entity: Yes [swSelFACES]\nEnd Condition (Direction 1): No\nEnd Condition (Direction 2): No\nDirection (Direction 1): Yes [swSelSKETCHSEGS]\nDirection (Direction 2): No\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'using SolidWorks.Interop.sldworks;\nusing SolidWorks.Interop.swconst;\nusing System.Runtime.InteropServices;\nusing System;\nusing System.Diagnostics;\n\nnamespace GetExtrudeFeatureSelection.csproj\n{\n    public partial class SolidWorksMacro\n    {\n        public void Main()\n        {\n            IModelDoc2 model = swApp.IActiveDoc2;\n\n            if (model != null)\n            {\n                IFeature feat = model.ISelectionManager.GetSelectedObject6(1, -1) as IFeature;\n\n                if (feat != null)\n                {\n                    IExtrudeFeatureData2 featData = feat.GetDefinition() as IExtrudeFeatureData2;\n\n                    if (featData != null)\n                    {\n                        if (featData.AccessSelections(model, null))\n                        {\n                            object fromEntity;\n                            int fromEntType;\n                            featData.GetFromEntity(out fromEntity, out fromEntType);\n\n                            Debug.Print(string.Format("From Entity: {0}",\n                                    fromEntity != null ? string.Format("Yes [{0}]", (swSelectType_e)fromEntType) : "No"));\n\n                            int endCondRefType;\n                            object endCondRef = featData.GetEndConditionReference(true, out endCondRefType);\n\n                            Debug.Print(string.Format("End Condition (Direction 1): {0}",\n                                    endCondRef != null ? string.Format("Yes [{0}]", (swSelectType_e)endCondRef) : "No"));\n\n                            endCondRef = featData.GetEndConditionReference(false, out endCondRefType);\n\n                            Debug.Print(string.Format("End Condition (Direction 2): {0}",\n                                    endCondRef != null ? string.Format("Yes [{0}]", (swSelectType_e)endCondRef) : "No"));\n\n                            object firstDirDirRef;\n                            int firstDirDirRefType;\n                            object secondDirDirRef;\n                            int secondDirDirRefType;\n\n                            featData.GetDirectionReference(out firstDirDirRef, out firstDirDirRefType, out secondDirDirRef, out secondDirDirRefType);\n\n                            Debug.Print(string.Format("Direction (Direction 1): {0}",\n                                    firstDirDirRef != null ? string.Format("Yes [{0}]", (swSelectType_e)firstDirDirRefType) : "No"));\n\n                            Debug.Print(string.Format("Direction (Direction 2): {0}",\n                                    secondDirDirRef != null ? string.Format("Yes [{0}]", (swSelectType_e)secondDirDirRefType) : "No"));\n\n                            featData.ReleaseSelectionAccess();\n                        }\n                        else\n                        {\n                            throw new InvalidOperationException("Failed to access feature selection");\n                        }\n                    }\n                    else \n                    {\n                        throw new InvalidCastException("Selected feature is not Boss-Extrude");\n                    }\n                }\n                else \n                {\n                    throw new NullReferenceException("Select feature");\n                }\n            }\n            else \n            {\n                throw new NullReferenceException("Open model");\n            }\n        }\n\n        public SldWorks swApp;\n    }\n}\n')))}p.isMDXComponent=!0},56914:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/boss-extrude-property-page-d4125c43275ff712a053a6ca8485816a.png"}}]);