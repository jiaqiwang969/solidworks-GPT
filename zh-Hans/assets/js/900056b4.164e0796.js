"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[36234],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),c=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(i.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),u=r,k=m["".concat(i,".").concat(u)]||m[u]||d[u]||s;return t?o.createElement(k,a(a({ref:n},p),{},{components:t})):o.createElement(k,a({ref:n},p))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[m]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<s;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},54256:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const s={layout:"sw-tool",title:"SOLIDWORKS\u5b8f\u4ee5\u6253\u7834\u3001\u9501\u5b9a\u6216\u89e3\u9501\u6587\u4ef6\u548c\u7ec4\u4ef6\u7684\u6240\u6709\u5916\u90e8\u5f15\u7528",image:"break-all-external-references.png",labels:["\u88c5\u914d","\u5916\u90e8\u5f15\u7528","solidworks api","\u5b9e\u7528\u5de5\u5177"],group:"\u88c5\u914d","redirect-from":["/2018/03/solidworks-api-assembly-break-all-external-references-for-components.html","/solidworks-api/document/assembly/break-components-external-references","/solidworks-api/document/assembly/components/break-external-references/"]},a=void 0,l={unversionedId:"codestack/solidworks-api/document/manage-external-references/index",id:"codestack/solidworks-api/document/manage-external-references/index",title:"SOLIDWORKS\u5b8f\u4ee5\u6253\u7834\u3001\u9501\u5b9a\u6216\u89e3\u9501\u6587\u4ef6\u548c\u7ec4\u4ef6\u7684\u6240\u6709\u5916\u90e8\u5f15\u7528",description:"\u8be5\u793a\u4f8b\u5c06\u4f7f\u7528SOLIDWORKS API\u6253\u7834\u3001\u9501\u5b9a\u6216\u89e3\u9501\u6d3b\u52a8\u6a21\u578b\u6216\u6d3b\u52a8\u88c5\u914d\u4e2d\u7684\u6240\u6709\u5916\u90e8\u5f15\u7528\u6216\u6240\u6709\u9009\u5b9a\u7684\u7ec4\u4ef6\u7684\u5916\u90e8\u5f15\u7528\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/document/manage-external-references/index.md",sourceDirName:"codestack/solidworks-api/document/manage-external-references",slug:"/codestack/solidworks-api/document/manage-external-references/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/manage-external-references/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/document/manage-external-references/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"SOLIDWORKS\u5b8f\u4ee5\u6253\u7834\u3001\u9501\u5b9a\u6216\u89e3\u9501\u6587\u4ef6\u548c\u7ec4\u4ef6\u7684\u6240\u6709\u5916\u90e8\u5f15\u7528",image:"break-all-external-references.png",labels:["\u88c5\u914d","\u5916\u90e8\u5f15\u7528","solidworks api","\u5b9e\u7528\u5de5\u5177"],group:"\u88c5\u914d","redirect-from":["/2018/03/solidworks-api-assembly-break-all-external-references-for-components.html","/solidworks-api/document/assembly/break-components-external-references","/solidworks-api/document/assembly/components/break-external-references/"]},sidebar:"tutorialSidebar",previous:{title:"\u5728\u91cd\u5efa\u65f6\u81ea\u52a8\u8fd0\u884cSOLIDWORKS\u5b8f\u7684\u5b8f\u7279\u5f81",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/macro-feature/run-macro-on-rebuild/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u5904\u7406\u96f6\u4ef6\u6750\u6599",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/document/materials/"}},i={},c=[{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"CAD+",id:"cad",level:2}],p={toc:c},m="wrapper";function d(e){let{components:n,...s}=e;return(0,r.kt)(m,(0,o.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u8be5\u793a\u4f8b\u5c06\u4f7f\u7528SOLIDWORKS API\u6253\u7834\u3001\u9501\u5b9a\u6216\u89e3\u9501\u6d3b\u52a8\u6a21\u578b\u6216\u6d3b\u52a8\u88c5\u914d\u4e2d\u7684\u6240\u6709\u5916\u90e8\u5f15\u7528\u6216\u6240\u6709\u9009\u5b9a\u7684\u7ec4\u4ef6\u7684\u5916\u90e8\u5f15\u7528\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"\u6253\u7834\u6240\u6709\u5916\u90e8\u5f15\u7528\u7684\u547d\u4ee4",src:t(15474).Z,width:"640",height:"286"}),"{ width=640 }"),(0,r.kt)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,r.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u5e38\u91cf\u7684\u503c\u6765\u914d\u7f6e\u5b8f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},"Const MODIFY_ACTION As Integer = ModifyAction_e.UnlockAll '\u5728\u6a21\u578b\u4e2d\u8c03\u7528\u7684\u64cd\u4f5c\u3002\u652f\u6301\u7684\u503c\uff1aBreakAll\u3001LockAll\u3001UnlockAll\nConst REFS_SCOPE As Integer = Scope_e.AllComponents '\u8fd0\u884c\u4e0a\u8ff0\u64cd\u4f5c\u7684\u8303\u56f4\u3002\u652f\u6301\u7684\u503c\uff1aThisFile\u3001TopLevelComponents\u3001AllComponents\u3001SelectedComponents\n")),(0,r.kt)("h2",{id:"cad"},"CAD+"),(0,r.kt)("p",null,"\u8be5\u5b8f\u4e0e",(0,r.kt)("a",{parentName:"p",href:"https://cadplus.xarial.com/toolbar/"},"Toolbar+"),"\u548c",(0,r.kt)("a",{parentName:"p",href:"https://cadplus.xarial.com/batch/"},"Batch+"),"\u5de5\u5177\u517c\u5bb9\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6309\u94ae\u6dfb\u52a0\u5230\u5de5\u5177\u680f\u5e76\u5206\u914d\u5feb\u6377\u952e\u4ee5\u4fbf\u66f4\u8f7b\u677e\u5730\u8bbf\u95ee\u6216\u6279\u5904\u7406\u8fd0\u884c\u3002"),(0,r.kt)("p",null,"\u8981\u542f\u7528",(0,r.kt)("a",{parentName:"p",href:"https://cadplus.xarial.com/toolbar/configuration/arguments/"},"\u5b8f\u53c2\u6570"),"\uff0c\u8bf7\u5c06",(0,r.kt)("strong",{parentName:"p"},"ARGS"),"\u5e38\u91cf\u8bbe\u7f6e\u4e3atrue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},"#Const ARGS = True\n")),(0,r.kt)("p",null,"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u9700\u8981\u590d\u5236\u5b8f\u4ee5\u8bbe\u7f6e\u5355\u72ec\u7684",(0,r.kt)("a",{parentName:"p",href:"#configuration"},"\u64cd\u4f5c\u548c\u8303\u56f4\u9009\u9879"),"\u3002"),(0,r.kt)("p",null,"\u800c\u662f\u6307\u5b9a2\u4e2a\u53c2\u6570\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,r.kt)("strong",{parentName:"li"},"-b"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"-l"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"-u"),"\u6765\u5206\u522b\u8bbe\u7f6e\u64cd\u4f5c\u4e3a",(0,r.kt)("strong",{parentName:"li"},"\u6253\u7834\u6240\u6709"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"\u9501\u5b9a\u6240\u6709"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"\u89e3\u9501\u6240\u6709")),(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,r.kt)("strong",{parentName:"li"},"-f"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"-t"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"-a"),"\u6765\u5206\u522b\u8bbe\u7f6e\u8303\u56f4\u4e3a",(0,r.kt)("strong",{parentName:"li"},"\u6b64\u6587\u4ef6"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"\u9876\u5c42\u7ec4\u4ef6"),"\u3001",(0,r.kt)("strong",{parentName:"li"},"\u6240\u6709\u7ec4\u4ef6"))),(0,r.kt)("p",null,"\u4f8b\u5982\uff0c\u4ee5\u4e0b\u53c2\u6570\u5c06\u9501\u5b9a\u6587\u4ef6\u672c\u8eab\u7684\u6240\u6709\u5916\u90e8\u5f15\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> -l -f\n")),(0,r.kt)("p",null,"\u800c\u4ee5\u4e0b\u547d\u4ee4\u5c06\u6253\u7834\u88c5\u914d\u4e2d\u6240\u6709\u7ec4\u4ef6\uff08\u5305\u62ec\u5b50\u7ec4\u4ef6\uff09\u7684\u6240\u6709\u5916\u90e8\u5f15\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> -b -a\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},'#Const ARGS = False \'True\u8868\u793a\u4f7f\u7528Toolbar+\u6216Batch+\u4e2d\u7684\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u5e38\u91cf\n\nEnum ModifyAction_e\n    BreakAll\n    LockAll\n    UnlockAll\nEnd Enum\n\nEnum Scope_e\n    ThisFile\n    TopLevelComponents\n    AllComponents\n    SelectedComponents\nEnd Enum\n\nConst MODIFY_ACTION As Integer = ModifyAction_e.UnlockAll\nConst REFS_SCOPE As Integer = Scope_e.AllComponents\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \ntry_:\n    \n    On Error GoTo catch_\n    \n    Dim action As ModifyAction_e\n    Dim scope As Scope_e\n    \n    #If ARGS Then\n                \n        Dim macroRunner As Object\n        Set macroRunner = CreateObject("CadPlus.MacroRunner.Sw")\n        \n        Dim param As Object\n        Set param = macroRunner.PopParameter(swApp)\n        \n        Dim vArgs As Variant\n        vArgs = param.Get("Args")\n        \n        Dim actionArg As String\n        actionArg = CStr(vArgs(0))\n        \n        Select Case LCase(actionArg)\n            Case "-b"\n                action = ModifyAction_e.BreakAll\n            Case "-l"\n                action = ModifyAction_e.LockAll\n            Case "-u"\n                action = ModifyAction_e.UnlockAll\n            Case Else\n                Err.Raise vbError, "", "\u65e0\u6548\u7684\u64cd\u4f5c\u53c2\u6570\u3002\u6709\u6548\u53c2\u6570\uff1a-b -l -u"\n        End Select\n        \n        Dim scopeArg As String\n        scopeArg = CStr(vArgs(1))\n        \n        Select Case LCase(scopeArg)\n            Case "-f"\n                scope = ThisFile\n            Case "-t"\n                scope = TopLevelComponents\n            Case "-a"\n                scope = AllComponents\n            Case Else\n                Err.Raise vbError, "", "\u65e0\u6548\u7684\u8303\u56f4\u53c2\u6570\u3002\u6709\u6548\u53c2\u6570\uff1a-f -t -a"\n        End Select\n        \n    #Else\n        action = MODIFY_ACTION\n        scope = REFS_SCOPE\n    #End If\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Set swModel = swApp.ActiveDoc\n    \n    If scope = ThisFile Then\n        ProcessReferences swModel, action\n    Else\n        If swModel.GetType() = swDocumentTypes_e.swDocASSEMBLY Then\n                \n            Dim swAssy As SldWorks.AssemblyDoc\n                \n            Set swAssy = swModel\n            \n            swAssy.ResolveAllLightWeightComponents True\n            \n            Dim vComps As Variant\n            Dim swComp As SldWorks.Component2\n            Dim swCompModel As SldWorks.ModelDoc2\n            \n            If scope = SelectedComponents Then\n                vComps = GetSelectedComponents(swModel.SelectionManager)\n            Else\n                Dim topLevel As Boolean\n                \n                Select Case scope\n                    Case TopLevelComponents\n                        topLevel = True\n                    Case AllComponents\n                        topLevel = False\n                    Case Else\n                        Err.Raise "\u65e0\u6548\u7684\u8303\u56f4"\n                End Select\n                \n                vComps = swAssy.GetComponents(topLevel)\n                \n            End If\n            \n            Dim i As Integer\n                \n            If Not IsEmpty(vComps) Then\n                \n                For i = 0 To UBound(vComps)\n                    \n                    Set swComp = vComps(i)\n                    Set swCompModel = swComp.GetModelDoc2\n                    \n                    If Not swCompModel Is Nothing Then\n                        ProcessReferences swCompModel, action\n                    End If\n                Next\n            \n            End If\n            \n        Else\n            Err.Raise "\u8bf7\u6253\u5f00\u88c5\u914d"\n        End If\n     \n     End If\n         \n    GoTo finally_\n         \ncatch_:\n    #If ARGS Then\n        Err.Raise Err.Number, Err.Source, Err.Description, Err.HelpContext, Err.HelpContext\n    #Else\n        MsgBox Err.Description, vbCritical\n    #End If\nfinally_:\n\nEnd Sub\n\nFunction GetSelectedComponents(selMgr As SldWorks.SelectionMgr) As Variant\n\n    Dim isInit As Boolean\n    isInit = False\n    \n    Dim swComps() As SldWorks.Component2\n\n    Dim i As Integer\n    \n    For i = 1 To selMgr.GetSelectedObjectCount2(-1)\n                \n        Dim swComp As SldWorks.Component2\n    \n        Set swComp = selMgr.GetSelectedObjectsComponent4(i, -1)\n        \n        If Not swComp Is Nothing Then\n            \n            If Not isInit Then\n                ReDim swComps(0)\n                Set swComps(0) = swComp\n                isInit = True\n            Else\n                If Not Contains(swComps, swComp) Then\n                    ReDim Preserve swComps(UBound(swComps) + 1)\n                    Set swComps(UBound(swComps)) = swComp\n                End If\n            End If\n                        \n        End If\n    \n    Next\n\n    If isInit Then\n        GetSelectedComponents = swComps\n    Else\n        GetSelectedComponents = Empty\n    End If\n\nEnd Function\n\nFunction Contains(vArr As Variant, item As Object) As Boolean\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(vArr)\n        If vArr(i) Is item Then\n            Contains = True\n            Exit Function\n        End If\n    Next\n    \n    Contains = False\n    \nEnd Function\n\nSub ProcessReferences(model As SldWorks.ModelDoc2, action As ModifyAction_e)\n    \n    Select Case action\n        Case ModifyAction_e.BreakAll\n            model.Extension.BreakAllExternalFileReferences2 False\n        Case ModifyAction_e.LockAll\n            model.LockAllExternalReferences\n        Case ModifyAction_e.UnlockAll\n            model.UnlockAllExternalReferences\n        Case Else\n            Err.Raise "\u4e0d\u652f\u6301\u7684\u64cd\u4f5c"\n    End Select\n    \nEnd Sub\n')))}d.isMDXComponent=!0},15474:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/break-all-external-references-624256b3c8216e16db2125ab2aced821.png"}}]);