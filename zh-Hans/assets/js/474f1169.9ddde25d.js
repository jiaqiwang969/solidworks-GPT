"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[12889],{3905:(e,n,t)=>{t.d(n,{Zo:()=>f,kt:()=>F});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),c=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},f=function(e){var n=c(e.components);return r.createElement(a.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,a=e.parentName,f=o(e,["components","mdxType","originalType","parentName"]),p=c(t),g=i,F=p["".concat(a,".").concat(g)]||p[g]||u[g]||s;return t?r.createElement(F,l(l({ref:n},f),{},{components:t})):r.createElement(F,l({ref:n},f))}));function F(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,l=new Array(s);l[0]=g;var o={};for(var a in n)hasOwnProperty.call(n,a)&&(o[a]=n[a]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<s;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},66520:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(87462),i=(t(67294),t(3905));const s={title:"\u5728Visual Basic 6 (VBA)\u4e2d\u663e\u793a\u6587\u4ef6\u6d4f\u89c8\u5bf9\u8bdd\u6846\u4ee5\u4fdd\u5b58\u6216\u6253\u5f00\u6587\u4ef6",caption:"\u6d4f\u89c8\u6587\u4ef6\u4ee5\u4fdd\u5b58\u6216\u6253\u5f00"},l=void 0,o={unversionedId:"codestack/visual-basic/algorithms/fso/browse-file/index",id:"codestack/visual-basic/algorithms/fso/browse-file/index",title:"\u5728Visual Basic 6 (VBA)\u4e2d\u663e\u793a\u6587\u4ef6\u6d4f\u89c8\u5bf9\u8bdd\u6846\u4ee5\u4fdd\u5b58\u6216\u6253\u5f00\u6587\u4ef6",description:"\u5728Visual Basic 6 (VBA)\u4e2d\u663e\u793a\u6587\u4ef6\u6d4f\u89c8\u5bf9\u8bdd\u6846\u4ee5\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6\u8def\u5f84\u6216\u6253\u5f00\u6587\u4ef6\u8def\u5f84",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/visual-basic/algorithms/fso/browse-file/index.md",sourceDirName:"codestack/visual-basic/algorithms/fso/browse-file",slug:"/codestack/visual-basic/algorithms/fso/browse-file/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/visual-basic/algorithms/fso/browse-file/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/visual-basic/algorithms/fso/browse-file/index.md",tags:[],version:"current",frontMatter:{title:"\u5728Visual Basic 6 (VBA)\u4e2d\u663e\u793a\u6587\u4ef6\u6d4f\u89c8\u5bf9\u8bdd\u6846\u4ee5\u4fdd\u5b58\u6216\u6253\u5f00\u6587\u4ef6",caption:"\u6d4f\u89c8\u6587\u4ef6\u4ee5\u4fdd\u5b58\u6216\u6253\u5f00"},sidebar:"tutorialSidebar",previous:{title:"Visual Basic\uff08VBA\uff09\u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\u5bf9\u8c61\uff08FSO\uff09\u4ee3\u7801\u7247\u6bb5",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/visual-basic/algorithms/fso/"},next:{title:"\u5728VBA\u5b8f\u4e2d\u6d4f\u89c8\u6587\u4ef6\u5939",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/visual-basic/algorithms/fso/browse-folder/"}},a={},c=[{value:"labels: \u6587\u4ef6,\u6d4f\u89c8,\u4fdd\u5b58",id:"labels-\u6587\u4ef6\u6d4f\u89c8\u4fdd\u5b58",level:2}],f={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u5728Visual Basic 6 (VBA)\u4e2d\u663e\u793a\u6587\u4ef6\u6d4f\u89c8\u5bf9\u8bdd\u6846\u4ee5\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6\u8def\u5f84\u6216\u6253\u5f00\u6587\u4ef6\u8def\u5f84"),(0,i.kt)("h2",{id:"labels-\u6587\u4ef6\u6d4f\u89c8\u4fdd\u5b58"},"labels: ","[\u6587\u4ef6,\u6d4f\u89c8,\u4fdd\u5b58]"),(0,i.kt)("p",null,"Excel VBA\u5b8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\u6765\u6d4f\u89c8\u6587\u4ef6\u7684\u540d\u79f0\u4ee5\u4fdd\u5b58",(0,i.kt)("strong",{parentName:"p"},"Application.GetSaveAsFilename"),"\u6216\u6253\u5f00",(0,i.kt)("strong",{parentName:"p"},"Application.GetOpenAsFilename"),"\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u51fd\u6570\u4ec5\u5728Excel VBA\u5b8f\u4e2d\u53ef\u7528\uff0c\u800c\u5728\u5176\u4ed6\u73af\u5883\u4e2d\u4e0d\u53ef\u7528\u3002"),(0,i.kt)("p",null,"\u6b64\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u901a\u7528\u51fd\u6570\u6765\u6d4f\u89c8\u4fdd\u5b58\u6216\u6253\u5f00\u6587\u4ef6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vb"},'Private Declare PtrSafe Function GetSaveFileName Lib "comdlg32.dll" Alias "GetSaveFileNameA" (pOpenfilename As OPENFILENAME) As Boolean\nPrivate Declare PtrSafe Function GetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (pOpenfilename As OPENFILENAME) As Boolean\n\nPrivate Type OPENFILENAME\n  lStructSize As Long\n  hwndOwner As LongPtr\n  hInstance As LongPtr\n  lpstrFilter As String\n  lpstrCustomFilter As String\n  nMaxCustFilter As Long\n  nFilterIndex As Long\n  lpstrFile As String\n  nMaxFile As Long\n  lpstrFileTitle As String\n  nMaxFileTitle As Long\n  lpstrInitialDir As String\n  lpstrTitle As String\n  Flags As LongPtr\n  nFileOffset As Integer\n  nFileExtension As Integer\n  lpstrDefExt As String\n  lCustData As Long\n  lpfnHook As Long\n  lpTemplateName As String\nEnd Type\n\nConst FILTER As String = "\u6587\u672c\u6587\u4ef6 (*.txt)|*.txt|PNG \u56fe\u50cf\u6587\u4ef6 (*.png)|*.png|\u6240\u6709\u6587\u4ef6 (*.*)|*.*"\n\nSub main()\n\n    Dim filePath As String\n    filePath = BrowseForFileSave("\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6\u8def\u5f84", FILTER)\n    \n    If filePath <> "" Then\n        Debug.Print "\u9009\u62e9\u7684\u4fdd\u5b58\u6587\u4ef6\u8def\u5f84: " & filePath\n    Else\n        Debug.Print "\u672a\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6"\n    End If\n    \n    filePath = BrowseForFileOpen("\u9009\u62e9\u6253\u5f00\u6587\u4ef6\u8def\u5f84", FILTER)\n    \n    If filePath <> "" Then\n        Debug.Print "\u9009\u62e9\u7684\u6253\u5f00\u6587\u4ef6\u8def\u5f84: " & filePath\n    Else\n        Debug.Print "\u672a\u9009\u62e9\u6253\u5f00\u6587\u4ef6"\n    End If\n\nEnd Sub\n\nFunction BrowseForFileSave(title As String, filters As String) As String\n    BrowseForFileSave = BrowseForFile(title, filters, True)\nEnd Function\n\nFunction BrowseForFileOpen(title As String, filters As String) As String\n    BrowseForFileOpen = BrowseForFile(title, filters, False)\nEnd Function\n\nFunction BrowseForFile(title As String, filters As String, save As Boolean) As String\n    \n    Dim ofn As OPENFILENAME\n    Const FILE_PATH_BUFFER_SIZE As Integer = 260\n    \n    ofn.lpstrFilter = Replace(filters, "|", Chr(0)) & Chr(0)\n    ofn.lpstrTitle = title\n    ofn.nMaxFile = FILE_PATH_BUFFER_SIZE\n    ofn.nMaxFileTitle = FILE_PATH_BUFFER_SIZE\n    ofn.lpstrFile = String(FILE_PATH_BUFFER_SIZE, Chr(0))\n    ofn.lStructSize = LenB(ofn)\n    \n    Dim res As Boolean\n    \n    If save Then\n        res = GetSaveFileName(ofn)\n    Else\n        res = GetOpenFileName(ofn)\n    End If\n    \n    If res Then\n        \n        Dim filePath As String\n        filePath = Left(ofn.lpstrFile, InStr(ofn.lpstrFile, vbNullChar) - 1)\n        \n        If save Then\n            Dim vFilters As Variant\n            vFilters = Split(FILTER, "|")\n            Dim ext As String\n            ext = vFilters((ofn.nFilterIndex - 1) * 2 + 1)\n            ext = Right(ext, Len(ext) - InStrRev(ext, ".") + 1)\n            \n            If LCase(Right(filePath, Len(ext))) <> LCase(ext) Then\n                filePath = filePath & ext\n            End If\n        End If\n        \n        BrowseForFile = filePath\n        \n    Else\n        BrowseForFile = ""\n    End If\n    \nEnd Function\n')))}u.isMDXComponent=!0}}]);