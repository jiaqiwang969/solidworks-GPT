"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[41365],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>f});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=r.createContext({}),l=function(e){var t=r.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,s=e.originalType,c=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),p=l(o),m=n,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||s;return o?r.createElement(f,i(i({ref:t},d),{},{components:o})):r.createElement(f,i({ref:t},d))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=o.length,i=new Array(s);i[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[p]="string"==typeof e?e:n,i[1]=a;for(var l=2;l<s;l++)i[l]=o[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},185:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=o(87462),n=(o(67294),o(3905));const s={caption:"Scale Imported Geometry",title:"VBA macro to scale the geometry of the imported features using SOLIDWORKS API",description:"VBA macro scales the bodies from the imported features of the foreign formats (e.g. STEP, IGES) with the specified scale factor",image:"imported-feature.png"},i=void 0,a={unversionedId:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/scale-imported-part/index",id:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/scale-imported-part/index",title:"VBA macro to scale the geometry of the imported features using SOLIDWORKS API",description:"VBA macro scales the bodies from the imported features of the foreign formats (e.g. STEP, IGES) with the specified scale factor",source:"@site/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/scale-imported-part/index.md",sourceDirName:"codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/scale-imported-part",slug:"/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/scale-imported-part/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/scale-imported-part/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/scale-imported-part/index.md",tags:[],version:"current",frontMatter:{caption:"Scale Imported Geometry",title:"VBA macro to scale the geometry of the imported features using SOLIDWORKS API",description:"VBA macro scales the bodies from the imported features of the foreign formats (e.g. STEP, IGES) with the specified scale factor",image:"imported-feature.png"},sidebar:"tutorialSidebar",previous:{title:"Save the selected body into external file using SOLIDWORKS API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/save-body-to-file/"},next:{title:"Fix missing Visual Studio SOLIDWORKS API SDK project templates",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/sdk-installation/"}},c={},l=[],d={toc:l},p="wrapper";function u(e){let{components:t,...s}=e;return(0,n.kt)(p,(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Imported geometry feature",src:o(88637).Z,width:"322",height:"536"}),"{ width=250 }"),(0,n.kt)("p",null,"This VBA macro scales all bodies form the imported features in active SOLIDWORKS part file. THe imported features will be generated if file is loaded from neutral formats like STEP, IGES, Parasolid unless 3D Interconnect option is used."),(0,n.kt)("p",null,"Set the scale factor in the ",(0,n.kt)("strong",{parentName:"p"},"SCALE_FACTOR")," constant."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-vb"},'Const SCALE_FACTOR As Double = 2.5\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    \n    Dim errs As Long\n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n        \n        Dim swFeat As SldWorks.Feature\n        \n        Dim i As Integer\n        i = -1\n        \n        Do\n            i = i + 1\n            Set swFeat = swModel.FeatureByPositionReverse(i)\n            \n            If swFeat.GetTypeName2() = "BaseBody" Then\n                \n                Dim swBody As SldWorks.Body2\n                \n                Set swBody = swFeat.GetFaces()(0).GetBody\n                Set swBody = swBody.Copy\n                \n                ApplyScale swBody, SCALE_FACTOR\n                \n                swFeat.SetBody swBody\n                \n            End If\n            \n            If swFeat.GetTypeName2() = "OriginProfileFeature" Then\n                Exit Do\n            End If\n            \n        Loop While Not swFeat Is Nothing\n        \n    Else\n        Err.Raise vbError, "", "Failed to load model: " & errs\n    End If\n    \nEnd Sub\n\nSub ApplyScale(body As SldWorks.Body2, scaleFactor As Double)\n\n    Dim dMatrix(15) As Double\n    dMatrix(0) = 1: dMatrix(1) = 0: dMatrix(2) = 0: dMatrix(3) = 0\n    dMatrix(4) = 1: dMatrix(5) = 0: dMatrix(6) = 0: dMatrix(7) = 0\n    dMatrix(8) = 1: dMatrix(9) = 0: dMatrix(10) = 0: dMatrix(11) = 0\n    dMatrix(12) = scaleFactor: dMatrix(13) = 0: dMatrix(14) = 0: dMatrix(15) = 0\n\n    Dim swMathUtils As SldWorks.MathUtility\n    Set swMathUtils = swApp.GetMathUtility\n    \n    Dim swMathTransform As SldWorks.MathTransform\n    Set swMathTransform = swMathUtils.CreateTransform(dMatrix)\n\n    body.ApplyTransform swMathTransform\n    \nEnd Sub\n')))}u.isMDXComponent=!0},88637:(e,t,o)=>{o.d(t,{Z:()=>r});const r=o.p+"assets/images/imported-feature-2c7085812b40eb12d19aee5242307b6e.png"}}]);