"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[94794],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>w});var s=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,s)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,s,r=function(t,e){if(null==t)return{};var n,s,r={},a=Object.keys(t);for(s=0;s<a.length;s++)n=a[s],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(s=0;s<a.length;s++)n=a[s],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=s.createContext({}),l=function(t){var e=s.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=l(t.components);return s.createElement(c.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return s.createElement(s.Fragment,{},e)}},m=s.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,c=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),p=l(n),m=r,w=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return n?s.createElement(w,i(i({ref:e},d),{},{components:n})):s.createElement(w,i({ref:e},d))}));function w(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,i=new Array(a);i[0]=m;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o[p]="string"==typeof t?t:r,i[1]=o;for(var l=2;l<a;l++)i[l]=n[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},97196:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(87462),r=(n(67294),n(3905));const a={title:"\u5c04\u7ebf\u4ea4\u70b9"},i=void 0,o={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/ray-intersection/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/ray-intersection/index",title:"\u5c04\u7ebf\u4ea4\u70b9",description:"\u5728SOLIDWORKS\u6a21\u578b\u4e2d\u4f7f\u7528\u5c04\u7ebf\u627e\u5230\u4ea4\u70b9\u548c\u62d3\u6251\u5b9e\u4f53\u7684VBA\u5b8f\u793a\u4f8b",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/ray-intersection/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/ray-intersection",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/ray-intersection/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/ray-intersection/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/ray-intersection/index.md",tags:[],version:"current",frontMatter:{title:"\u5c04\u7ebf\u4ea4\u70b9"},sidebar:"tutorialSidebar",previous:{title:"\u6e05\u9664SOLIDWORKS\u88c5\u914d\u4e2d\u7684\u90e8\u4ef6\u914d\u7f6e\uff08\u5220\u9664\u6240\u6709\u672a\u4f7f\u7528\u7684\u914d\u7f6e\uff09",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/purge-configurations/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u4ece\u6587\u4ef6\u3001\u914d\u7f6e\u548c\u5207\u5272\u5217\u8868\u5143\u7d20\u4e2d\u8bfb\u53d6\u81ea\u5b9a\u4e49\u5c5e\u6027",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/read-all-properties/"}},c={},l=[{value:"image: ray-intersection-entities.png",id:"image-ray-intersection-entitiespng",level:2},{value:"\u5982\u4f55\u8fd0\u884c\u5b8f",id:"\u5982\u4f55\u8fd0\u884c\u5b8f",level:2}],d={toc:l},p="wrapper";function u(t){let{components:e,...a}=t;return(0,r.kt)(p,(0,s.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u5728SOLIDWORKS\u6a21\u578b\u4e2d\u4f7f\u7528\u5c04\u7ebf\u627e\u5230\u4ea4\u70b9\u548c\u62d3\u6251\u5b9e\u4f53\u7684VBA\u5b8f\u793a\u4f8b"),(0,r.kt)("h2",{id:"image-ray-intersection-entitiespng"},"image: ray-intersection-entities.png"),(0,r.kt)("p",null,"\u8fd9\u4e2aVBA\u5b8f\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u5728\u6d3b\u52a8\u7684SOLIDWORKS\u96f6\u4ef6\u6587\u6863\u4e2d\u7684\u6240\u6709\u5b9e\u4f53\u4e4b\u95f4\u4ee5\u53ca\u4ece\u6240\u9009\u8349\u56fe\u7684\u8349\u56fe\u70b9\u521b\u5efa\u7684\u5c04\u7ebf\u4e4b\u95f4\u627e\u5230\u4ea4\u70b9\u548c\u76f8\u5e94\u7684\u62d3\u6251\u5b9e\u4f53\u3002"),(0,r.kt)("h2",{id:"\u5982\u4f55\u8fd0\u884c\u5b8f"},"\u5982\u4f55\u8fd0\u884c\u5b8f"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6253\u5f00\u6216\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u53ef\u89c1\u5b9e\u4f53\u7684\u96f6\u4ef6\u6587\u6863\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u521b\u5efa\u5e26\u6709\u8349\u56fe\u70b9\u76842D\u8349\u56fe\u3002\u8349\u56fe\u70b9\u5c06\u7528\u4f5c\u5c04\u7ebf\u7684\u8d77\u59cb\u70b9\u3002\u8349\u56fe\u6cd5\u7ebf\u5c06\u7528\u4f5c\u5c04\u7ebf\u7684\u65b9\u5411\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u9009\u62e9\u4e0a\u8ff0\u8349\u56fe\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u8fd0\u884c\u5b8f\u3002\u5b8f\u5c06\u627e\u5230\u6240\u6709\u7684\u4ea4\u70b9\u5e76\u5728\u6bcf\u4e2a\u627e\u5230\u7684\u7ed3\u679c\u4e0a\u6682\u505c\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5b8f\u5c06\u628a\u6bcf\u4e2a\u5c04\u7ebf\u7684\u4fe1\u606f\u8f93\u51fa\u5230",(0,r.kt)("a",{parentName:"p",href:"/docs/codestack/visual-basic/vba/vba-editor/windows#immediate-window"},"VBA\u7acb\u5373\u7a97\u53e3"),"\u4e2d\u3002\u4fe1\u606f\u5305\u62ec\u5b9e\u4f53\u7684\u540d\u79f0\u3001\u5c04\u7ebf\u4fe1\u606f\uff08\u8d77\u59cb\u70b9\u548c\u65b9\u5411\uff09\u4ee5\u53ca\u4ea4\u70b9\u7c7b\u578b\uff0c\u5982",(0,r.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2020/english/api/swconst/SolidWorks.Interop.swconst~SolidWorks.Interop.swconst.swRayPtsResults_e.html"},"swRayPtsResults_e"),"\u4e2d\u5b9a\u4e49\u7684\u3002"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"\u5c04\u7ebf\u4ea4\u70b9\u4fe1\u606f",src:n(7395).Z,width:"610",height:"280"}))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5b8f\u5c06\u9009\u62e9\u5c04\u7ebf\u6240\u51fb\u4e2d\u7684\u76f8\u5e94\u5b9e\u4f53\uff08\u9762\u6216\u8fb9\uff09\u3002\u9009\u62e9\u70b9\u5c06\u6307\u793a\u5c04\u7ebf\u51fb\u4e2d\u5b9e\u4f53\u7684\u4f4d\u7f6e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4f7f\u7528F5\u6216VBA\u7f16\u8f91\u5668\u4e2d\u7684",(0,r.kt)("strong",{parentName:"p"},"\u8fd0\u884c"),"\u6309\u94ae\u7ee7\u7eed\u6267\u884c\u5b8f\u4ee5\u904d\u5386\u6240\u6709\u7ed3\u679c\u3002"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"\u5c04\u7ebf\u4ea4\u70b9\u5b9e\u4f53",src:n(86129).Z,width:"658",height:"462"})))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\nConst HIT_RADIUS As Double = 0.00000001\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    Dim swPart As SldWorks.PartDoc\n    \n    Set swModel = swApp.ActiveDoc\n    Set swPart = swModel\n    \n    Dim swSelMgr As SldWorks.SelectionMgr\n    Set swSelMgr = swModel.SelectionManager\n    \n    Dim swSketch As SldWorks.sketch\n    \n    If swSelMgr.GetSelectedObjectType3(1, -1) = swSelectType_e.swSelSKETCHES Then\n        Dim swFeat As SldWorks.Feature\n        Set swFeat = swSelMgr.GetSelectedObject6(1, -1)\n        Set swSketch = swFeat.GetSpecificFeature2\n    Else\n        Err.Raise vbError, "", "\u672a\u9009\u62e9\u5e26\u6709\u8349\u56fe\u70b9\u5c04\u7ebf\u7684\u8349\u56fe"\n    End If\n    \n    Dim vRayStartPts As Variant\n    Dim vRayVecs As Variant\n    \n    GetRaysFromSketchPoints swSketch, vRayStartPts, vRayVecs\n    \n    Dim vBodies As Variant\n    vBodies = swPart.GetBodies2(swBodyType_e.swSolidBody, True)\n    \n    Dim interCount As Integer\n    interCount = swModel.Extension.RayIntersections(vBodies, vRayStartPts, vRayVecs, swRayPtsOpts_e.swRayPtsOptsENTRY_EXIT + swRayPtsOpts_e.swRayPtsOptsTOPOLS, HIT_RADIUS, 0, True)\n    \n    If interCount > 0 Then\n        \n        Dim vInterPoints As Variant\n        vInterPoints = swModel.GetRayIntersectionsPoints()\n        \n        Dim vInterTopol As Variant\n        vInterTopol = swModel.GetRayIntersectionsTopology\n        \n        Dim i As Integer\n        \n        For i = 0 To interCount - 1\n            \n            Dim bodyIndex As Integer\n            Dim rayIndex As Integer\n            Dim interType As Integer\n            Dim dHitPt(2) As Double\n            \n            bodyIndex = CInt(vInterPoints(i * 9))\n            rayIndex = CInt(vInterPoints(i * 9 + 1))\n            interType = CInt(vInterPoints(i * 9 + 2))\n            \n            dHitPt(0) = CDbl(vInterPoints(i * 9 + 3))\n            dHitPt(1) = CDbl(vInterPoints(i * 9 + 4))\n            dHitPt(2) = CDbl(vInterPoints(i * 9 + 5))\n            \n            Dim swEnt As SldWorks.Entity\n            Set swEnt = vInterTopol(i)\n            \n            Debug.Print "\u4ea4\u70b9\u5b9e\u4f53\uff1a" & vBodies(bodyIndex).Name\n            Debug.Print "\u4ea4\u70b9\u5c04\u7ebf\uff1a[" & vRayStartPts(rayIndex * 3) & ";" & vRayStartPts(rayIndex * 3 + 1) & ";" & vRayStartPts(rayIndex * 3 + 2) & "] - [" & vRayVecs(rayIndex * 3) & ";" & vRayVecs(rayIndex * 3 + 1) & ";" & vRayVecs(rayIndex * 3 + 2) & "]"\n            Debug.Print "\u4ea4\u70b9\u7c7b\u578b\uff1a" & interType\n            \n            Dim swSelData As SldWorks.SelectData\n            Set swSelData = swSelMgr.CreateSelectData\n            \n            swSelData.X = dHitPt(0)\n            swSelData.Y = dHitPt(1)\n            swSelData.Z = dHitPt(2)\n            \n            swEnt.Select4 False, swSelData\n            \n            Stop\n            \n        Next\n        \n    Else\n        Err.Raise vbError, "", "\u672a\u627e\u5230\u4ea4\u70b9"\n    End If\n    \nEnd Sub\n\nSub GetRaysFromSketchPoints(sketch As SldWorks.sketch, rayStartPts As Variant, rayVecs As Variant)\n    \n    If False = sketch.Is3D() Then\n        \n        Dim dRayStartPts() As Double\n        Dim dRayVecs() As Double\n        \n        Dim vSkPoints As Variant\n        vSkPoints = sketch.GetSketchPoints2\n        \n        If Not IsEmpty(vSkPoints) Then\n            \n            Dim swTransform As SldWorks.MathTransform\n            Set swTransform = sketch.ModelToSketchTransform.Inverse\n            \n            Dim swMathUtils As SldWorks.MathUtility\n            Set swMathUtils = swApp.GetMathUtility\n            \n            Dim dVec(2) As Double\n            dVec(0) = 0: dVec(1) = 0: dVec(2) = 1\n            \n            Dim swMathVec As SldWorks.MathVector\n            Set swMathVec = swMathUtils.CreateVector(dVec)\n            Set swMathVec = swMathVec.MultiplyTransform(swTransform)\n            \n            ReDim dRayStartPts((UBound(vSkPoints) + 1) * 3 - 1)\n            ReDim dRayVecs((UBound(vSkPoints) + 1) * 3 - 1)\n            \n            Dim i As Integer\n            \n            For i = 0 To UBound(vSkPoints)\n                \n                Dim swMathPt As SldWorks.MathPoint\n                Dim dPt(2) As Double\n                \n                Dim swSkPt As SldWorks.SketchPoint\n                Set swSkPt = vSkPoints(i)\n                dPt(0) = swSkPt.X: dPt(1) = swSkPt.Y: dPt(2) = 0\n                \n                Set swMathPt = swMathUtils.CreatePoint(dPt)\n                Set swMathPt = swMathPt.MultiplyTransform(swTransform)\n                \n                Dim vData As Variant\n                vData = swMathPt.ArrayData\n                \n                dRayStartPts(i * 3) = vData(0)\n                dRayStartPts(i * 3 + 1) = vData(1)\n                dRayStartPts(i * 3 + 2) = vData(2)\n                \n                vData = swMathVec.ArrayData\n                \n                dRayVecs(i * 3) = vData(0)\n                dRayVecs(i * 3 + 1) = vData(1)\n                dRayVecs(i * 3 + 2) = vData(2)\n                \n            Next\n            \n            rayStartPts = dRayStartPts\n            rayVecs = dRayVecs\n            \n        Else\n            Err.Raise vbError, "", "\u6307\u5b9a\u7684\u8349\u56fe\u4e2d\u6ca1\u6709\u8349\u56fe\u70b9"\n        End If\n        \n    Else\n        Err.Raise vbError, "", "\u53ea\u80fd\u4f7f\u75282D\u8349\u56fe\u8fdb\u884c\u5c04\u7ebf"\n    End If\n    \nEnd Sub\n')))}u.isMDXComponent=!0},86129:(t,e,n)=>{n.d(e,{Z:()=>s});const s=n.p+"assets/images/ray-intersection-entities-536217f335b76fe3d4614aac7e5dc698.png"},7395:(t,e,n)=>{n.d(e,{Z:()=>s});const s=n.p+"assets/images/ray-intersection-result-d20f2ef176f49c8e046b3c747b24a85c.png"}}]);