"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[53538],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>S});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=d(t),p=o,S=c["".concat(l,".").concat(p)]||c[p]||u[p]||a;return t?r.createElement(S,s(s({ref:n},m),{},{components:t})):r.createElement(S,s({ref:n},m))}));function S(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<a;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},14940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=t(87462),o=(t(67294),t(3905));const a={title:"\u4f7f\u7528SOLIDWORKS API\u5728\u6a21\u578b\u7b2c\u4e09\u65b9\u5b58\u50a8\u4e2d\u5e8f\u5217\u5316\u6587\u4ef6\u5185\u5bb9",caption:"\u5c06\u6587\u4ef6\u5d4c\u5165\u7b2c\u4e09\u65b9\u5b58\u50a8"},s=void 0,i={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/embed-file/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/embed-file/index",title:"\u4f7f\u7528SOLIDWORKS API\u5728\u6a21\u578b\u7b2c\u4e09\u65b9\u5b58\u50a8\u4e2d\u5e8f\u5217\u5316\u6587\u4ef6\u5185\u5bb9",description:"\u4f7f\u7528SOLIDWORKS API\u548c\u6a21\u578b\u6587\u6863\u4e2d\u7684XmlSerializers\uff0cVB.NET\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u4e2d\u7684\u7b2c\u4e09\u65b9\u5b58\u50a8\uff08\u6d41\uff09\u6765\u5d4c\u5165\u548c\u63d0\u53d6\u6587\u4ef6\u5185\u5bb9",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/embed-file/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/embed-file",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/embed-file/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/embed-file/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/embed-file/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS API\u5728\u6a21\u578b\u7b2c\u4e09\u65b9\u5b58\u50a8\u4e2d\u5e8f\u5217\u5316\u6587\u4ef6\u5185\u5bb9",caption:"\u5c06\u6587\u4ef6\u5d4c\u5165\u7b2c\u4e09\u65b9\u5b58\u50a8"},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528SOLIDWORKS API\u5c06\u81ea\u5b9a\u4e49\u5c5e\u6027\u4fee\u8ba2\u4fdd\u5b58\u5230\u7b2c\u4e09\u65b9\u5b58\u50a8\u5e93",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/custom-properties-revisions/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u5728\u6a21\u578b\u7684\u7b2c\u4e09\u65b9\u5b58\u50a8\u4e2d\u8fdb\u884c\u6811\u7ed3\u6784\u5e8f\u5217\u5316",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/third-party/tree-structure-serialization/"}},l={},d=[{value:"labels: \u5e8f\u5217\u5316,\u7b2c\u4e09\u65b9\u5b58\u50a8,\u6587\u4ef6",id:"labels-\u5e8f\u5217\u5316\u7b2c\u4e09\u65b9\u5b58\u50a8\u6587\u4ef6",level:2},{value:"\u4f7f\u7528\u8bf4\u660e",id:"\u4f7f\u7528\u8bf4\u660e",level:2}],m={toc:d},c="wrapper";function u(e){let{components:n,...a}=e;return(0,o.kt)(c,(0,r.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u4f7f\u7528SOLIDWORKS API\u548c\u6a21\u578b\u6587\u6863\u4e2d\u7684XmlSerializers\uff0cVB.NET\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u4e2d\u7684\u7b2c\u4e09\u65b9\u5b58\u50a8\uff08\u6d41\uff09\u6765\u5d4c\u5165\u548c\u63d0\u53d6\u6587\u4ef6\u5185\u5bb9\nimage: embed-file-menu.png"),(0,o.kt)("h2",{id:"labels-\u5e8f\u5217\u5316\u7b2c\u4e09\u65b9\u5b58\u50a8\u6587\u4ef6"},"labels: ","[\u5e8f\u5217\u5316,\u7b2c\u4e09\u65b9\u5b58\u50a8,\u6587\u4ef6]"),(0,o.kt)("p",null,"\u6b64\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u4e2d\u7684\u7b2c\u4e09\u65b9\u5b58\u50a8\u6765\u76f4\u63a5\u5c06\u6587\u4ef6\u5185\u5bb9\u5d4c\u5165\u548c\u63d0\u53d6\u5230\u6a21\u578b\u6d41\u4e2d\u3002"),(0,o.kt)("p",null,"\u793a\u4f8bSOLIDWORKS\u63d2\u4ef6\u4f7f\u7528",(0,o.kt)("a",{parentName:"p",href:"/docs/codestack/labs/solidworks/swex/add-in/"},"SwEx.AddIn"),"\u6846\u67b6\u6784\u5efa\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4e0e\u5176\u4ed6\u521b\u5efa\u63d2\u4ef6\u7684\u65b9\u6cd5\u4e00\u8d77\u4f7f\u7528\u3002"),(0,o.kt)("p",null,"\u63d2\u4ef6\u5728\u83dc\u5355\u548c\u5de5\u5177\u680f\u4e2d\u6dfb\u52a0\u4e86\u4e24\u4e2a\u6309\u94ae\uff0c\u5e76\u76f8\u5e94\u5730\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5904\u7406\u7a0b\u5e8f\uff1a"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"\u63d2\u4ef6\u83dc\u5355",src:t(58791).Z,width:"599",height:"237"}),"{ width=400 }"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"AddFile - \u5f02\u6b65\u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06\u5d4c\u5165\u6587\u4ef6\u6570\u636e\u5b58\u50a8\u5230\u6d41\u4e2d\u3002\u6b64\u65b9\u6cd5\u8981\u6c42\u7528\u6237\u9009\u62e9\u6587\u4ef6\uff0c\u8bfb\u53d6\u5176\u5185\u5bb9\u5e76\u5c06\u5176\u5e8f\u5217\u5316\u4e3a\u6587\u4ef6\u6d41\u3002"),(0,o.kt)("li",{parentName:"ul"},"LoadFile - \u4ece\u6d41\u4e2d\u52a0\u8f7d\u5d4c\u5165\u7684\u6587\u4ef6\uff0c\u5e76\u63d0\u793a\u7528\u6237\u9009\u62e9\u6587\u4ef6\u8def\u5f84\u4ee5\u5b58\u50a8\u5185\u5bb9\u3002\u6587\u4ef6\u540d\u57fa\u4e8e\u5d4c\u5165\u7684\u6587\u4ef6\u540d\u9884\u586b\u5145\u3002")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"\u6d4f\u89c8\u4fdd\u5b58\u6587\u4ef6\u8def\u5f84",src:t(60392).Z,width:"965",height:"607"}),"{ width=550 }"),(0,o.kt)("h2",{id:"\u4f7f\u7528\u8bf4\u660e"},"\u4f7f\u7528\u8bf4\u660e"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6253\u5f00\u4efb\u4f55\u6a21\u578b\uff08\u6a21\u578b\u5fc5\u987b\u4fdd\u5b58\u5230\u78c1\u76d8\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u5355\u51fb\u201cAddFile\u201d\u6309\u94ae\u3002\u5c06\u663e\u793a\u6587\u4ef6\u6d4f\u89c8\u5bf9\u8bdd\u6846\u3002\u9009\u62e9\u4efb\u4f55\u6587\u4ef6\u3002\u6587\u4ef6\u6570\u636e\u5c06\u5e8f\u5217\u5316\u5230\u6a21\u578b\u4e2d\uff0c\u5e76\u663e\u793a\u6d88\u606f\u6846\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u60a8\u53ef\u4ee5\u5173\u95ed\u6a21\u578b\u548cSOLIDWORKS"),(0,o.kt)("li",{parentName:"ul"},"\u91cd\u65b0\u6253\u5f00\u6a21\u578b\u5e76\u5355\u51fb\u201cLoadFile\u201d\u3002\u5c06\u4ece\u6a21\u578b\u4e2d\u53cd\u5e8f\u5217\u5316\u6587\u4ef6\u6570\u636e\uff0c\u5e76\u663e\u793a\u201c\u6587\u4ef6\u53e6\u5b58\u4e3a\u201d\u5bf9\u8bdd\u6846\uff08\u6587\u4ef6\u540d\u57fa\u4e8e\u5d4c\u5165\u7684\u6587\u4ef6\u540d\uff09\u3002\u6587\u4ef6\u5c06\u4fdd\u5b58\u5230\u6240\u9009\u4f4d\u7f6e")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"EmbedFileAddIn.vb")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb"},'\nImports System.IO\nImports System.Runtime.InteropServices\nImports System.Windows.Forms\nImports CodeStack.SwEx.AddIn\nImports CodeStack.SwEx.AddIn.Attributes\nImports SolidWorks.Interop.swconst\n\n<ComVisible(True), Guid("E54E85ED-B8AE-434D-B616-7D691527A429")>\n<AutoRegister("EmbedFileAddIn", "Sample Demonstrating use of 3rd party store")>\nPartial Public Class EmbedFile\n    Inherits SwAddInEx\n\n    Private Const STREAM_NAME As String = "CodeStack.EmbedFile"\n\n    <CodeStack.SwEx.Common.Attributes.Title("Embed File")>\n    Public Enum Commands_e\n        AddFile\n        LoadFile\n    End Enum\n\n    Public Overrides Function OnConnect() As Boolean\n        AddCommandGroup(Of Commands_e)(AddressOf OnButtonClick)\n        Return True\n    End Function\n\n    Private Async Sub OnButtonClick(ByVal cmd As Commands_e)\n        Select Case cmd\n            Case Commands_e.AddFile\n                Await SaveFile()\n            Case Commands_e.LoadFile\n                LoadFile()\n        End Select\n    End Sub\n\n    Private Async Function SaveFile() As Task\n\n        Try\n            Dim fileToSave As String = BrowseFile(True)\n\n            If Not String.IsNullOrEmpty(fileToSave) Then\n\n                Dim embedData As New EmbedFileData()\n                embedData.FileName = Path.GetFileName(fileToSave)\n                embedData.Content = File.ReadAllBytes(fileToSave)\n\n                Await SaveDataToDocument(App.IActiveDoc2, embedData)\n                App.SendMsgToUser2("Data saved", swMessageBoxIcon_e.swMbInformation, swMessageBoxBtn_e.swMbOk)\n\n            End If\n        Catch ex As Exception\n            App.SendMsgToUser2(ex.Message, swMessageBoxIcon_e.swMbStop, swMessageBoxBtn_e.swMbOk)\n        End Try\n\n    End Function\n\n    Private Sub LoadFile()\n\n        Try\n            Dim embedData = ReadDataFromDocument(App.IActiveDoc2)\n\n            Dim fileToSave As String = BrowseFile(False, embedData.FileName)\n\n            If Not String.IsNullOrEmpty(fileToSave) Then\n                File.WriteAllBytes(fileToSave, embedData.Content)\n            End If\n\n        Catch ex As Exception\n            App.SendMsgToUser2(ex.Message, swMessageBoxIcon_e.swMbStop, swMessageBoxBtn_e.swMbOk)\n        End Try\n\n    End Sub\n\n    Function BrowseFile(isOpen As Boolean, Optional fileName As String = "") As String\n\n        Dim fileDlg As FileDialog\n\n        If isOpen Then\n            fileDlg = New OpenFileDialog()\n        Else\n            fileDlg = New SaveFileDialog()\n        End If\n\n        fileDlg.Title = "Select File"\n        fileDlg.Filter = "All files (*.*)|*.*"\n        fileDlg.FileName = fileName\n\n        If fileDlg.ShowDialog() = DialogResult.OK Then\n            Return fileDlg.FileName\n        Else\n            Return ""\n        End If\n\n    End Function\n\nEnd Class\n\n')),(0,o.kt)("p",null,"\u7528\u4e8e\u5e8f\u5217\u5316\u7684\u7ed3\u6784\u5305\u542b\u6587\u4ef6\u7684\u5185\u5bb9\u548c\u6587\u4ef6\u540d"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"EmbedFileData.vb")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb"},"Public Class EmbedFileData\n    Public Property FileName As String\n    Public Property Content As Byte()\nEnd Class\n\n")),(0,o.kt)("p",null,"\u4e3a\u4e86\u7b80\u5316\u64cd\u4f5c\uff0c\u5c06",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/windows/desktop/api/objidl/nn-objidl-istream"},"IStream")," COM\u6d41\u5c01\u88c5\u5230",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.io.stream?view=netframework-4.7.2"},"System.IO.Stream"),"\u7c7b\u578b\u4e2d\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"ComStream.vb")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb"},"Imports System.IO\nImports System.Runtime.InteropServices\nImports System.Runtime.InteropServices.ComTypes\n\nPublic Class ComStream\n    Inherits Stream\n\n    Private ReadOnly m_ComStream As IStream\n    Private ReadOnly m_Commit As Boolean\n    Private m_IsWritable As Boolean\n\n    Public Sub New(ByRef comStream As IStream, writable As Boolean, Optional commit As Boolean = True)\n\n        If comStream Is Nothing Then\n            Throw New ArgumentNullException(NameOf(comStream))\n        End If\n\n        m_ComStream = comStream\n        m_IsWritable = writable\n        m_Commit = commit\n\n    End Sub\n\n    Public Overrides ReadOnly Property CanRead() As Boolean\n        Get\n            Return True\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property CanSeek() As Boolean\n        Get\n            Return True\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property CanWrite() As Boolean\n        Get\n            Return m_IsWritable\n        End Get\n    End Property\n\n    Public Overrides ReadOnly Property Length As Long\n        Get\n            Const STATSFLAG_NONAME As Integer = 1\n\n            Dim stats As ComTypes.STATSTG = Nothing\n            m_ComStream.Stat(stats, STATSFLAG_NONAME)\n\n            Return stats.cbSize\n        End Get\n    End Property\n\n    Public Overrides Property Position() As Long\n        Get\n            Return Seek(0, SeekOrigin.Current)\n        End Get\n        Set(ByVal Value As Long)\n            Seek(Value, SeekOrigin.Begin)\n        End Set\n    End Property\n\n    Public Overrides Sub Flush()\n        If m_Commit Then\n            Const STGC_DEFAULT As Integer = 0\n            m_ComStream.Commit(STGC_DEFAULT)\n        End If\n    End Sub\n\n    Public Overrides Sub SetLength(ByVal Value As Long)\n        m_ComStream.SetSize(Value)\n    End Sub\n\n    Public Overrides Sub Write(buffer() As Byte, offset As Integer, count As Integer)\n        If offset <> 0 Then\n            Dim bufferSize As Integer\n            bufferSize = buffer.Length - offset\n            Dim tmpBuffer(bufferSize) As Byte\n            Array.Copy(buffer, offset, tmpBuffer, 0, bufferSize)\n            m_ComStream.Write(tmpBuffer, bufferSize, Nothing)\n        Else\n            m_ComStream.Write(buffer, count, Nothing)\n        End If\n    End Sub\n\n    Public Overrides Function Read(buffer() As Byte, offset As Integer, count As Integer) As Integer\n\n        Dim bytesRead As Integer = 0\n        Dim boxBytesRead As Object = bytesRead\n        Dim hObject As GCHandle\n\n        Try\n            hObject = GCHandle.Alloc(boxBytesRead, GCHandleType.Pinned)\n            Dim pBytesRead As IntPtr = hObject.AddrOfPinnedObject()\n\n            If offset <> 0 Then\n                Dim tmpBuffer(count - 1) As Byte\n                m_ComStream.Read(tmpBuffer, count, pBytesRead)\n                bytesRead = CInt(boxBytesRead)\n                Array.Copy(tmpBuffer, 0, buffer, offset, bytesRead)\n            Else\n                m_ComStream.Read(buffer, count, pBytesRead)\n                bytesRead = CInt(boxBytesRead)\n            End If\n\n        Finally\n            If hObject.IsAllocated Then\n                hObject.Free()\n            End If\n        End Try\n\n        Return bytesRead\n\n    End Function\n\n    Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long\n\n        Dim curPosition As Long = 0\n        Dim boxCurPosition As Object = curPosition\n        Dim hObject As GCHandle\n\n        Try\n            hObject = GCHandle.Alloc(boxCurPosition, GCHandleType.Pinned)\n            Dim pCurPosition As IntPtr = hObject.AddrOfPinnedObject()\n\n            m_ComStream.Seek(offset, origin, pCurPosition)\n            curPosition = CLng(boxCurPosition)\n        Finally\n            If hObject.IsAllocated Then\n                hObject.Free()\n            End If\n        End Try\n\n        Return curPosition\n    End Function\n\n    Protected Overrides Sub Dispose(ByVal disposing As Boolean)\n        Try\n            If disposing Then\n                m_IsWritable = False\n            End If\n        Finally\n            MyBase.Dispose(disposing)\n        End Try\n    End Sub\n\n    Protected Overrides Sub Finalize()\n        Dispose(False)\n    End Sub\n\nEnd Class\n\n")),(0,o.kt)("p",null,"\u4f7f\u7528",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.xml.serialization.xmlserializer?view=netframework-4.7.2"},"XmlSerializer"),"\u7c7b\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u5e8f\u5217\u5316\u65b9\u6cd5\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"EmbedFile.vb")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb"},'Imports System.Runtime.InteropServices.ComTypes\nImports System.Xml.Serialization\nImports SolidWorks.Interop.sldworks\nImports SolidWorks.Interop.swconst\n\nPartial Public Class EmbedFile\n    Public Class ThirdPartyStreamNotFoundException\n        Inherits Exception\n    End Class\n\n    Private Async Function SaveDataToDocument(ByVal model As IModelDoc2, ByVal data As EmbedFileData) As Task\n\n        Dim err As Integer = -1\n        Dim warn As Integer = -1\n        model.SetSaveFlag()\n        Const S_OK As Integer = 0\n        Dim result As Boolean? = Nothing\n        Dim onSaveToStorageNotifyFunc = Function()\n                                            Try\n                                                StoreData(model, data, STREAM_NAME)\n                                                result = True\n                                            Catch\n                                                result = False\n                                            End Try\n\n                                            Return S_OK\n                                        End Function\n\n        Select Case CType(model.[GetType](), swDocumentTypes_e)\n            Case swDocumentTypes_e.swDocPART\n                AddHandler TryCast(model, PartDoc).SaveToStorageNotify, onSaveToStorageNotifyFunc\n            Case swDocumentTypes_e.swDocASSEMBLY\n                AddHandler TryCast(model, AssemblyDoc).SaveToStorageNotify, onSaveToStorageNotifyFunc\n            Case swDocumentTypes_e.swDocDRAWING\n                AddHandler TryCast(model, DrawingDoc).SaveToStorageNotify, onSaveToStorageNotifyFunc\n        End Select\n\n        If Not model.Save3(CInt(swSaveAsOptions_e.swSaveAsOptions_Silent), err, warn) Then\n            Throw New InvalidOperationException($"Failed to save the model: {CType(err, swFileSaveError_e)}")\n        End If\n\n        Await Task.Run(Sub()\n                           While Not result.HasValue\n                               Threading.Thread.Sleep(10)\n                           End While\n                       End Sub)\n\n        Select Case CType(model.GetType(), swDocumentTypes_e)\n            Case swDocumentTypes_e.swDocPART\n                RemoveHandler TryCast(model, PartDoc).SaveToStorageNotify, onSaveToStorageNotifyFunc\n            Case swDocumentTypes_e.swDocASSEMBLY\n                RemoveHandler TryCast(model, AssemblyDoc).SaveToStorageNotify, onSaveToStorageNotifyFunc\n            Case swDocumentTypes_e.swDocDRAWING\n                RemoveHandler TryCast(model, DrawingDoc).SaveToStorageNotify, onSaveToStorageNotifyFunc\n        End Select\n\n        If Not result.Value Then\n            Throw New Exception("Failed to store the data")\n        End If\n    End Function\n\n    Private Function ReadDataFromDocument(ByVal model As IModelDoc2) As EmbedFileData\n        Return ReadData(Of EmbedFileData)(model, STREAM_NAME)\n    End Function\n\n    Private Sub StoreData(Of T)(ByVal model As IModelDoc2, ByVal data As T, ByVal streamName As String)\n        Try\n            Dim stream = TryCast(model.IGet3rdPartyStorage(streamName, True), IStream)\n\n            Using comStr = New ComStream(stream, True, False)\n                comStr.Seek(0, IO.SeekOrigin.Begin)\n                Dim ser = New XmlSerializer(GetType(T))\n                ser.Serialize(comStr, data)\n            End Using\n\n        Catch\n            Throw\n        Finally\n            model.IRelease3rdPartyStorage(streamName)\n        End Try\n    End Sub\n\n    Private Function ReadData(Of T)(ByVal model As IModelDoc2, ByVal streamName As String) As T\n        Try\n            Dim stream = TryCast(model.IGet3rdPartyStorage(streamName, False), IStream)\n\n            If stream IsNot Nothing Then\n\n                Using comStr = New ComStream(stream, False)\n                    comStr.Seek(0, IO.SeekOrigin.Begin)\n                    Dim ser = New XmlSerializer(GetType(T))\n                    Return CType(ser.Deserialize(comStr), T)\n                End Using\n            Else\n                Throw New ThirdPartyStreamNotFoundException()\n            End If\n\n        Catch\n            Throw\n        Finally\n            model.IRelease3rdPartyStorage(streamName)\n        End Try\n    End Function\n\nEnd Class\n\n')))}u.isMDXComponent=!0},58791:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/embed-file-menu-90c1099f7cd76d4011e8f23b4da7bcf0.png"},60392:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/select-save-path-d5fe2a913f0280c4c89474dbf9f900cf.png"}}]);