"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[96687],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>w});var o=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,s=function(e,t){if(null==e)return{};var r,o,s={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var p=o.createContext({}),u=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),l=u(r),m=s,w=l["".concat(p,".").concat(m)]||l[m]||d[m]||n;return r?o.createElement(w,i(i({ref:t},c),{},{components:r})):o.createElement(w,i({ref:t},c))}));function w(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,i=new Array(n);i[0]=m;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[l]="string"==typeof e?e:s,i[1]=a;for(var u=2;u<n;u++)i[u]=r[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},14715:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>a,toc:()=>u});var o=r(87462),s=(r(67294),r(3905));const n={title:"Writing Custom Properties to Files, Configurations, and Cut Lists Using the SOLIDWORKS API",caption:"Writing All Properties"},i=void 0,a={unversionedId:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-all-properties/index",id:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-all-properties/index",title:"Writing Custom Properties to Files, Configurations, and Cut Lists Using the SOLIDWORKS API",description:"VBA macro example that demonstrates how to add (create new or modify existing) custom properties to various custom property sources using the SOLIDWORKS API. This includes file (general) custom properties, configuration-specific custom properties, and cut list item (weldment or sheet metal) custom properties.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-all-properties/index.md",sourceDirName:"codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-all-properties",slug:"/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-all-properties/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-all-properties/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-all-properties/index.md",tags:[],version:"current",frontMatter:{title:"Writing Custom Properties to Files, Configurations, and Cut Lists Using the SOLIDWORKS API",caption:"Writing All Properties"},sidebar:"tutorialSidebar",previous:{title:"index",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/update-legacy/"},next:{title:"index",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/troubleshooting/macros/windows-api-functions-incorrect-use/custom-properties/write-summary-information/"}},p={},u=[{value:"labels: set properties, add properties, write properties, date",id:"labels-set-properties-add-properties-write-properties-date",level:2}],c={toc:u},l="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(l,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"VBA macro example that demonstrates how to add (create new or modify existing) custom properties to various custom property sources using the SOLIDWORKS API. This includes file (general) custom properties, configuration-specific custom properties, and cut list item (weldment or sheet metal) custom properties.\nimage: approved-date-custom-property.png"),(0,s.kt)("h2",{id:"labels-set-properties-add-properties-write-properties-date"},"labels: ","[set properties, add properties, write properties, date]"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Date Custom Property",src:r(88888).Z,width:"1025",height:"592"}),"{ width=550 }"),(0,s.kt)("p",null,"This VBA macro example demonstrates how to use the SOLIDWORKS API to add (create new or modify existing) custom properties to various custom property sources. This includes file (general) custom properties, configuration-specific custom properties, and cut list item (weldment or sheet metal) custom properties."),(0,s.kt)("p",null,"The macro adds a custom property named ",(0,s.kt)("em",{parentName:"p"},"ApprovedDate"),' with the type "Date" and sets its value to the current date.'),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"For some reason, the custom property field type is ignored and defaults to text when assigned to a cut list item.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const PRP_NAME As String = "ApprovedDate"\n\nDim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n        \n        Dim curDate As Date\n        curDate = Now\n        \n        Dim dateFormat As String\n        dateFormat = Format(curDate, "YYYY-MM-dd")\n        \n        SetGeneralProperty swModel, PRP_NAME, dateFormat, swCustomInfoType_e.swCustomInfoDate\n        SetConfigurationSpecificProperty swModel, PRP_NAME, dateFormat, swCustomInfoType_e.swCustomInfoDate\n        SetCutListProperty swModel, PRP_NAME, dateFormat, swCustomInfoType_e.swCustomInfoDate\n    Else\n        MsgBox "Please open a model"\n    End If\n    \nEnd Sub\n\nSub SetGeneralProperty(model As SldWorks.ModelDoc2, prpName As String, prpVal As String, prpType As swCustomInfoType_e)\n    \n    SetProperty model.Extension.CustomPropertyManager(""), prpName, prpVal, prpType\n    \nEnd Sub\n\nSub SetConfigurationSpecificProperty(model As SldWorks.ModelDoc2, prpName As String, prpVal As String, prpType As swCustomInfoType_e)\n    \n    Dim vNames As Variant\n    vNames = model.GetConfigurationNames()\n    \n    Dim i As Integer\n        \n    For i = 0 To UBound(vNames)\n        \n        Dim confName As String\n        confName = vNames(i)\n        \n        SetProperty model.Extension.CustomPropertyManager(confName), prpName, prpVal, prpType\n        \n    Next\n    \nEnd Sub\n\nSub SetCutListProperty(model As SldWorks.ModelDoc2, prpName As String, prpVal As String, prpType As swCustomInfoType_e)\n\n    Dim vCutLists As Variant\n    vCutLists = GetCutLists(model)\n        \n    If Not IsEmpty(vCutLists) Then\n        Dim i As Integer\n        \n        For i = 0 To UBound(vCutLists)\n            Dim swCutListFeat As SldWorks.Feature\n            Set swCutListFeat = vCutLists(i)\n            SetProperty swCutListFeat.CustomPropertyManager, prpName, prpVal\n        Next\n    End If\n\nEnd Sub\n\nFunction GetCutLists(model As SldWorks.ModelDoc2) As Variant\n    \n    Dim swCutListFeats() As SldWorks.Feature\n    Dim isInit As Boolean\n    isInit = False\n    \n    Dim swFeat As SldWorks.Feature\n    Dim swBodyFolder As SldWorks.BodyFolder\n    \n    Set swFeat = model.FirstFeature\n    \n    Do While Not swFeat Is Nothing\n        \n        If swFeat.GetTypeName2 = "CutListFolder" Then\n            \n            If Not isInit Then\n                isInit = True\n                ReDim swCutListFeats(0)\n            Else\n                ReDim Preserve swCutListFeats(UBound(swCutListFeats) + 1)\n            End If\n            \n            Set swCutListFeats(UBound(swCutListFeats)) = swFeat\n            \n        End If\n        \n        Set swFeat = swFeat.GetNextFeature\n        \n    Loop\n    \n    If isInit Then\n        GetCutLists = swCutListFeats\n    Else\n        GetCutLists = Empty\n    End If\n\nEnd Function\n\nSub SetProperty(custPrpMgr As SldWorks.CustomPropertyManager, prpName As String, prpVal As String, Optional prpType As swCustomInfoType_e = swCustomInfoType_e.swCustomInfoText)\n    \n    Dim res As Long\n    res = custPrpMgr.Add3(prpName, prpType, prpVal, swCustomPropertyAddOption_e.swCustomPropertyReplaceValue)\n    \n    If res <> swCustomInfoAddResult_e.swCustomInfoAddResult_AddedOrChanged Then\n        Err.Raise vbError, "", "Failed to set custom property. Error code: " & res\n    End If\n    \nEnd Sub\n')))}d.isMDXComponent=!0},88888:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/approved-date-custom-property-10a4c509553367e7833222c07ea3d2bd.png"}}]);