"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[93175],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>g});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=r.createContext({}),p=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},u=function(n){var e=p(n.components);return r.createElement(l.Provider,{value:e},n.children)},c="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,l=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),c=p(t),m=i,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return t?r.createElement(g,a(a({ref:e},u),{},{components:t})):r.createElement(g,a({ref:e},u))}));function g(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s[c]="string"==typeof n?n:i,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},47106:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const o={layout:"sw-tool",title:"\u901a\u8fc7 eDrawings API \u6279\u91cf\u5c06\u6587\u4ef6\u5bfc\u51fa\u4e3a\u5916\u90e8\u683c\u5f0f\uff08\u65e0\u9700 SOLIDWORKS\uff09",image:"export-edrawings.svg",labels:["\u5bfc\u51fa","\u6279\u91cf","eDrawings"],group:"\u5bfc\u5165/\u5bfc\u51fa"},a=void 0,s={unversionedId:"codestack/edrawings-api/output/export/index",id:"codestack/edrawings-api/output/export/index",title:"\u901a\u8fc7 eDrawings API \u6279\u91cf\u5c06\u6587\u4ef6\u5bfc\u51fa\u4e3a\u5916\u90e8\u683c\u5f0f\uff08\u65e0\u9700 SOLIDWORKS\uff09",description:"\u6b64 C# \u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u4f7f\u7528 SOLIDWORKS eDrawings \u7684\u514d\u8d39\u7248\u672c\u901a\u8fc7\u5176 API \u5c06 SOLIDWORKS\u3001DXF\u3001DWG \u548c eDrawings \u6587\u4ef6\u5bfc\u51fa\u4e3a\u5916\u90e8\u683c\u5f0f\uff08.jpg\u3001.tif\u3001.bmp\u3001.stl\u3001.exe\u3001.htm\u3001.zip\u3001.edrw\u3001.eprt \u548c .easm\uff09\u3002\u65e0\u9700\u5b89\u88c5 SOLIDWORKS \u6216\u4f7f\u7528\u5176\u8bb8\u53ef\u8bc1\u5373\u53ef\u4f7f\u7528\u6b64\u5de5\u5177\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/edrawings-api/output/export/index.md",sourceDirName:"codestack/edrawings-api/output/export",slug:"/codestack/edrawings-api/output/export/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/edrawings-api/output/export/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/edrawings-api/output/export/index.md",tags:[],version:"current",frontMatter:{layout:"sw-tool",title:"\u901a\u8fc7 eDrawings API \u6279\u91cf\u5c06\u6587\u4ef6\u5bfc\u51fa\u4e3a\u5916\u90e8\u683c\u5f0f\uff08\u65e0\u9700 SOLIDWORKS\uff09",image:"export-edrawings.svg",labels:["\u5bfc\u51fa","\u6279\u91cf","eDrawings"],group:"\u5bfc\u5165/\u5bfc\u51fa"},sidebar:"tutorialSidebar",previous:{title:"output",permalink:"/solidworks-GPT/zh-Hans/docs/category/output"},next:{title:"\u4f7f\u7528 SOLIDWORKS eDrawings API \u5c06 SOLIDWORKS \u6587\u4ef6\u8f93\u51fa\u4e3a\u4e0d\u540c\u683c\u5f0f",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/edrawings-api/output/"}},l={},p=[{value:"\u8fd0\u884c\u5de5\u5177",id:"\u8fd0\u884c\u5de5\u5177",level:2},{value:"\u793a\u4f8b\u547d\u4ee4",id:"\u793a\u4f8b\u547d\u4ee4",level:2},{value:"\u7ed3\u679c",id:"\u7ed3\u679c",level:2},{value:"EDrawingsHost.cs",id:"edrawingshostcs",level:2},{value:"Program.cs",id:"programcs",level:2}],u={toc:p},c="wrapper";function d(n){let{components:e,...o}=n;return(0,i.kt)(c,(0,r.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u6b64 C# \u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u4f7f\u7528 SOLIDWORKS eDrawings \u7684\u514d\u8d39\u7248\u672c\u901a\u8fc7\u5176 API \u5c06 SOLIDWORKS\u3001DXF\u3001DWG \u548c eDrawings \u6587\u4ef6\u5bfc\u51fa\u4e3a\u5916\u90e8\u683c\u5f0f\uff08.jpg\u3001.tif\u3001.bmp\u3001.stl\u3001.exe\u3001.htm\u3001.zip\u3001.edrw\u3001.eprt \u548c .easm\uff09\u3002\u65e0\u9700\u5b89\u88c5 SOLIDWORKS \u6216\u4f7f\u7528\u5176\u8bb8\u53ef\u8bc1\u5373\u53ef\u4f7f\u7528\u6b64\u5de5\u5177\u3002"),(0,i.kt)("p",null,"\u6b64\u529f\u80fd\u5df2\u96c6\u6210\u5230 ",(0,i.kt)("a",{parentName:"p",href:"https://cadplus.xarial.com/xport/"},"xPort")," \u5b9e\u7528\u7a0b\u5e8f\u4e2d\u3002"),(0,i.kt)("h2",{id:"\u8fd0\u884c\u5de5\u5177"},"\u8fd0\u884c\u5de5\u5177"),(0,i.kt)("p",null,"\u6b64\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\uff0c\u5e76\u5177\u6709\u4ee5\u4e0b\u53c2\u6570\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"-input"),"\uff1a\u8981\u5904\u7406\u7684\u8f93\u5165\u76ee\u5f55\u6216\u6587\u4ef6\u8def\u5f84\u5217\u8868\u3002\u8fd9\u4e9b\u6587\u4ef6\u53ef\u4ee5\u7531 eDrawings \u6253\u5f00\uff08\u4f8b\u5982 SOLIDWORKS \u6587\u4ef6\u3001CATIA\u3001STEP\u3001DXF/DWG \u7b49\uff09\u3002\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u5b8c\u6574\u5217\u8868\uff1a")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u652f\u6301\u7684\u8f93\u5165\u6587\u4ef6",src:t(14393).Z,width:"481",height:"462"}),"{ width=250 }"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"-filter"),"\uff1a\u7528\u4e8e\u63d0\u53d6\u8f93\u5165\u6587\u4ef6\u7684\u8fc7\u6ee4\u5668\uff08\u5982\u679c ",(0,i.kt)("strong",{parentName:"li"},"-input")," \u53c2\u6570\u5305\u542b\u76ee\u5f55\uff09"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"-outdir"),"\uff1a\u5bfc\u51fa\u7ed3\u679c\u7684\u76ee\u5f55\u8def\u5f84\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8be5\u76ee\u5f55\uff0c\u5de5\u5177\u5c06\u81ea\u52a8\u521b\u5efa\u3002\u5982\u679c\u672a\u6307\u5b9a\u6b64\u53c2\u6570\uff0c\u5219\u6587\u4ef6\u5c06\u5bfc\u51fa\u5230\u4e0e\u8f93\u5165\u6587\u4ef6\u76f8\u540c\u7684\u6587\u4ef6\u5939\u4e2d\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"-format"),"\uff1a\u8981\u5c06\u6587\u4ef6\u5bfc\u51fa\u5230\u7684\u683c\u5f0f\u5217\u8868\u3002\u652f\u6301\u7684\u683c\u5f0f\u6709\uff1a.jpg\u3001.tif\u3001.bmp\u3001.png\u3001.stl\u3001.exe\u3001.htm\u3001.zip\u3001.edrw\u3001.eprt \u548c .easm\u3002\u6307\u5b9a .e \u4ee5\u5c06\u6587\u4ef6\u5bfc\u51fa\u4e3a eDrawings \u7684\u76f8\u5e94\u683c\u5f0f\uff08\u4f8b\u5982\uff0c.sldprt \u5bfc\u51fa\u4e3a .eprt\uff0c.sldasm \u5bfc\u51fa\u4e3a .easm\uff0c.slddrw \u5bfc\u51fa\u4e3a .edrw\uff09\u3002\u5982\u679c\u672a\u6307\u5b9a\u6b64\u53c2\u6570\uff0c\u5219\u6587\u4ef6\u5c06\u5bfc\u51fa\u4e3a eDrawings \u683c\u5f0f\u3002")),(0,i.kt)("p",null,"\u5de5\u5177\u5e94\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\u8c03\u7528\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},"[\u53c2\u6570\u540d\u79f0] \u53c2\u6570\u503c1, \u53c2\u6570\u503c2, ..., \u53c2\u6570\u503cN\n")),(0,i.kt)("p",null,"\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u53c2\u6570\u793a\u4f8b\u3002"),(0,i.kt)("h2",{id:"\u793a\u4f8b\u547d\u4ee4"},"\u793a\u4f8b\u547d\u4ee4"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4ece\u9a71\u52a8\u5668 C \u4e2d\u7684 ",(0,i.kt)("em",{parentName:"li"},"SW Drawings")," \u548c ",(0,i.kt)("em",{parentName:"li"},"SW Models")," \u6587\u4ef6\u5939\uff08\u5305\u62ec\u5b50\u6587\u4ef6\u5939\uff09\u4e2d\u5bfc\u51fa\u6240\u6709 SOLIDWORKS \u6587\u4ef6\uff08\u4e0e\u8fc7\u6ee4\u5668 ",(0,i.kt)("em",{parentName:"li"},".sld")," \u5339\u914d\uff0c\u5373\u6269\u5c55\u540d\u4ee5 .sld \u5f00\u5934\uff09\u5230 ",(0,i.kt)("em",{parentName:"li"},"C:\\EDRW")," \u6587\u4ef6\u5939\u4e2d\u7684 eDrawings \u683c\u5f0f\uff08.eprt \u7528\u4e8e\u96f6\u4ef6\uff0c.easm \u7528\u4e8e\u88c5\u914d\uff0c.edrw \u7528\u4e8e\u7ed8\u56fe\uff09\u548c html \u683c\u5f0f\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},'> export.exe -input "C:\\SW Drawings" "C:\\SW Models" -output C:\\EDRW -filter *.sld* -format .e .html\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5c06 ",(0,i.kt)("em",{parentName:"li"},"C:\\Models\\Part.sldprt")," \u5bfc\u51fa\u4e3a ",(0,i.kt)("em",{parentName:"li"},"C:\\Models\\Part.eprt"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},'> export.exe -input "C:\\Models\\Part.sldprt"\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5c06 ",(0,i.kt)("em",{parentName:"li"},"C:\\Models")," \u6587\u4ef6\u5939\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u5bfc\u51fa\u4e3a\u53ef\u6267\u884c\u7684 eDrawings \u683c\u5f0f\u3002\u6bcf\u4e2a\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728\u4e0e\u539f\u59cb\u8f93\u5165\u6587\u4ef6\u76f8\u540c\u7684\u6587\u4ef6\u5939\u4e2d\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},"> export.exe -input C:\\Models -format .exe\n")),(0,i.kt)("h2",{id:"\u7ed3\u679c"},"\u7ed3\u679c"),(0,i.kt)("p",null,"\u64cd\u4f5c\u8fdb\u5ea6\u5c06\u663e\u793a\u5728\u63a7\u5236\u53f0\u7a97\u53e3\u4e2d\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u5bfc\u51fa\u8fc7\u7a0b\u7684\u63a7\u5236\u53f0\u8f93\u51fa",src:t(65413).Z,width:"1103",height:"292"})),(0,i.kt)("p",null,"\u6839\u636e\u8bbe\u7f6e\u521b\u5efa\u8f93\u51fa\u6587\u4ef6\u3002"),(0,i.kt)("h2",{id:"edrawingshostcs"},"EDrawingsHost.cs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'using System;\nusing System.Windows.Forms;\nusing eDrawings.Interop.EModelViewControl;\n\nnamespace Export\n{\n    public class EDrawingsHost : AxHost\n    {\n        public event Action<EModelViewControl> ControlLoaded;\n        private bool m_IsLoaded;\n\n        public EDrawingsHost() : base("22945A69-1191-4DCF-9E6F-409BDE94D101")\n        {\n            m_IsLoaded = false;\n        }\n\n        protected override void OnCreateControl()\n        {\n            base.OnCreateControl();\n\n            if (!m_IsLoaded)\n            {\n                m_IsLoaded = true;\n                var ctrl = GetOcx() as EModelViewControl;\n                ControlLoaded?.Invoke(GetOcx() as EModelViewControl);\n            }\n        }\n    }\n}\n\n')),(0,i.kt)("h2",{id:"programcs"},"Program.cs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'using eDrawings.Interop.EModelViewControl;\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Windows.Forms;\n\nnamespace Export\n{\n    class Program\n    {\n        private class ExportData\n        {\n            public string InputFilePath { get; private set; }\n            public string OutputFilePath { get; private set; }\n\n            public ExportData(string input, string output)\n            {\n                InputFilePath = input;\n                OutputFilePath = output;\n            }\n        }\n\n        private const string ARG_INPUT = "-input";\n        private const string ARG_FILTER = "-filter";\n        private const string ARG_OUTPUT_DIR = "-outdir";\n        private const string ARG_FORMAT = "-format";\n\n        private const string EDRW_FORMAT = ".e";\n\n        private static EModelViewControl m_Ctrl;\n\n        private static List<ExportData> m_Job;\n\n        private static ExportData m_CurrentExport;\n\n        [STAThread]\n        static void Main(string[] args)\n        {\n            try\n            {\n                ParseArguments(args);\n\n                var eDrwCtrl = new EDrawingsHost();\n\n                eDrwCtrl.ControlLoaded += OnEdrawingsControlLoaded;\n\n                var winForm = new Form();\n                winForm.Controls.Add(eDrwCtrl);\n                eDrwCtrl.Dock = DockStyle.Fill;\n                winForm.ShowIcon = false;\n                winForm.ShowInTaskbar = false;\n                winForm.WindowState = FormWindowState.Minimized;\n                winForm.ShowDialog();\n            }\n            catch (Exception ex)\n            {\n                PrintError(ex.Message);\n            }\n        }\n\n        private static void ParseArguments(string[] args)\n        {\n            var inputs = new List<string>();\n            var filters = new List<string>();\n            var outDirs = new List<string>();\n            var formats = new List<string>();\n\n            List<string> curList = null;\n\n            for (int i = 0; i < args.Length; i++)\n            {\n                if (args[i].Equals(ARG_INPUT, StringComparison.CurrentCultureIgnoreCase))\n                {\n                    curList = inputs;\n                }\n                else if (args[i].Equals(ARG_FILTER, StringComparison.CurrentCultureIgnoreCase))\n                {\n                    curList = filters;\n                }\n                else if (args[i].Equals(ARG_OUTPUT_DIR, StringComparison.CurrentCultureIgnoreCase))\n                {\n                    curList = outDirs;\n                }\n                else if (args[i].Equals(ARG_FORMAT, StringComparison.CurrentCultureIgnoreCase))\n                {\n                    curList = formats;\n                }\n                else\n                {\n                    if (curList != null)\n                    {\n                        curList.Add(args[i]);\n                    }\n                    else\n                    {\n                        throw new ArgumentException("Arguments are invalid, specify the correct switch");\n                    }\n                }\n            }\n            \n            foreach (var outDir in outDirs)\n            {\n                if (!Directory.Exists(outDir))\n                {\n                    Directory.CreateDirectory(outDir);\n                }\n            }\n\n            if (!outDirs.Any())\n            {\n                outDirs.Add("");\n            }\n\n            if (!inputs.Any())\n            {\n                throw new ArgumentException($"Inputs are not specified. Use {ARG_INPUT} switch to specify the input directory(s) or file(s)");\n            }\n\n            if (!formats.Any())\n            {\n                formats.Add(EDRW_FORMAT);\n            }\n\n            var filter = filters.Any() ? filters.First() : "*.*";\n\n            var files = new List<string>();\n\n            foreach (var input in inputs)\n            {\n                if (Directory.Exists(input))\n                {\n                    files.AddRange(Directory.GetFiles(input, filter, SearchOption.AllDirectories).ToList());\n                }\n                else if (File.Exists(input))\n                {\n                    files.Add(input);\n                }\n                else\n                {\n                    throw new Exception("Specify input file or directory");\n                }\n            }\n\n            m_Job = new List<ExportData>();\n\n            foreach (var file in files)\n            {\n                foreach (var outDir in outDirs)\n                {\n                    foreach (var format in formats)\n                    {\n                        var ext = format;\n\n                        if (!ext.StartsWith("."))\n                        {\n                            ext = "." + ext;\n                        }\n\n                        if (ext.Equals(EDRW_FORMAT, StringComparison.CurrentCultureIgnoreCase))\n                        {\n                            switch (Path.GetExtension(file).ToLower())\n                            {\n                                case ".sldprt":\n                                    ext = ".eprt";\n                                    break;\n                                case ".sldasm":\n                                    ext = ".easm";\n                                    break;\n                                case ".slddrw":\n                                    ext = ".edrw";\n                                    break;\n                                default:\n                                    throw new ArgumentException($"{EDRW_FORMAT} format is only applicable for SOLIDWORKS files");\n                            }\n                        }\n\n                        var outFile = Path.Combine(!string.IsNullOrEmpty(outDir) ? outDir : Path.GetDirectoryName(file),\n                            Path.GetFileNameWithoutExtension(file) + ext);\n\n                        m_Job.Add(new ExportData(file, outFile));\n                    }\n                }\n            }\n        }\n\n        public static void OnEdrawingsControlLoaded(EModelViewControl ctrl)\n        {\n            Console.WriteLine(string.Format("Starting job. Exporting {0} file(s)", m_Job.Count));\n\n            m_Ctrl = ctrl;\n\n            m_Ctrl.OnFinishedLoadingDocument += OnDocumentLoaded;\n            m_Ctrl.OnFailedLoadingDocument += OnDocumentLoadFailed;\n            m_Ctrl.OnFinishedSavingDocument += OnDocumentSaved;\n            m_Ctrl.OnFailedSavingDocument += OnSaveFailed;\n\n            ExportNext();\n        }\n\n        public static void ExportNext()\n        {\n            m_CurrentExport = null;\n\n            if (m_Job.Any())\n            {\n                m_CurrentExport = m_Job.First();\n                m_Job.RemoveAt(0);\n\n                if (!string.Equals(m_Ctrl.FileName, m_CurrentExport.InputFilePath, StringComparison.CurrentCultureIgnoreCase))\n                {\n                    m_Ctrl.CloseActiveDoc("");\n                    m_Ctrl.OpenDoc(m_CurrentExport.InputFilePath, false, false, false, "");\n                }\n                else\n                {\n                    ExportCurrentFile();\n                }\n            }\n            else\n            {\n                Console.WriteLine("Completed");\n                Environment.Exit(0);\n            }\n        }\n\n        public static void OnDocumentLoaded(string fileName)\n        {\n            Console.WriteLine(string.Format("Opened {0}", fileName));\n            ExportCurrentFile();\n        }\n\n        private static void ExportCurrentFile()\n        {\n            Console.WriteLine($"Exporting {m_CurrentExport.InputFilePath} to {m_CurrentExport.OutputFilePath}");\n            m_Ctrl.Save(m_CurrentExport.OutputFilePath, false, "");\n        }\n\n        public static void OnDocumentLoadFailed(string fileName, int errorCode, string errorString)\n        {\n            PrintError(string.Format("Failed to load {0}: {1}", fileName, errorString));\n            ExportNext();\n        }\n\n        private static void OnDocumentSaved()\n        {\n            Console.WriteLine("Export completed");\n            ExportNext();\n        }\n\n        private static void OnSaveFailed(string FileName, int ErrorCode, string ErrorString)\n        {\n            PrintError($"Failed to export \'FileName\': {ErrorString} [{ErrorCode}]");\n            ExportNext();\n        }\n        \n        public static void PrintError(string msg)\n        {\n            Console.ForegroundColor = ConsoleColor.Red;\n            Console.WriteLine(msg);\n            Console.ResetColor();\n        }\n    }\n}\n\n')),(0,i.kt)("p",null,"\u6e90\u4ee3\u7801\u53ef\u5728 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/codestackdev/solidworks-api-examples/tree/master/edrawings-api/Export"},"GitHub")," \u4e0a\u83b7\u53d6\u3002"))}d.isMDXComponent=!0},65413:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/console-output-6e461e7e62f05bced1b624812b8db0c4.png"},14393:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/supported-formats-3ebbded8029e5e720763677049d76574.png"}}]);