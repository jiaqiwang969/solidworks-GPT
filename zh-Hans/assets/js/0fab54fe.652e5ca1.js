"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[51774],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),g=o,m=p["".concat(c,".").concat(g)]||p[g]||d[g]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},66135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const i={title:"Convert array to dictionary in Visual Basic",caption:"Grouping",description:"This example shows how to group the array of the elements into the dictionary by using the key selector in Visual Basic"},a=void 0,s={unversionedId:"codestack-clone/visual-basic/algorithms/data/grouping/index",id:"codestack-clone/visual-basic/algorithms/data/grouping/index",title:"Convert array to dictionary in Visual Basic",description:"This example shows how to group the array of the elements into the dictionary by using the key selector in Visual Basic",source:"@site/docs/codestack-clone/visual-basic/algorithms/data/grouping/index.md",sourceDirName:"codestack-clone/visual-basic/algorithms/data/grouping",slug:"/codestack-clone/visual-basic/algorithms/data/grouping/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/visual-basic/algorithms/data/grouping/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/visual-basic/algorithms/data/grouping/index.md",tags:[],version:"current",frontMatter:{title:"Convert array to dictionary in Visual Basic",caption:"Grouping",description:"This example shows how to group the array of the elements into the dictionary by using the key selector in Visual Basic"},sidebar:"tutorialSidebar",previous:{title:"Encoding and decoding data in Base64 string format in Visual Basic 6 (VBA)",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/visual-basic/algorithms/data/encoding/base64/"},next:{title:"Helper functions for Visual Basic 6",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/visual-basic/algorithms/data/helpers/"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This Visual Basic example shows how to group the array of the elements into the dictionary by using the key selector"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb"},'Sub main()\n\n    Dim strArr(6) As String\n    \n    strArr(0) = "A"\n    strArr(1) = "B"\n    strArr(2) = "C"\n    strArr(3) = "A"\n    strArr(4) = "B"\n    strArr(5) = "C"\n    strArr(6) = "C"\n    \n    Dim groups As Object\n    Set groups = ToDictionary(strArr)\n\n    \'A x 2\n    \'B x 2\n    \'C x 3\n    For Each key In groups.Keys\n        Debug.Print key & " x " & UBound(groups.Item(key)) + 1\n    Next\n    \nEnd Sub\n\nFunction ToDictionary(arr As Variant) As Object\n    \n    Dim dict As Object\n    Set dict = CreateObject("Scripting.Dictionary")\n        \n    If Not IsEmpty(arr) Then\n    \n        For Each elem In arr\n        \n            Dim group() As Variant\n            Dim key As Variant\n            \n            key = KeySelector(elem)\n            \n            If dict.Exists(key) Then\n                group = dict.Item(key)\n                ReDim Preserve group(UBound(group) + 1)\n                group(UBound(group)) = elem\n                dict.Item(key) = group\n            Else\n                ReDim group(0)\n                group(0) = elem\n                dict.Add key, group\n            End If\n            \n        Next\n        \n    End If\n\n    Set ToDictionary = dict\n    \nEnd Function\n\n\'modify the key selector to work with complex structures if required\nFunction KeySelector(elem As Variant) As Variant\n    KeySelector = elem\nEnd Function\n')))}d.isMDXComponent=!0}}]);