"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[81456],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var r=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},D=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=l(t),D=s,u=m["".concat(c,".").concat(D)]||m[D]||d[D]||i;return t?r.createElement(u,o(o({ref:n},p),{},{components:t})):r.createElement(u,o({ref:n},p))}));function u(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,o=new Array(i);o[0]=D;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a[m]="string"==typeof e?e:s,o[1]=a;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}D.displayName="MDXCreateElement"},6673:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(87462),s=(t(67294),t(3905));const i={title:"\u4f7f\u7528SOLIDWORKS\u6587\u6863\u7ba1\u7406\u5668API\u590d\u5236\u6587\u6863\u6811",caption:"\u590d\u5236\u6587\u6863\u6811"},o=void 0,a={unversionedId:"codestack/solidworks-document-manager-api/application/copy-tree/index",id:"codestack/solidworks-document-manager-api/application/copy-tree/index",title:"\u4f7f\u7528SOLIDWORKS\u6587\u6863\u7ba1\u7406\u5668API\u590d\u5236\u6587\u6863\u6811",description:"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS\u6587\u6863\u7ba1\u7406\u5668API\u5c06\u88c5\u914d\u4f53\u6216\u56fe\u7eb8\u6811\u590d\u5236\u5230\u65b0\u4f4d\u7f6e\uff0c\u5e76\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u6587\u4ef6\u6dfb\u52a0\u540e\u7f00\u6765\u4fdd\u7559\u5f15\u7528\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-document-manager-api/application/copy-tree/index.md",sourceDirName:"codestack/solidworks-document-manager-api/application/copy-tree",slug:"/codestack/solidworks-document-manager-api/application/copy-tree/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/application/copy-tree/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-document-manager-api/application/copy-tree/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS\u6587\u6863\u7ba1\u7406\u5668API\u590d\u5236\u6587\u6863\u6811",caption:"\u590d\u5236\u6587\u6863\u6811"},sidebar:"tutorialSidebar",previous:{title:"application",permalink:"/solidworks-GPT/zh-Hans/docs/category/application-1"},next:{title:"\u5728SOLIDWORKS\u6587\u6863\u7ba1\u7406\u5668API\u4e2d\u5229\u7528\u4e3b\u8981\u7684ISwDMApplication\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/application/"}},c={},l=[{value:"labels: \u590d\u5236\u6811, \u590d\u5236\u6587\u6863",id:"labels-\u590d\u5236\u6811-\u590d\u5236\u6587\u6863",level:2}],p={toc:l},m="wrapper";function d(e){let{components:n,...i}=e;return(0,s.kt)(m,(0,r.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS\u6587\u6863\u7ba1\u7406\u5668API\u5c06\u88c5\u914d\u4f53\u6216\u56fe\u7eb8\u6811\u590d\u5236\u5230\u65b0\u4f4d\u7f6e\uff0c\u5e76\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u6587\u4ef6\u6dfb\u52a0\u540e\u7f00\u6765\u4fdd\u7559\u5f15\u7528\u3002\nimage: copy-tree.png"),(0,s.kt)("h2",{id:"labels-\u590d\u5236\u6811-\u590d\u5236\u6587\u6863"},"labels: ","[\u590d\u5236\u6811, \u590d\u5236\u6587\u6863]"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"SOLIDWORKS\u88c5\u914d\u4f53\u6811\u5df2\u590d\u5236\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u6587\u4ef6\u6dfb\u52a0\u4e86\u540e\u7f00",src:t(81465).Z,width:"874",height:"744"}),"{ width=350 }"),(0,s.kt)("p",null,"\u8be5\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS\u6587\u6863\u7ba1\u7406\u5668API\u5c06\u88c5\u914d\u4f53\u6216\u56fe\u7eb8\u6811\u590d\u5236\u5230\u65b0\u4f4d\u7f6e\u3002\u5b8f\u5141\u8bb8\u4e3a\u6811\u4e2d\u7684\u6bcf\u4e2a\u6587\u4ef6\u6dfb\u52a0\u540e\u7f00\u3002\u5b8f\u5c06\u5728\u88c5\u914d\u4f53\u7684\u6240\u6709\u5c42\u7ea7\u4e0a\u4fdd\u7559\u5e76\u66ff\u6362\u6240\u6709\u5fc5\u9700\u7684\u5f15\u7528\u3002"),(0,s.kt)("p",null,"\u5728\u5b8f\u7684\u5f00\u5934\u7684\u5e38\u91cf\u4e2d\u6307\u5b9a\u8981\u79fb\u52a8\u7684\u8f93\u5165\u6587\u4ef6\u3001\u76ee\u6807\u6587\u4ef6\u5939\u548c\u540e\u7f00\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const FILE_PATH As String = "D:\\Input\\Assm1.SLDASM" \'\u8f93\u5165\u88c5\u914d\u4f53\u6216\u56fe\u7eb8\u7684\u5b8c\u6574\u8def\u5f84\nConst DEST_FOLDER As String = "D:\\Output" \'\u76ee\u6807\u4f4d\u7f6e\u3002\u4e0d\u8981\u5728\u6587\u4ef6\u5939\u8def\u5f84\u7684\u672b\u5c3e\u6dfb\u52a0\u53cd\u659c\u6760\'\\\'\nConst SUFFIX As String = "_CodeStack" \'\u8981\u6dfb\u52a0\u5230\u6811\u4e2d\u6bcf\u4e2a\u6587\u4ef6\u7684\u540e\u7f00\n')),(0,s.kt)("p",null,"\u4f7f\u7528",(0,s.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2018/english/api/swdocmgrapi/solidworks.interop.swdocumentmgr~solidworks.interop.swdocumentmgr.iswdmapplication~copydocument.html"},"ISwDMApplication::CopyDocument"),"\u6587\u6863\u7ba1\u7406\u5668API\u6267\u884c\u6587\u4ef6\u548c\u6240\u6709\u5f15\u7528\u7684\u590d\u5236\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-vb"},'Const FILE_PATH As String = "D:\\Input\\Assm1.SLDASM"\nConst DEST_FOLDER As String = "D:\\Output"\nConst SUFFIX As String = "_CodeStack"\n\nConst LIC_KEY As String = "YOUR LICENSE KEY"\n\nDim swDmApp As SwDocumentMgr.SwDMApplication4\n\nSub main()\n\n    Dim swClassFact As SwDocumentMgr.swDmClassFactory\n    \n    Set swClassFact = New SwDocumentMgr.swDmClassFactory\n    \n    Set swDmApp = swClassFact.GetApplication(LIC_KEY)\n    \n    If Not swDmApp Is Nothing Then\n                \n        Dim i As Integer\n        \n        Dim srcChildren As Variant\n        Dim destChildren() As String\n        Dim destFilePath As String\n        \n        destFilePath = CreateDestinationPath(FILE_PATH, DEST_FOLDER, SUFFIX)\n        \n        srcChildren = GetReferencedDocuments(FILE_PATH)\n        ReDim destChildren(UBound(srcChildren))\n        \n        For i = 0 To UBound(srcChildren)\n            destChildren(i) = CreateDestinationPath(CStr(srcChildren(i)), DEST_FOLDER, SUFFIX)\n        Next\n        \n        Debug.Print swDmApp.CopyDocument(FILE_PATH, destFilePath, srcChildren, destChildren, swMoveCopyOptions_e.swMoveCopyOptionsOverwriteExistingDocs, CreateSearchData())\n        \n    End If\n    \nEnd Sub\n\nFunction CreateDestinationPath(srcPath As String, destFolder As String, suff As String)\n    \n    Dim fileName As String\n    Dim ext As String\n    \n    fileName = Mid(srcPath, InStrRev(srcPath, "\\"), InStrRev(srcPath, ".") - InStrRev(srcPath, "\\"))\n    ext = Right(srcPath, Len(srcPath) - InStrRev(srcPath, ".") + 1)\n    \n    CreateDestinationPath = destFolder & fileName & suff & ext\n    \nEnd Function\n\nFunction GetReferencedDocuments(filePath As String) As Variant\n    \n    Dim refDocs() As String\n    Dim isInit As Boolean\n    isInit = False\n    \n    Dim swDmDoc As SwDocumentMgr.SwDMDocument19\n    \n    Dim searchOpts As SwDocumentMgr.SwDMSearchOption\n    Set searchOpts = CreateSearchData\n    \n    Set swDmDoc = OpenDocument(filePath)\n    \n    If Not swDmDoc Is Nothing Then\n        \n        Dim vBrokenRefs As Variant\n        Dim vVirtComps As Variant\n        Dim vTimeStamps As Variant\n        Dim vFilePaths As Variant\n        \n        vFilePaths = swDmDoc.GetAllExternalReferences4(searchOpts, vBrokenRefs, vVirtComps, vTimeStamps)\n        \n        If Not IsEmpty(vFilePaths) Then\n            \n            Dim i As Integer\n            \n            For i = 0 To UBound(vFilePaths)\n                Dim childFilePath As String\n                childFilePath = vFilePaths(i)\n                \n                If Not isInit Then\n                    ReDim refDocs(0)\n                    refDocs(0) = childFilePath\n                    isInit = True\n                ElseIf Not Contains(refDocs, childFilePath) Then\n                    ReDim Preserve refDocs(UBound(refDocs) + 1)\n                    refDocs(UBound(refDocs)) = childFilePath\n                End If\n                \n                Dim vChildRefs As Variant\n                vChildRefs = GetReferencedDocuments(childFilePath)\n                \n                If Not IsEmpty(vChildRefs) Then\n                    Dim j As Integer\n                    For j = 0 To UBound(vChildRefs)\n                        If Not Contains(refDocs, CStr(vChildRefs(j))) Then\n                            ReDim Preserve refDocs(UBound(refDocs) + 1)\n                            refDocs(UBound(refDocs)) = vChildRefs(j)\n                        End If\n                    Next\n                End If\n                \n            Next\n        Else\n            GetReferencedDocuments = Empty\n            Exit Function\n        End If\n        \n    Else\n        err.Raise vbObjectError, "", "Failed to open document: " & filePath\n    End If\n    \n    GetReferencedDocuments = refDocs\n    \nEnd Function\n\nFunction OpenDocument(filePath As String) As SwDocumentMgr.SwDMDocument19\n    \n    Dim err As SwDmDocumentOpenError\n    \n    Dim docType As SwDocumentMgr.SwDmDocumentType\n    \n    Dim ext As String\n    ext = LCase(Right(filePath, 6))\n    \n    Select Case ext\n        Case "sldprt"\n            docType = swDmDocumentPart\n        Case "sldasm"\n            docType = swDmDocumentAssembly\n        Case "slddrw"\n            docType = swDmDocumentDrawing\n    End Select\n    \n    Dim swDmDoc As SwDocumentMgr.SwDMDocument19\n    \n    Set swDmDoc = swDmApp.GetDocument(filePath, docType, True, err)\n    \n    Set OpenDocument = swDmDoc\n    \nEnd Function\n\nFunction CreateSearchData() As SwDocumentMgr.SwDMSearchOption\n    \n    Dim searchOpts As SwDocumentMgr.SwDMSearchOption\n    \n    Set searchOpts = swDmApp.GetSearchOptionObject\n    searchOpts.SearchFilters = SwDmSearchFilters.SwDmSearchExternalReference + SwDmSearchFilters.SwDmSearchRootAssemblyFolder + SwDmSearchFilters.SwDmSearchSubfolders + SwDmSearchFilters.SwDmSearchInContextReference\n    \n    Set CreateSearchData = searchOpts\n    \nEnd Function\n\nFunction Contains(arr As Variant, item As String) As Boolean\n    \n    Dim i As Integer\n    \n    For i = 0 To UBound(arr)\n        If LCase(arr(i)) = LCase(item) Then\n            Contains = True\n            Exit Function\n        End If\n    Next\n    \n    Contains = False\n    \nEnd Function\n')))}d.isMDXComponent=!0},81465:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/copy-tree-6cf728f58fa2275c14dbe407df702d8e.png"}}]);