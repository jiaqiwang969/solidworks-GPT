"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[21145],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var s=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=s.createContext({}),l=function(e){var t=s.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return s.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?s.createElement(g,i(i({ref:t},c),{},{components:n})):s.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[u]="string"==typeof e?e:r,i[1]=a;for(var l=2;l<o;l++)i[l]=n[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},83086:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=n(87462),r=(n(67294),n(3905));const o={title:"\u4f7f\u7528SOLIDWORKS API\u4ece\u6240\u9009\u7ec4\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e\u7279\u5b9a\u7684\u5207\u5272\u5217\u8868\u5c5e\u6027",caption:"\u8bfb\u53d6\u7ec4\u4ef6\u5207\u5272\u5217\u8868\u5c5e\u6027"},i=void 0,a={unversionedId:"codestack/solidworks-api/data-storage/custom-properties/read-component-cutlist/index",id:"codestack/solidworks-api/data-storage/custom-properties/read-component-cutlist/index",title:"\u4f7f\u7528SOLIDWORKS API\u4ece\u6240\u9009\u7ec4\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e\u7279\u5b9a\u7684\u5207\u5272\u5217\u8868\u5c5e\u6027",description:"\u4f7f\u7528SOLIDWORKS API\u4ece\u88c5\u914d\u4f53\u4e2d\u6240\u9009\u7ec4\u4ef6\u7684\u5207\u5272\u5217\u8868\u4e2d\u8bfb\u53d6\u6240\u6709\u5c5e\u6027\u7684VBA\u5b8f\u793a\u4f8b",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/codestack/solidworks-api/data-storage/custom-properties/read-component-cutlist/index.md",sourceDirName:"codestack/solidworks-api/data-storage/custom-properties/read-component-cutlist",slug:"/codestack/solidworks-api/data-storage/custom-properties/read-component-cutlist/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/data-storage/custom-properties/read-component-cutlist/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-api/data-storage/custom-properties/read-component-cutlist/index.md",tags:[],version:"current",frontMatter:{title:"\u4f7f\u7528SOLIDWORKS API\u4ece\u6240\u9009\u7ec4\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e\u7279\u5b9a\u7684\u5207\u5272\u5217\u8868\u5c5e\u6027",caption:"\u8bfb\u53d6\u7ec4\u4ef6\u5207\u5272\u5217\u8868\u5c5e\u6027"},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528SOLIDWORKS API\u4ece\u6587\u4ef6\u3001\u914d\u7f6e\u548c\u5207\u5272\u5217\u8868\u5143\u7d20\u4e2d\u8bfb\u53d6\u81ea\u5b9a\u4e49\u5c5e\u6027",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/data-storage/custom-properties/read-all-properties/"},next:{title:"\u4f7f\u7528SOLIDWORKS API\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6458\u8981\u4fe1\u606f",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-api/data-storage/custom-properties/read-summary-information/"}},p={},l=[{value:"labels: \u5207\u5272\u5217\u8868\u5c5e\u6027,\u7ec4\u4ef6",id:"labels-\u5207\u5272\u5217\u8868\u5c5e\u6027\u7ec4\u4ef6",level:2}],c={toc:l},u="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,s.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u4f7f\u7528SOLIDWORKS API\u4ece\u88c5\u914d\u4f53\u4e2d\u6240\u9009\u7ec4\u4ef6\u7684\u5207\u5272\u5217\u8868\u4e2d\u8bfb\u53d6\u6240\u6709\u5c5e\u6027\u7684VBA\u5b8f\u793a\u4f8b\nimage: cut-list-properties.png"),(0,r.kt)("h2",{id:"labels-\u5207\u5272\u5217\u8868\u5c5e\u6027\u7ec4\u4ef6"},"labels: ","[\u5207\u5272\u5217\u8868\u5c5e\u6027,\u7ec4\u4ef6]"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"\u5207\u5272\u5217\u8868\u5c5e\u6027",src:n(87440).Z,width:"1453",height:"714"}),"{ width=550 }"),(0,r.kt)("p",null,"\u6b64VBA\u5b8f\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528SOLIDWORKS API\u4ece\u88c5\u914d\u4f53\u4e2d\u6240\u9009\u7ec4\u4ef6\u7684\u5207\u5272\u5217\u8868\u4e2d\u8bfb\u53d6\u5e76\u6253\u5370\u6240\u6709\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002"),(0,r.kt)("p",null,"\u5207\u5272\u5217\u8868\u662f\u4ece\u7ec4\u4ef6\u7684\u76f8\u5e94\u5f15\u7528\u914d\u7f6e\u4e2d\u8bfb\u53d6\u7684\u3002"),(0,r.kt)("p",null,"\u7ed3\u679c\u4ee5\u4ee5\u4e0b\u683c\u5f0f\u8f93\u51fa\u5230VBA\u7f16\u8f91\u5668\u7684\u5373\u65f6\u7a97\u53e3\u4e2d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CS-02-1 (A)\n    Sheet<1>\n        Bounding Box Length: 150\n        Bounding Box Width: 50\n        Sheet Metal Thickness: 0.74\n        Bounding Box Area: 7500\n        Bounding Box Area-Blank: 7500\n        Cutting Length-Outer: 400\n        Cutting Length-Inner: 0\n        Cut Outs: 0\n        Bends: 0\n        Bend Allowance: 0.5\n        Material: Material <not specified>\n        Mass: 5.52\n        Description: Sheet\n        Bend Radius: 0.74\n        Surface Treatment: Finish <not specified>\n        Cost-TotalCost: 0\n        QUANTITY: 1\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb"},'Dim swApp As SldWorks.SldWorks\n\nSub main()\n\n    Set swApp = Application.SldWorks\n    \n    Dim swModel As SldWorks.ModelDoc2\n    Set swModel = swApp.ActiveDoc\n    \n    If Not swModel Is Nothing Then\n        \n        If swModel.GetType() = swDocumentTypes_e.swDocASSEMBLY Then\n        \n            Dim swSelMgr As SldWorks.SelectionMgr\n            Set swSelMgr = swModel.SelectionManager\n            \n            Dim swComp As SldWorks.Component2\n            Set swComp = swSelMgr.GetSelectedObjectsComponent2(1)\n            \n            If Not swComp Is Nothing Then\n                PrintComponentCutListProperties swComp\n            Else\n                MsgBox "\u8bf7\u9009\u62e9\u7ec4\u4ef6"\n            End If\n            \n        Else\n            MsgBox "\u6d3b\u52a8\u6587\u6863\u4e0d\u662f\u88c5\u914d\u4f53"\n        End If\n    Else\n        MsgBox "\u8bf7\u6253\u5f00\u88c5\u914d\u4f53"\n    End If\n    \nEnd Sub\n\nSub PrintComponentCutListProperties(comp As SldWorks.Component2)\n    \n    Dim vCutLists As Variant\n    vCutLists = GetCutLists(comp)\n    \n    Debug.Print comp.Name2 & " (" & comp.ReferencedConfiguration & ")"\n    \n    If Not IsEmpty(vCutLists) Then\n    \n        Dim i As Integer\n        \n        For i = 0 To UBound(vCutLists)\n        \n            Dim swCutListFeat As SldWorks.Feature\n            Set swCutListFeat = vCutLists(i)\n            Debug.Print "    " & swCutListFeat.Name\n            \n            Dim swCustPrpsMgr As SldWorks.CustomPropertyManager\n            Set swCustPrpsMgr = swCutListFeat.CustomPropertyManager\n            \n            Dim vPrpNames As Variant\n            Dim vPrpTypes As Variant\n            Dim vPrpVals As Variant\n            Dim vResVals As Variant\n            Dim vPrpsLink As Variant\n            \n            Dim prpsCount As Integer\n            prpsCount = swCustPrpsMgr.GetAll3(vPrpNames, vPrpTypes, vPrpVals, vResVals, vPrpsLink)\n            \n            Dim j As Integer\n            \n            Dim indent As String\n            indent = "        "\n            \n            For j = 0 To prpsCount - 1\n                Debug.Print indent & vPrpNames(j) & ": " & vPrpVals(j)\n            Next\n            \n        Next\n    Else\n        Debug.Print "    -\u65e0\u5207\u5272\u5217\u8868-"\n    End If\n    \nEnd Sub\n\nFunction GetCutLists(comp As SldWorks.Component2) As Variant\n    \n    Dim swCutListFeats() As SldWorks.Feature\n    Dim isInit As Boolean\n    isInit = False\n    \n    Dim swFeat As SldWorks.Feature\n    Dim swBodyFolder As SldWorks.BodyFolder\n    \n    Set swFeat = comp.FirstFeature\n    \n    Do While Not swFeat Is Nothing\n        \n        If swFeat.GetTypeName2 = "CutListFolder" Then\n            \n            If Not isInit Then\n                isInit = True\n                ReDim swCutListFeats(0)\n            Else\n                ReDim Preserve swCutListFeats(UBound(swCutListFeats) + 1)\n            End If\n            \n            Set swCutListFeats(UBound(swCutListFeats)) = swFeat\n            \n        End If\n        \n        Set swFeat = swFeat.GetNextFeature\n        \n    Loop\n    \n    If isInit Then\n        GetCutLists = swCutListFeats\n    Else\n        GetCutLists = Empty\n    End If\n\nEnd Function\n')))}d.isMDXComponent=!0},87440:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/cut-list-properties-446a1e6850899db528a28797e447eff7.png"}}]);