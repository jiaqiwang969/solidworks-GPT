"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[84574],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=m(n),d=o,g=u["".concat(s,".").concat(d)]||u[d]||l[d]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},92436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>m});var r=n(87462),o=(n(67294),n(3905));const a={title:"Extract PNG preview image from active configuration using SOLIDWORKS Document Manager API",caption:"Extract PNG Preview Image From The Active Configuration",description:"Example demonstrates how to extract PNG preview image from the active configuration of SOLIDWORKS assembly or part using the document manager API."},i=void 0,c={unversionedId:"codestack/solidworks-document-manager-api/document/get-preview/index",id:"codestack/solidworks-document-manager-api/document/get-preview/index",title:"Extract PNG preview image from active configuration using SOLIDWORKS Document Manager API",description:"Example demonstrates how to extract PNG preview image from the active configuration of SOLIDWORKS assembly or part using the document manager API.",source:"@site/docs/codestack/solidworks-document-manager-api/document/get-preview/index.md",sourceDirName:"codestack/solidworks-document-manager-api/document/get-preview",slug:"/codestack/solidworks-document-manager-api/document/get-preview/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/document/get-preview/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/solidworks-document-manager-api/document/get-preview/index.md",tags:[],version:"current",frontMatter:{title:"Extract PNG preview image from active configuration using SOLIDWORKS Document Manager API",caption:"Extract PNG Preview Image From The Active Configuration",description:"Example demonstrates how to extract PNG preview image from the active configuration of SOLIDWORKS assembly or part using the document manager API."},sidebar:"tutorialSidebar",previous:{title:"Extract mass properties from all configurations using SOLIDWORKS Document Manager API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/document/get-mass-properties/"},next:{title:"Replace references in components or drawing views using SOLIDWORKS Document Manager API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/solidworks-document-manager-api/document/replace-references/"}},s={},m=[],p={toc:m},u="wrapper";function l(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Example demonstrates how to extract PNG preview image from the active configuration of SOLIDWORKS assembly or part using the document manager API."),(0,o.kt)("p",null,"This approach would work for both in-process and out-of-process application."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create C# Console application"),(0,o.kt)("li",{parentName:"ul"},"Paste the code"),(0,o.kt)("li",{parentName:"ul"},"Run the application with 2 arguments: full path to the input SOLIDWORKS part or assembly and full path to output PNG image")),(0,o.kt)("p",null,"This example is using the ",(0,o.kt)("a",{parentName:"p",href:"https://help.solidworks.com/2018/english/api/swdocmgrapi/solidworks.interop.swdocumentmgr~solidworks.interop.swdocumentmgr.iswdmconfiguration9~getpreviewpngbitmapbytes.html"},"ISwDMConfiguration9::GetPreviewPNGBitmapBytes")," SOLIDWORKS Document Manager API to extract byte buffer of preview and convert it to an ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.drawing.image?view=netframework-4.7.2"},"Image")," object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'using SwDocumentMgr;\nusing System;\nusing System.Drawing;\nusing System.IO;\n\nnamespace CodeStackExample\n{\n    class Program\n    {\n        const string LICENSE_KEY = "[Document Manager License Key]";\n\n        static void Main(string[] args)\n        {\n            var filePath = args[0];\n            var outImgFilePath = args[1];\n\n            var classFact = new SwDMClassFactory();\n\n            var app = classFact.GetApplication(LICENSE_KEY);\n\n            var docType = SwDmDocumentType.swDmDocumentUnknown;\n\n            switch (Path.GetExtension(filePath).ToLower())\n            {\n                case ".sldprt":\n                    docType = SwDmDocumentType.swDmDocumentPart;\n                    break;\n\n                case ".sldasm":\n                    docType = SwDmDocumentType.swDmDocumentAssembly;\n                    break;\n\n                case ".slddrw":\n                    docType = SwDmDocumentType.swDmDocumentDrawing;\n                    break;\n            }\n\n            SwDmDocumentOpenError err;\n            var doc = app.GetDocument(filePath, docType, true, out err);\n\n            if (doc != null)\n            {\n                var activeConfName = doc.ConfigurationManager.GetActiveConfigurationName();\n\n                var conf = doc.ConfigurationManager.GetConfigurationByName(activeConfName) as ISwDMConfiguration14;\n\n                SwDmPreviewError previewErr;\n                var imgBytes = conf.GetPreviewPNGBitmapBytes(out previewErr) as byte[];\n\n                if (previewErr == SwDmPreviewError.swDmPreviewErrorNone)\n                {\n                    using (var memStr = new MemoryStream(imgBytes))\n                    {\n                        memStr.Seek(0, SeekOrigin.Begin);\n                        var img = Image.FromStream(memStr);\n                        img.Save(outImgFilePath);\n                    }\n                }\n                else\n                {\n                    Console.WriteLine($"Failed to extract preview from the document: {previewErr}");\n                }\n            }\n            else\n            {\n                Console.WriteLine($"Failed to open the document: {err}");\n            }\n        }\n    }\n}\n')))}l.isMDXComponent=!0}}]);