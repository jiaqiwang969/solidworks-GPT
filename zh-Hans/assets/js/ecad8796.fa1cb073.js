"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[13838],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||i;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},96142:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const i={title:"Capture measurement of SOLIDWORKS entities using eDrawings markup API",caption:"Capturing Measurements",description:"Performing measurements capturing of the entities in the SOLIDWORKS model into a text box using eDrawings markup API",image:"surveying-form.png",labels:["edrawings","markup","mesurement"]},o=void 0,s={unversionedId:"codestack-clone/edrawings-api/markup/measurement/index",id:"codestack-clone/edrawings-api/markup/measurement/index",title:"Capture measurement of SOLIDWORKS entities using eDrawings markup API",description:"Performing measurements capturing of the entities in the SOLIDWORKS model into a text box using eDrawings markup API",source:"@site/docs/codestack-clone/edrawings-api/markup/measurement/index.md",sourceDirName:"codestack-clone/edrawings-api/markup/measurement",slug:"/codestack-clone/edrawings-api/markup/measurement/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/edrawings-api/markup/measurement/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack-clone/edrawings-api/markup/measurement/index.md",tags:[],version:"current",frontMatter:{title:"Capture measurement of SOLIDWORKS entities using eDrawings markup API",caption:"Capturing Measurements",description:"Performing measurements capturing of the entities in the SOLIDWORKS model into a text box using eDrawings markup API",image:"surveying-form.png",labels:["edrawings","markup","mesurement"]},sidebar:"tutorialSidebar",previous:{title:"Utilizing markup functionality using SOLIDWORKS eDrawings API",permalink:"/solidworks-GPT/zh-Hans/docs/codestack-clone/edrawings-api/markup/"},next:{title:"output",permalink:"/solidworks-GPT/zh-Hans/docs/category/output"}},l={},u=[],p={toc:u},m="wrapper";function c(e){let{components:n,...i}=e;return(0,a.kt)(m,(0,r.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Measurement captured in the text box",src:t(17102).Z,width:"741",height:"466"}),"{ width=450 }"),(0,a.kt)("p",null,"This example demonstrate how to use eDrawings markup API to capture the measurements of selected entities into a text box."),(0,a.kt)("p",null,"This example is based on ",(0,a.kt)("a",{parentName:"p",href:"/docs/codestack/edrawings-api/gettings-started/winforms/"},"Hosting eDrawings control in Windows Forms")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run the form"),(0,a.kt)("li",{parentName:"ul"},"Open any SOLIDWORKS or eDrawings file by specifying the full path to a file and clicking ",(0,a.kt)("em",{parentName:"li"},"Open")," button"),(0,a.kt)("li",{parentName:"ul"},"Measurement is automatically enabled"),(0,a.kt)("li",{parentName:"ul"},"Select any entity or entities and click ",(0,a.kt)("em",{parentName:"li"},"Capture Measurement"),". The measurement value is appended into a text box")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'using eDrawings.Interop.EModelMarkupControl;\nusing eDrawings.Interop.EModelViewControl;\nusing System;\nusing System.Diagnostics;\nusing System.Windows.Forms;\n\nnamespace CodeStack.Examples.eDrawingsApi\n{\n    public partial class MainForm : Form\n    {\n        private EModelViewControl m_EDrawingsCtrl;\n        private EModelMarkupControl m_EDrawingsMarkupCtrl;\n\n        public MainForm()\n        {\n            InitializeComponent();\n        }\n\n        protected override void OnShown(EventArgs e)\n        {\n            base.OnShown(e);\n\n            ctrlEDrw.LoadEDrawings();\n        }\n\n        private void OnControlLoaded(EModelViewControl ctrl)\n        {\n            m_EDrawingsCtrl = ctrl;\n\n            m_EDrawingsCtrl.OnFinishedLoadingDocument += OnFinishedLoadingDocument;\n            m_EDrawingsCtrl.OnFailedLoadingDocument += OnFailedLoadingDocument;\n\n            m_EDrawingsMarkupCtrl = m_EDrawingsCtrl.CoCreateInstance("EModelViewMarkup.EModelMarkupControl") as EModelMarkupControl;\n        }\n\n        private void OnFailedLoadingDocument(string fileName, int errorCode, string errorString)\n        {\n            Trace.WriteLine($"{fileName} failed to loaded: {errorString}");\n        }\n\n        private void OnFinishedLoadingDocument(string fileName)\n        {\n            Trace.WriteLine($"{fileName} loaded");\n            \n            m_EDrawingsMarkupCtrl.ViewOperator = EMVMarkupOperators.eMVOperatorMeasure;\n        }\n        \n        private void OnOpen(object sender, EventArgs e)\n        {\n            var filePath = txtFilePath.Text;\n\n            if (!string.IsNullOrEmpty(filePath))\n            {\n                if (m_EDrawingsCtrl == null)\n                {\n                    throw new NullReferenceException("eDrawings control is not loaded");\n                }\n\n                txtMeasurements.Clear();\n                m_EDrawingsCtrl.CloseActiveDoc("");\n                m_EDrawingsCtrl.OpenDoc(filePath, false, false, false, "");\n            }\n        }\n\n        private void OnCaptureMeasurement(object sender, EventArgs e)\n        {\n            txtMeasurements.Text += (!string.IsNullOrEmpty(txtMeasurements.Text) ? Environment.NewLine : "") \n                + m_EDrawingsMarkupCtrl.MeasureResultString;\n        }\n    }\n}\n\n')),(0,a.kt)("p",null,"Source code is available on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/codestackdev/solidworks-api-examples/tree/master/edrawings-api/MeasurementSurveying"},"GitHub"),"."))}c.isMDXComponent=!0},17102:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/surveying-form-87ef2de9a10199f241b4dd44a1f86687.png"}}]);