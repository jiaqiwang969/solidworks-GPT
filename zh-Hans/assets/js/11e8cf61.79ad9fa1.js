"use strict";(self.webpackChunksolidworks_gpt=self.webpackChunksolidworks_gpt||[]).push([[38728],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),g=i,m=p["".concat(c,".").concat(g)]||p[g]||d[g]||o;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},32793:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),i=(r(67294),r(3905));const o={title:"Convert array to dictionary in Visual Basic",caption:"Grouping",description:"This example shows how to group the array of the elements into the dictionary by using the key selector in Visual Basic"},a=void 0,s={unversionedId:"codestack/visual-basic/algorithms/data/grouping/index",id:"codestack/visual-basic/algorithms/data/grouping/index",title:"Convert array to dictionary in Visual Basic",description:"This example shows how to group the array of the elements into the dictionary by using the key selector in Visual Basic",source:"@site/docs/codestack/visual-basic/algorithms/data/grouping/index.md",sourceDirName:"codestack/visual-basic/algorithms/data/grouping",slug:"/codestack/visual-basic/algorithms/data/grouping/",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/visual-basic/algorithms/data/grouping/",draft:!1,editUrl:"https://github.com/jiaqiwang969/solidworks-GPT/edit/main/website/docs/codestack/visual-basic/algorithms/data/grouping/index.md",tags:[],version:"current",frontMatter:{title:"Convert array to dictionary in Visual Basic",caption:"Grouping",description:"This example shows how to group the array of the elements into the dictionary by using the key selector in Visual Basic"},sidebar:"tutorialSidebar",previous:{title:"Encoding and decoding data in Base64 string format in Visual Basic 6 (VBA)",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/visual-basic/algorithms/data/encoding/base64/"},next:{title:"Helper functions for Visual Basic 6",permalink:"/solidworks-GPT/zh-Hans/docs/codestack/visual-basic/algorithms/data/helpers/"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This Visual Basic example shows how to group the array of the elements into the dictionary by using the key selector"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vb"},'Sub main()\n\n    Dim strArr(6) As String\n    \n    strArr(0) = "A"\n    strArr(1) = "B"\n    strArr(2) = "C"\n    strArr(3) = "A"\n    strArr(4) = "B"\n    strArr(5) = "C"\n    strArr(6) = "C"\n    \n    Dim groups As Object\n    Set groups = ToDictionary(strArr)\n\n    \'A x 2\n    \'B x 2\n    \'C x 3\n    For Each key In groups.Keys\n        Debug.Print key & " x " & UBound(groups.Item(key)) + 1\n    Next\n    \nEnd Sub\n\nFunction ToDictionary(arr As Variant) As Object\n    \n    Dim dict As Object\n    Set dict = CreateObject("Scripting.Dictionary")\n        \n    If Not IsEmpty(arr) Then\n    \n        For Each elem In arr\n        \n            Dim group() As Variant\n            Dim key As Variant\n            \n            key = KeySelector(elem)\n            \n            If dict.Exists(key) Then\n                group = dict.Item(key)\n                ReDim Preserve group(UBound(group) + 1)\n                group(UBound(group)) = elem\n                dict.Item(key) = group\n            Else\n                ReDim group(0)\n                group(0) = elem\n                dict.Add key, group\n            End If\n            \n        Next\n        \n    End If\n\n    Set ToDictionary = dict\n    \nEnd Function\n\n\'modify the key selector to work with complex structures if required\nFunction KeySelector(elem As Variant) As Variant\n    KeySelector = elem\nEnd Function\n')))}d.isMDXComponent=!0}}]);